1592894806986:dat_dfs <- read_json("data/survey-0-dfs.json")
1592894810243:library(readr)
1592894810433:library(jsonlite)
1592894812537:dat_dfs <- read_json("data/survey-0-dfs.json")
1592894832892:dat_dfs
1592894855093:dat_dfs <- as.data.frame(read_json("data/survey-0-dfs.json"))
1592894858165:View(dat_dfs)
1592894910256:dat_dfs <- read_csv("data/survey-0-dfs.csv")
1592895009762:dat_dfs <- as.data.frame(read_json("data/survey-0-dfs.json"))
1592895032091:dat_dfs <- read_csv("data/survey-0-dfs.csv")
1592895041722:colnames(dat_dfs)
1592898768691:dat_dfs <- read_csv("data/survey-0-dfs.csv")
1592898769609:dat_dfs <- as.data.frame(read_json("data/survey-0-dfs.json"))
1592898774682:dat_dfs <- read_csv("data/survey-0-dfs.csv")
1592898780698:dat_dfs
1592898786027:View(dat_dfs)
1592898866058:dat_dfs <- as.data.frame(read_json("data/survey-0-dfs.json"))
1592898869094:View(dat_dfs)
1592898888439:dat_dfs <- as.data.frame(read_json("data/survey-0-dfs.json"))
1592898893076:View(dat_dfs)
1592898923702:dat_dfs <- read_json("data/survey-0-dfs.json")
1592898928793:dat_dfs
1592898932562:dat_dfs[[1]]
1592898934961:dat_dfs[[2]]
1592899137588:dat_dfs <- read_csv("data/survey-0-dfs.csv")
1592899139722:View(dat_dfs)
1592901604892:library(jsonlite)
1592901605238:dfs_dat <- do.call(rbind, lapply(
1592901607712:dfs_dat <- do.call(rbind, lapply(
1592901608420:, FUN = function(item) {
1592901608500:cbind("nome" = item$name
1592901608522:, "nascimento" = item$birth_date
1592901608545:, "email" = item$email
1592901608565:, "genero" = item$gender
1592901608624:, "estado_civil" = item$martial_status
1592901608659:, "etinia" = item$ethnicity
1592901608683:, "familia" = item$family
1592901608705:, "orientacao_sexual" = item$sexual_orientation
1592901608732:, "atividade" = item$activity
1592901608754:, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901608787:cbind(paste0("dimensao", i) = item$summary[[i]])
1592901608869:}))
1592901608890:}))
1592901611890:, FUN = function(item) {
1592901611915:cbind("nome" = item$name
1592901611944:, "nascimento" = item$birth_date
1592901611973:, "email" = item$email
1592901612002:, "genero" = item$gender
1592901612034:, "estado_civil" = item$martial_status
1592901612090:, "etinia" = item$ethnicity
1592901612129:, "familia" = item$family
1592901612150:, "orientacao_sexual" = item$sexual_orientation
1592901612177:, "atividade" = item$activity
1592901612197:, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901612218:cbind(paste0("dimensao", i) = item$summary[[i]])
1592901612242:}))
1592901612265:}))
1592901682849:dfs_dat <- do.call(rbind, lapply(read_json("data/survey-0-dfs.json")
1592901691902:dfs_dat <- do.call(rbind, lapply(read_json("data/survey-0-dfs.json"), FUN = function(item) {
1592901695197:dfs_dat <- do.call(rbind, lapply(read_json("data/survey-0-dfs.json"), FUN = function(item) {
1592901698830:}))
1592901710955:dfs_dat <- do.call(
1592901715318:dat_dfs[[2]])
1592901720355:rbind
1592901759469:, lapply(read_json("data/survey-0-dfs.json"), FUN = function(item) {
1592901759493:cbind("nome" = item$name
1592901759519:, "nascimento" = item$birth_date
1592901759543:, "email" = item$email
1592901759566:, "genero" = item$gender
1592901759588:, "estado_civil" = item$martial_status
1592901759609:, "etinia" = item$ethnicity
1592901759629:, "familia" = item$family
1592901759649:, "orientacao_sexual" = item$sexual_orientation
1592901759669:, "atividade" = item$activity
1592901759689:, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901759711:df <- dataframe(item$summary[[i]])
1592901759733:colnames(df) <- paste0("dimensao", i)
1592901759759:}))
1592901759781:}))
1592901810663:dfs_dat <- do.call(
1592901810687:rbind
1592901810711:, lapply(
1592901810734:read_json("data/survey-0-dfs.json")
1592901810757:, FUN = function(item) {
1592901810817:cbind("nome" = item$name
1592901810845:, "nascimento" = item$birth_date
1592901810868:, "email" = item$email
1592901810898:, "genero" = item$gender
1592901810923:, "estado_civil" = item$martial_status
1592901810946:, "etinia" = item$ethnicity
1592901810965:, "familia" = item$family
1592901810986:, "orientacao_sexual" = item$sexual_orientation
1592901811008:, "atividade" = item$activity
1592901811029:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901811047:# df <- dataframe(item$summary[[i]])
1592901811083:# colnames(df) <- paste0("dimensao", i)
1592901811107:#}
1592901811130:))
1592901811151:}))
1592901825950:dfs_dat <- do.call(
1592901825978:rbind
1592901826002:, lapply(
1592901826041:read_json("data/survey-0-dfs.json")
1592901826063:, FUN = function(item) {
1592901826086:cbind("nome" = item$name
1592901826110:, "nascimento" = item$birth_date
1592901826130:, "email" = item$email
1592901826151:, "genero" = item$gender
1592901826172:, "estado_civil" = item$martial_status
1592901826193:, "etinia" = item$ethnicity
1592901826213:, "familia" = item$family
1592901826236:, "orientacao_sexual" = item$sexual_orientation
1592901826257:, "atividade" = item$activity
1592901826284:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901826306:# df <- dataframe(item$summary[[i]])
1592901826331:# colnames(df) <- paste0("dimensao", i)
1592901826351:#}
1592901826396:))
1592901826418:})
1592901852923:, FUN = function(item) {
1592901852953:cbind("nome" = item$name
1592901852982:, "nascimento" = item$birth_date
1592901853009:, "email" = item$email
1592901853035:, "genero" = item$gender
1592901853058:, "estado_civil" = item$martial_status
1592901853078:, "etinia" = item$ethnicity
1592901853104:, "familia" = item$family
1592901853130:, "orientacao_sexual" = item$sexual_orientation
1592901853157:, "atividade" = item$activity
1592901853179:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901853204:# df <- dataframe(item$summary[[i]])
1592901853227:# colnames(df) <- paste0("dimensao", i)
1592901853258:#}
1592901853281:)
1592901853307:})
1592901860946:dfs_dat <- do.call(
1592901866664:)
1592901871442:, FUN = function(item) {
1592901871462:cbind("nome" = item$name
1592901871486:, "nascimento" = item$birth_date
1592901871505:, "email" = item$email
1592901871524:, "genero" = item$gender
1592901871543:, "estado_civil" = item$martial_status
1592901871586:, "etinia" = item$ethnicity
1592901871606:, "familia" = item$family
1592901871632:, "orientacao_sexual" = item$sexual_orientation
1592901871653:, "atividade" = item$activity
1592901871673:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901871696:# df <- dataframe(item$summary[[i]])
1592901871734:# colnames(df) <- paste0("dimensao", i)
1592901871759:#}
1592901871786:)
1592901871811:})
1592901904413:dfs_dat <- do.call(
1592901904439:rbind, lapply(
1592901904464:read_json("data/survey-0-dfs.json")
1592901904493:, FUN = function(item) {
1592901904517:data.frame("nome" = item$name
1592901904540:, "nascimento" = item$birth_date
1592901904564:, "email" = item$email
1592901904587:, "genero" = item$gender
1592901904624:, "estado_civil" = item$martial_status
1592901904645:, "etinia" = item$ethnicity
1592901904670:, "familia" = item$family
1592901904692:, "orientacao_sexual" = item$sexual_orientation
1592901904715:, "atividade" = item$activity
1592901904737:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901904762:# df <- dataframe(item$summary[[i]])
1592901904785:# colnames(df) <- paste0("dimensao", i)
1592901904803:#}
1592901904822:)
1592901904846:}))
1592901926159:dfs_dat <- do.call(
1592901926185:rbind, lapply(
1592901926207:read_json("data/survey-0-dfs.json")
1592901926233:, FUN = function(item) {
1592901926255:data.frame("nome" = item$name
1592901926276:, "nascimento" = item$birth_date
1592901926298:, "email" = item$email
1592901926319:, "genero" = item$gender
1592901926340:, "estado_civil" = item$martial_status
1592901926362:, "etinia" = item$ethnicity
1592901926381:, "familia" = item$family
1592901926403:, "orientacao_sexual" = item$sexual_orientation
1592901926423:, "atividade" = item$activity
1592901926442:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901926464:# df <- dataframe(item$summary[[i]])
1592901926485:# colnames(df) <- paste0("dimensao", i)
1592901926511:#}
1592901926533:)
1592901926559:}))
1592901965331:library(jsonlite)
1592901965612:dfs_dat <- do.call(
1592901965635:rbind, lapply(
1592901965659:read_json("data/survey-0-dfs.json")
1592901965683:, FUN = function(item) {
1592901965705:data.frame("nome" = item$name
1592901965730:, "nascimento" = item$birth_date
1592901965754:, "email" = item$email
1592901965782:#, "genero" = item$gender
1592901965806:#, "estado_civil" = item$martial_status
1592901965828:#, "etinia" = item$ethnicity
1592901965849:#, "familia" = item$family
1592901965869:#, "orientacao_sexual" = item$sexual_orientation
1592901965891:#, "atividade" = item$activity
1592901965912:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901965936:# df <- dataframe(item$summary[[i]])
1592901965958:# colnames(df) <- paste0("dimensao", i)
1592901965978:#}
1592901966000:)
1592901966022:}))
1592901972319:View(dat_dfs)
1592901979505:View(dfs_dat)
1592901994599:dfs_dat <- do.call(
1592901994622:rbind, lapply(
1592901994643:read_json("data/survey-0-dfs.json")
1592901994662:, FUN = function(item) {
1592901994687:data.frame("nome" = item$name
1592901994707:, "nascimento" = item$birth_date
1592901994726:, "email" = item$email
1592901994746:, "genero" = item$gender
1592901994767:, "estado_civil" = item$martial_status
1592901994789:, "etinia" = item$ethnicity
1592901994809:#, "familia" = item$family
1592901994828:#, "orientacao_sexual" = item$sexual_orientation
1592901994849:#, "atividade" = item$activity
1592901994868:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592901994894:# df <- dataframe(item$summary[[i]])
1592901994917:# colnames(df) <- paste0("dimensao", i)
1592901994942:#}
1592901994967:)
1592901994994:}))
1592902011643:dfs_dat <- do.call(
1592902011670:rbind, lapply(
1592902011692:read_json("data/survey-0-dfs.json")
1592902011717:, FUN = function(item) {
1592902011737:data.frame("nome" = item$name
1592902011757:, "nascimento" = item$birth_date
1592902011784:, "email" = item$email
1592902011807:, "genero" = item$gender
1592902011833:, "estado_civil" = item$martial_status
1592902011860:, "etinia" = item$ethnicity
1592902011888:#, "familia" = item$family
1592902011912:#, "orientacao_sexual" = item$sexual_orientation
1592902011934:#, "atividade" = item$activity
1592902011958:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902011978:# df <- dataframe(item$summary[[i]])
1592902012001:# colnames(df) <- paste0("dimensao", i)
1592902012020:#}
1592902012038:)
1592902012057:}))
1592902029727:item <- read_json("data/survey-0-dfs.json")[[1]]
1592902042156:item$email
1592902057025:dfs_dat <- do.call(
1592902057053:rbind, lapply(
1592902057079:read_json("data/survey-0-dfs.json")
1592902057104:, FUN = function(item) {
1592902057131:data.frame("nome" = item$name
1592902057152:, "nascimento" = item$birth_date
1592902057175:, "email" = item$email
1592902057196:, "genero" = item$gender
1592902057216:, "estado_civil" = item$martial_status
1592902057244:, "etinia" = item$ethnicity
1592902057266:#, "familia" = item$family
1592902057295:#, "orientacao_sexual" = item$sexual_orientation
1592902057319:#, "atividade" = item$activity
1592902057340:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902057359:# df <- dataframe(item$summary[[i]])
1592902057380:# colnames(df) <- paste0("dimensao", i)
1592902057398:#}
1592902057418:)
1592902057437:}))
1592902088748:dfs_dat <- do.call(
1592902088771:rbind, lapply(
1592902088797:read_json("data/survey-0-dfs.json")
1592902088822:, FUN = function(item) {
1592902088860:data.frame("nome" = item$name
1592902088898:, "nascimento" = item$birth_date
1592902088920:, "email" = item$email
1592902088942:, "genero" = item$email
1592902088968:, "estado_civil" = item$marital_status
1592902088993:, "etinia" = item$ethnicity
1592902089014:#, "familia" = item$family
1592902089036:#, "orientacao_sexual" = item$sexual_orientation
1592902089054:#, "atividade" = item$activity
1592902089072:#, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902089098:# df <- dataframe(item$summary[[i]])
1592902089121:# colnames(df) <- paste0("dimensao", i)
1592902089145:#}
1592902089166:)
1592902089189:}))
1592902103274:, FUN = function(item) {
1592902103302:data.frame("nome" = item$name
1592902103376:, "nascimento" = item$birth_date
1592902103403:, "email" = item$email
1592902103427:, "genero" = item$email
1592902103454:, "estado_civil" = item$marital_status
1592902103477:, "etinia" = item$ethnicity
1592902103504:, "familia" = item$family
1592902103531:, "orientacao_sexual" = item$sexual_orientation
1592902103553:, "atividade" = item$activity
1592902103585:, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902103608:df <- dataframe(item$summary[[i]])
1592902103632:colnames(df) <- paste0("dimensao", i)
1592902103654:}
1592902103721:)
1592902103741:}))
1592902112775:, FUN = function(item) {
1592902112802:data.frame("nome" = item$name
1592902112830:, "nascimento" = item$birth_date
1592902112856:, "email" = item$email
1592902112881:, "genero" = item$email
1592902112904:, "estado_civil" = item$marital_status
1592902112927:, "etinia" = item$ethnicity
1592902112947:, "familia" = item$family
1592902112966:, "orientacao_sexual" = item$sexual_orientation
1592902112987:, "atividade" = item$activity
1592902113007:, do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902113027:df <- dataframe(item$summary[[i]])
1592902113047:colnames(df) <- paste0("dimensao", i)
1592902113067:}
1592902113095:))
1592902113134:}))
1592902125058:, FUN = function(item) {
1592902125081:data.frame("nome" = item$name
1592902125104:, "nascimento" = item$birth_date
1592902125126:, "email" = item$email
1592902125151:, "genero" = item$email
1592902125176:, "estado_civil" = item$marital_status
1592902125203:, "etinia" = item$ethnicity
1592902125227:, "familia" = item$family
1592902125255:, "orientacao_sexual" = item$sexual_orientation
1592902125276:, "atividade" = item$activity
1592902125301:}))
1592902142962:dfs_dat <- do.call(
1592902142986:rbind, lapply(
1592902143017:read_json("data/survey-0-dfs.json")
1592902143047:, FUN = function(item) {
1592902143075:data.frame("nome" = item$name
1592902143101:, "nascimento" = item$birth_date
1592902143123:, "email" = item$email
1592902143152:, "genero" = item$email
1592902143178:, "estado_civil" = item$marital_status
1592902143202:, "etinia" = item$ethnicity
1592902143222:, "familia" = item$family
1592902143246:, "orientacao_sexual" = item$sexual_orientation
1592902143267:, "atividade" = item$activity
1592902143290:)
1592902143312:}))
1592902147371:View(dfs_dat)
1592902185979:do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902186006:df <- dataframe(item$summary[[i]])
1592902186029:colnames(df) <- paste0("dimensao", i)
1592902186052:}
1592902186076:))
1592902204372:do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902204394:df <- data.frame(item$summary[[i]])
1592902204414:colnames(df) <- paste0("dimensao", i)
1592902204437:}
1592902210465:)
1592902212278:)
1592902240322:do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902240363:df <- data.frame(item$summary[[i]])
1592902240389:colnames(df) <- paste0("dimensao", i)
1592902240411:return(df)
1592902240430:}))
1592902242712:do.call(cbind, lapply(seq(1,length(item$summary)), FUN = function(i) {
1592902242734:df <- data.frame(item$summary[[i]])
1592902242755:colnames(df) <- paste0("dimensao", i)
1592902242777:return(df)
1592902242796:}))
1592902256044:seq(1,length(item$summary))
1592902281223:do.call(cbind, lapply(seq(1,length(item$results$summary)), FUN = function(i) {
1592902281254:df <- data.frame(item$summary[[i]])
1592902281284:colnames(df) <- paste0("dimensao", i)
1592902281310:return(df)
1592902281339:}))
1592902291793:seq(1,length(item$results$summary))
1592902311621:seq(1,length(item$results$answers
1592902315735:))
1592902324034:seq(1,length(item$results$answers[[1]]))
1592902333006:do.call(cbind, lapply(seq(1,length(item$results$summary)), FUN = function(i) {
1592902333026:df <- data.frame(item$summary[[i]])
1592902333049:colnames(df) <- paste0("dimensao", i)
1592902333074:return(df)
1592902333097:}))
1592902347780:do.call(cbind, lapply(seq(1,length(item$results$summary)), FUN = function(i) {
1592902347803:df <- data.frame(item$results$summary[[i]])
1592902347826:colnames(df) <- paste0("dimensao", i)
1592902347850:return(df)
1592902347873:}))
1592902402924:do.call(cbind, lapply(seq(1,length(item$results$summary)), FUN = function(i) {
1592902402949:#df <- data.frame(item$results$summary[[i]])
1592902402972:#colnames(df) <- paste0("dimensao", i)
1592902402994:#return(df)
1592902403018:cbind(paste0("dimensao", i) = item$results$summary[[i]])
1592902403044:}))
1592902413345:do.call(cbind, lapply(seq(1,length(item$results$summary)), FUN = function(i) {
1592902413372:#df <- data.frame(item$results$summary[[i]])
1592902413399:#colnames(df) <- paste0("dimensao", i)
1592902413428:#return(df)
1592902413455:cbind(paste0("dimensao", i) = item$results$summary[[i]])
1592902413480:}))
1592902452357:do.call(cbind, lapply(seq(1,length(item$results$summary)), FUN = function(i) {
1592902452432:df <- data.frame(item$results$summary[[i]])
1592902452464:colnames(df) <- paste0("dimensao", i)
1592902452494:return(df)
1592902452530:#cbind(paste0("dimensao", i) = item$results$summary[[i]])
1592902452560:}))
1592902475448:do.call(cbind, lapply(seq(1,length(item$results$summary)), FUN = function(i) {
1592902475470:df <- data.frame(paste0("dimensao", i) = item$results$summary[[i]])
1592902475489:#colnames(df) <- paste0("dimensao", i)
1592902475508:return(df)
1592902475527:#cbind(paste0("dimensao", i) = item$results$summary[[i]])
1592902475546:}))
1592902505447:do.call(cbind, lapply(seq(1,length(item$results$summary)), FUN = function(i) {
1592902505477:df <- data.frame(item$results$summary[[i]])
1592902505502:colnames(df) <- paste0("dimensao", i)
1592902505528:return(df)
1592902505556:#cbind(paste0("dimensao", i) = item$results$summary[[i]])
1592902505579:}))
1592902603140:seq(1,length(item$results$answers[[1]]))
1592902613996:library(readr)
1592902614222:dat_dfs <- read_csv("data/survey-0-dfs.csv")
1592902622976:colnames(dfs_dat)
1592902626723:library(readr)
1592902633673:dfs_dat <- read_csv("data/survey-0-dfs.csv")
1592902637045:colnames(dfs_dat)
1592902686334:library(jsonlite)
1592902686999:dfs_dat <- do.call(
1592902687025:rbind, lapply(
1592902687051:read_json("data/survey-0-dfs.json")
1592902687078:, FUN = function(item) {
1592902687102:data.frame("nome" = item$name
1592902687128:, "nascimento" = item$birth_date
1592902687151:, "email" = item$email
1592902687172:, "genero" = item$email
1592902687191:, "estado_civil" = item$marital_status
1592902687209:, "etinia" = item$ethnicity
1592902687232:, "familia" = item$family
1592902687253:, "orientacao_sexual" = item$sexual_orientation
1592902687271:, "atividade" = item$activity
1592902687290:, do.call(cbind, lapply(seq(1,length(item$results$summary))
1592902687309:, FUN = function(i) {
1592902687327:df <- data.frame(item$results$summary[[i]])
1592902687347:colnames(df) <- paste0("dimensao", i)
1592902687371:return(df)
1592902687393:}))
1592902687412:, do.call(cbind, lapply(seq(1,length(item$results$answers[[1]]))
1592902687439:, FUN = function(i) {
1592902687459:df <- data.frame(item$results$answers[[1]][[i]])
1592902687478:colnames(df) <- paste0("Q", i)
1592902687498:return(df)
1592902687518:}))
1592902687538:)
1592902687563:}))
1592902691698:View(dfs_dat)
1592902878405:library(jsonlite)
1592902878791:dfs_dat <- do.call(
1592902878814:rbind, lapply(
1592902878844:read_json("data/survey-0-dfs.json")
1592902878867:, FUN = function(item) {
1592902878896:data.frame("nome" = item$name
1592902878920:, "nascimento" = item$birth_date
1592902878945:, "email" = item$email
1592902878968:, "genero" = item$email
1592902878996:, "estado_civil" = item$marital_status
1592902879021:, "etinia" = item$ethnicity
1592902879043:, "familia" = item$family
1592902879064:, "orientacao_sexual" = item$sexual_orientation
1592902879085:, "atividade" = item$activity
1592902879120:, do.call(cbind, lapply(
1592902879145:seq(1,length(item$results$summary))
1592902879173:, FUN = function(i) {
1592902879196:df <- data.frame(item$results$summary[[i]])
1592902879219:colnames(df) <- paste0("dimensao", i)
1592902879246:return(df)
1592902879265:}))
1592902879443:, do.call(cbind, lapply(
1592902879470:seq(1,length(item$results$answers[[1]]))
1592902879494:, FUN = function(i) {
1592902879518:df <- data.frame(item$results$answers[[1]][[i]])
1592902879538:colnames(df) <- paste0("Q", i)
1592902879559:return(df)
1592902879579:}))
1592902879598:)
1592902879619:}))
1592902880975:library(readr)
1592902881259:dfs_dat <- read_csv("data/survey-0-dfs.csv")
1592902989588:library(readr)
1592902989994:(dfs_dat <- read_csv("data/survey-0-dfs.csv"))
1592927135203:library(jsonlite)
1592927135574:dfs_dat <- do.call(
1592927135596:rbind, lapply(
1592927135618:read_json("data/survey-0-dfs.json")
1592927135638:, FUN = function(item) {
1592927135656:data.frame("nome" = item$name
1592927135700:, "nascimento" = item$birth_date
1592927135723:, "email" = item$email
1592927135744:, "genero" = item$email
1592927135883:, "estado_civil" = item$marital_status
1592927135909:, "etinia" = item$ethnicity
1592927135931:, "familia" = item$family
1592927135954:, "orientacao_sexual" = item$sexual_orientation
1592927136058:, "atividade" = item$activity
1592927136083:, do.call(cbind, lapply(
1592927136129:seq(1,length(item$results$summary))
1592927136149:, FUN = function(i) {
1592927136168:df <- data.frame(item$results$summary[[i]])
1592927136190:colnames(df) <- paste0("dimensao", i)
1592927136213:return(df)
1592927136234:}))
1592927136257:, do.call(cbind, lapply(
1592927136283:seq(1,length(item$results$answers[[1]]))
1592927136302:, FUN = function(i) {
1592927136324:df <- data.frame(item$results$answers[[1]][[i]])
1592927136346:colnames(df) <- paste0("Q", i)
1592927136368:return(df)
1592927136389:}))
1592927136437:)
1592927136465:}))
1592927136891:library(readr)
1592927138040:(dfs_dat <- read_csv("data/survey-0-dfs.csv"))
1592927812690:## tratamento de respostas descuidadas (careless response)
1592927812777:library(careless)
1592927821840:longstring(dfs_dat)
1592928254770:careless_dfs_long <- longstring (dfs_dat)
1592928258747:boxplot (careless_dfs_long, main = "Boxplot do Longstring no DFS")
1592928295873:?boxplot
1592928323700:careless_dfs_long
1592928547370:car::Boxplot(careless_dfs_long)
1592928584148:dfs_dat[c(11,27),]
1592928596641:View(dfs_dat[c(11,27),])
1592928626905:car::Boxplot(careless_dfs_long, main = "Boxplot do Longstring no questionario DFS")
1592928627383:View(dfs_dat[c(11,27),])
1592928914213:(careless_dfs_long <- longstring (dfs_dat))
1592929007205:?car::Boxplot
1592929575498:library(jsonlite)   # biblioteca para o processamento de json
1592929575660:library(readr)      # biblioteca para leitura de arquivos CVS
1592929575806:library(careless)   # biblioteca para tratamento de respostas descuidadas
1592929575963:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1592929580461:dfs_dat <- do.call(
1592929580493:rbind, lapply(
1592929580533:read_json("data/survey-0-dfs.json")
1592929580558:, FUN = function(item) {
1592929580587:data.frame("nome" = item$name
1592929580615:, "nascimento" = item$birth_date
1592929580637:, "email" = item$email
1592929580657:, "genero" = item$email
1592929580678:, "estado_civil" = item$marital_status
1592929580701:, "etinia" = item$ethnicity
1592929580724:, "familia" = item$family
1592929580750:, "orientacao_sexual" = item$sexual_orientation
1592929580773:, "atividade" = item$activity
1592929580796:, do.call(cbind, lapply(
1592929580822:seq(1,length(item$results$summary))
1592929580847:, FUN = function(i) {
1592929580868:df <- data.frame(item$results$summary[[i]])
1592929580891:colnames(df) <- paste0("dimensao", i)
1592929580923:return(df)
1592929580951:}))
1592929580974:, do.call(cbind, lapply(
1592929581002:seq(1,length(item$results$answers[[1]]))
1592929581035:, FUN = function(i) {
1592929581056:df <- data.frame(item$results$answers[[1]][[i]])
1592929581080:colnames(df) <- paste0("Q", i)
1592929581104:return(df)
1592929581128:}))
1592929581153:)
1592929581174:}))
1592929581485:## Leitura do arquivo CSV
1592929581506:(dfs_dat <- read_csv("data/survey-0-dfs.csv"))
1592929581617:(careless_dfs_long <- longstring (dfs_dat))
1592929616192:(careless_dfs_long <- longstring (dfs_dat))
1592929617683:Boxplot(careless_dfs_long, main = "Boxplot do Longstring no questionario DFS")
1592929851659:(careless_dfs_long <- longstring (dfs_dat))
1592929852051:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS")
1592931107426:(careless_dfs_long <- longstring(dfs_dat, avg = T))
1592931111953:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS")
1592938280521:(careless_dfs_irv <- irv(dfs_dat, split = T, num.split = 4))
1592938316169:?select
1592939933252:library(jsonlite)   # biblioteca para o processamento de json
1592939933413:library(readr)      # biblioteca para leitura de arquivos CVS
1592939933600:library(careless)   # biblioteca para tratamento de respostas descuidadas
1592939933759:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1592939934139:library(dplyr)      # biblioteca para manipular data.frames
1592939956307:select(dfs_dat, starts_with("Q"))
1592939979605:(careless_dfs_long <- longstring(select(dfs_dat, starts_with("Q"))))
1592939980265:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS")
1592939984111:(careless_dfs_irv <- irv(select(dfs_dat, starts_with("Q")), split = T, num.split = 4))
1592940027827:head(careless_dfs_irv)
1592940672866:?irv
1592940698840:careless_dfs_irv <- irv(select(dfs_dat, starts_with("Q")), split = T, num.split = 3)
1592940703303:careless_dfs_irv
1592940752916:order(careless_dfs_irv)
1592940761431:order(careless_dfs_irv$irvTotal)
1592940801162:careless_dfs_irv[which(order(careless_dfs_irv$irvTotal)),]
1592940810847:which(order(careless_dfs_irv$irvTotal))
1592940819630:careless_dfs_irv[order(careless_dfs_irv$irvTotal),]
1592940848650:View(dfs_dat)
1592940902273:careless_dfs_irv <- irv(select(dfs_dat, starts_with("Q")))#, split = T, num.split = 3)
1592940904590:careless_dfs_irv[order(careless_dfs_irv$irvTotal),]
1592940911455:careless_dfs_irv <- irv(select(dfs_dat, starts_with("Q")))#, split = T, num.split = 3)
1592940913595:careless_dfs_irv[order(careless_dfs_irv$irvTotal),]
1592940924232:order(careless_dfs_irv$irvTotal)
1592940929185:careless_dfs_irv <- irv(select(dfs_dat, starts_with("Q")))#, split = T, num.split = 3)
1592940934336:careless_dfs_irv
1592940964317:order(careless_dfs_irv)
1592940974551:careless_dfs_irv[order(careless_dfs_irv),]
1592940980102:order(careless_dfs_irv)
1592940982463:careless_dfs_irv <- irv(select(dfs_dat, starts_with("Q")))#, split = T, num.split = 3)
1592940983341:careless_dfs_irv[order(careless_dfs_irv),]
1592941016170:dfs_dat[order(careless_dfs_irv),]
1592941028459:View(dfs_dat[order(careless_dfs_irv),])
1592941774137:(careless_dfs_long <- longstring(resp_dfs_dat))
1592941776633:## Leitura do arquivo CSV
1592941776652:(dfs_dat <- read_csv("data/survey-0-dfs.csv"))
1592941776883:resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
1592941778827:(careless_dfs_long <- longstring(resp_dfs_dat))
1592941779089:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS")
1592941788582:careless_dfs_irv <- irv(resp_dfs_dat)
1592941791220:careless_dfs_irv
1592941796769:(careless_dfs_irv <- irv(resp_dfs_dat))
1592941891136:(careless_dfs_irv <- irv(resp_dfs_dat))
1592941900596:(careless_dfs_irv)
1592941928940:(which(careless_dfs_irv))
1592941934202:(which(careless_dfs_irv))
1592941939255:(careless_dfs_irv <- irv(resp_dfs_dat))
1592941939901:(which(careless_dfs_irv))
1592941947913:careless_dfs_irv
1592941980268:(order(resp_dfs_dat))
1592941988057:(order(careless_dfs_irv))
1592942040619:head(resp_dfs_dat[order(careless_dfs_irv),] )
1592942058481:order(careless_dfs_irv)
1592942075117:(order(careless_dfs_irv)
1592942080434:)
1592942093938:(order(careless_dfs_irv))
1592942147789:(careless_dfs_irv <- irv(resp_dfs_dat))
1592942151104:order(careless_dfs_irv)
1592942237411:resp_dfs_dat[(order(careless_dfs_irv)),]
1592942269024:cbind(resp = order(careless_dfs_irv), resp_dfs_dat[(order(careless_dfs_irv)),])
1592942287145:careless_dfs_irv
1592942346747:(careless_dfs_irv <- irv(resp_dfs_dat))
1592942347895:cbind(resp = order(careless_dfs_irv), IRV=careless_dfs_irv[order(careless_dfs_irv)], resp_dfs_dat[(order(careless_dfs_irv)),])
1592942423335:## Leitura do arquivo CSV
1592942423354:dfs_dat <- read_csv("data/survey-0-dfs.csv")
1592942424277:resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
1592942429765:(careless_dfs_long <- longstring(resp_dfs_dat))
1592942854703:careless_dfs_irv <- irv(resp_dfs_dat, split = T, num.split = 1)
1592942857247:careless_dfs_irv
1592942867718:careless_dfs_irv <- irv(resp_dfs_dat, split = T, num.split = 2)
1592942871009:careless_dfs_irv
1592942896509:careless_dfs_irv <- irv(resp_dfs_dat)
1592942917335:careless_dfs_irv_idx <- order(careless_dfs_irv)
1592942935929:cbind(resp = careless_dfs_irv_idx
1592942935945:, IRV=careless_dfs_irv[careless_dfs_irv_idx]
1592942935966:, resp_dfs_dat[careless_dfs_irv_idx,])
1592942985001:(careless_dfs_long <- longstring(resp_dfs_dat))
1592942985208:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS")
1592942985421:careless_dfs_irv <- irv(resp_dfs_dat)
1592942985786:careless_dfs_irv_idx <- order(careless_dfs_irv)
1592942986823:careless_irv_df <- cbind(resp = careless_dfs_irv_idx
1592942986842:, IRV=careless_dfs_irv[careless_dfs_irv_idx]
1592942986857:, resp_dfs_dat[careless_dfs_irv_idx,])
1592943005824:head(careless_irv_df)
1592943155881:dfs_dat[-c(11,27,14)]
1592943268142:?write_csv
1592943415204:dfs_dat[c(11,27,14),]
1592943487778:dfs_dat[-c(11,27,14),]
1592943807051:wants <- c('jsonlite', 'readr', 'careless', 'car','dplyr')
1592943807258:has <- wants %in% rownames(installed.packages())
1592943807424:if (any(!has)) install.packages(wants[!has])
1592943807562:library(readr)      # biblioteca para leitura de arquivos CVS
1592943807777:library(careless)   # biblioteca para tratamento de respostas descuidadas
1592943807958:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1592943808115:library(dplyr)      # biblioteca para manipular data.frames
1592943808299:## Leitura do questionario DFS usando arquivo CSV
1592943808315:dfs_dat <- read_csv("data/survey-0-dfs.csv")
1592943808493:resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
1592943808687:(careless_dfs_long <- longstring(resp_dfs_dat))
1592943809171:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS")
1592943809716:careless_dfs_irv <- irv(resp_dfs_dat)
1592943810152:careless_dfs_irv_idx <- order(careless_dfs_irv)
1592943810495:careless_irv_df <- cbind(resp = careless_dfs_irv_idx
1592943810510:, IRV=careless_dfs_irv[careless_dfs_irv_idx]
1592943810528:, resp_dfs_dat[careless_dfs_irv_idx,])
1592943810821:head(careless_irv_df)
1592943811246:write_csv(dfs_dat[c(11,27,14),], 'data/dfs-careless.csv')
1592943811694:write_csv(dfs_dat[-c(11,27,14),], 'data/dfs.csv')
1592943939244:wants <- c('jsonlite', 'readr', 'careless', 'car','dplyr')
1592943939504:has <- wants %in% rownames(installed.packages())
1592943939719:if (any(!has)) install.packages(wants[!has])
1592943939920:library(readr)      # biblioteca para leitura de arquivos CVS
1592943940199:library(careless)   # biblioteca para tratamento de respostas descuidadas
1592943940409:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1592943940647:library(dplyr)      # biblioteca para manipular data.frames
1592945331393:wants <- c('jsonlite', 'readr', 'careless', 'car','dplyr')
1592945331556:has <- wants %in% rownames(installed.packages())
1592945331736:if (any(!has)) install.packages(wants[!has])
1592945331907:library(readr)      # biblioteca para leitura de arquivos CVS
1592945332132:library(careless)   # biblioteca para tratamento de respostas descuidadas
1592945332323:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1592945332545:library(dplyr)      # biblioteca para manipular data.frames
1592945339375:## Leitura do questionario DFS usando arquivo CSV
1592945339394:fss_dat <- read_csv("data/survey-0-fss.csv")
1592945369889:## Leitura do questionario DFS usando arquivo CSV
1592945369908:fss_dat <- read_csv("data/survey-0-fss.csv")
1592945370462:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1592945379031:## Tratamento de respostas descuidadas (careless response)
1592945379050:(careless_ffs_long <- longstring(resp_ffs_dat))
1592945382532:## Leitura do questionario DFS usando arquivo CSV
1592945382552:fss_dat <- read_csv("data/survey-0-fss.csv")
1592945382919:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1592945390624:library(readr)      # biblioteca para leitura de arquivos CVS
1592945390844:library(careless)   # biblioteca para tratamento de respostas descuidadas
1592945391047:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1592945391178:library(dplyr)      # biblioteca para manipular data.frames
1592945391999:## Leitura do questionario DFS usando arquivo CSV
1592945392018:fss_dat <- read_csv("data/survey-0-fss.csv")
1592945392217:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1592945392891:## Tratamento de respostas descuidadas (careless response)
1592945392909:(careless_ffs_long <- longstring(resp_ffs_dat))
1592945425298:## Leitura do questionario DFS usando arquivo CSV
1592945425316:fss_dat <- read_csv("data/survey-0-fss.csv")
1592945425588:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1592945425883:## Tratamento de respostas descuidadas (careless response)
1592945425901:(careless_ffs_long <- longstring(resp_fss_dat))
1592945443844:Boxplot(careless_ffs_long, main = "Boxplot do Longstring para o FFS")
1592945468713:## Tratamento de respostas descuidadas (careless response)
1592945468735:(careless_ffs_long <- longstring(resp_fss_dat))
1592945470839:Boxplot(careless_ffs_long, main = "Boxplot do Longstring para o FFS")
1592945578145:## Tratamento de respostas descuidadas (careless response)
1592945578167:(careless_ffs_long <- longstring(resp_fss_dat))
1592945578892:Boxplot(careless_ffs_long, main = "Boxplot do Longstring para o FFS") # 11,27,42,13 respostas a ser eliminada
1592945595917:careless_ffs_irv <- irv(resp_ffs_dat)
1592945604680:careless_ffs_irv <- irv(resp_ffs_dat)
1592945623752:wants <- c('jsonlite', 'readr', 'careless', 'car','dplyr')
1592945623919:has <- wants %in% rownames(installed.packages())
1592945624103:if (any(!has)) install.packages(wants[!has])
1592945624247:library(readr)      # biblioteca para leitura de arquivos CVS
1592945624647:library(careless)   # biblioteca para tratamento de respostas descuidadas
1592945624871:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1592945625015:library(dplyr)      # biblioteca para manipular data.frames
1592945625534:## Leitura do questionario DFS usando arquivo CSV
1592945625553:fss_dat <- read_csv("data/survey-0-fss.csv")
1592945629487:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1592945635425:## Tratamento de respostas descuidadas (careless response)
1592945635444:(careless_fss_long <- longstring(resp_fss_dat))
1592945668442:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 11,27,42,13 respostas a ser eliminada
1592945677311:careless_fss_irv <- irv(resp_fss_dat)
1592945684073:careless_fss_irv_idx <- order(careless_fss_irv)
1592945727064:careless_irv_df <- cbind(resp = careless_fss_irv_idx
1592945727084:, IRV=careless_fss_irv[careless_fss_irv_idx]
1592945727101:, resp_fss_dat[careless_fss_irv_idx,])
1592945730617:head(careless_irv_df)
1592945850399:## Tratamento de respostas descuidadas (careless response)
1592945850419:(careless_fss_long <- longstring(resp_fss_dat))
1592945850797:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 11,27,42,13 respostas a ser eliminada
1592945851097:careless_fss_irv <- irv(resp_fss_dat)
1592945851350:careless_fss_irv_idx <- order(careless_fss_irv)
1592945851533:careless_irv_df <- cbind(resp = careless_fss_irv_idx
1592945851551:, IRV=careless_fss_irv[careless_fss_irv_idx]
1592945851564:, resp_fss_dat[careless_fss_irv_idx,])
1592945852475:head(careless_irv_df)
1592945853923:## Salvar respostas descuidadas e DFS sem respostas descuidadas
1592945853941:write_csv(fss_dat[c(11,27,42,13,14),], 'data/fss-careless.csv')
1592945854973:write_csv(fss_dat[-c(11,27,42,13,14),], 'data/fss.csv')
1592945968881:## Tratamento de respostas descuidadas (careless response)
1592945968901:(careless_fss_long <- longstring(resp_fss_dat))
1592945975979:head(careless_irv_df)
1592949404491:wants <- c('car','dplyr')
1592949404681:has <- wants %in% rownames(installed.packages())
1592949404843:if (any(!has)) install.packages(wants[!has])
1592949405273:library(dplyr)
1592949405635:library(car)
1592949443030:read_csv('data/user-distribution.csv')
1592949506450:## leitura de dados
1592949506469:fss <- read_csv('data/fss.csv')
1592949506712:users <- read_csv('data/user-distribution.csv')
1592949554913:?merge
1592949571219:dat <- merge(users, fss, by='email')
1592949576363:colnames(dat)
1592949625354:dat <- merge(users, fss, by='email')
1592949625734:dat <- select(dat, starts_with("email", "cenario", "dimensao"))
1592949628303:## leitura de dados
1592949628332:fss <- read_csv('data/fss.csv')
1592949628537:users <- read_csv('data/user-distribution.csv')
1592949629125:dat <- merge(users, fss, by='email')
1592949650597:## leitura de dados
1592949650619:fss <- read_csv('data/fss.csv')
1592949650795:users <- read_csv('data/user-distribution.csv')
1592949651002:pre_dat <- merge(users, fss, by='email')
1592949652001:dat <- select(pre_dat, starts_with("email", "cenario", "dimensao"))
1592949657002:## leitura de dados
1592949657022:fss <- read_csv('data/fss.csv')
1592949657195:users <- read_csv('data/user-distribution.csv')
1592949657798:pre_dat <- merge(users, fss, by='email')
1592949677785:pre_dat <- merge(users, fss, by='email')
1592949678140:dat <- select(pre_dat, starts_with("email"), starts_with("cenario"), starts_with("dimensao"))
1592949685982:colnames(dat)
1592949713170:colnames(fss)
1592949729328:pre_dat <- merge(users, fss, by='email')
1592949729819:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592949773316:## Leitura de dados
1592949773334:fss <- read_csv('data/fss.csv')
1592949773528:users <- read_csv('data/user-distribution.csv')
1592949773727:pre_dat <- merge(users, fss, by='email')
1592949774081:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592949854090:wilcox.test()
1592949857696:?wilcox.test
1592949971529:## Analises não paramétrica
1592949971553:library(stats)
1592950004950:wilcox.test(media~cenario, dat)
1592950051044:## Analises não paramétrica
1592950051062:library(stats)
1592950051372:wilcox.test(media~cenario, dat, alternative = "less")
1592950060274:wilcox.test(media~cenario, dat, alternative = "greater")
1592950209727:library(rcompanion)
1592950282572:## Analises não paramétrica
1592950282589:library(stats)
1592950283106:library(rcompanion)
1592950285163:wilcox.test(media~cenario, dat, alternative = "greater")
1592950316329:wilcoxonOneSampleR(dat$cenario)
1592950448160:wilcox.test(media~cenario, dat, alternative = "greater", mu=0)
1592950448758:wilcoxonOneSampleR(dat$cenario, mu=0)
1592950471339:wilcox.test(media~cenario, dat, alternative = "greater", mu=3)
1592950472943:wilcoxonOneSampleR(dat$cenario, mu=3)
1592950484943:wilcox.test(media~cenario, dat, alternative = "greater", mu=3)
1592950485324:wilcoxonOneSampleR(dat$media, mu=3)
1592950489753:wilcoxonOneSampleR(dat$media)
1592950498397:wilcoxonOneSampleR(dat$media, mu=0)
1592950503685:wilcoxonOneSampleR(dat$media, mu=1)
1592950509892:wilcox.test(media~cenario, dat, alternative = "greater", mu=3)
1592950515095:wilcox.test(media~cenario, dat, alternative = "greater", mu=0)
1592950527137:wilcox.test(media~cenario, dat, alternative = "greater")
1592950539747:wilcox.test(media~cenario, dat)
1592950698338:?wilcox_test
1592950717400:library(coin)
1592950722582:wilcox_test(media~cenario, dat)
1592950743832:wilcox_test(media~cenario, dat)
1592950816425:dat$cenario = factor(dat$cenario)
1592950821021:wilcox_test(media~cenario, dat)
1592951008417:wilcox_test(media~cenario, dat, alternative="greater")
1592951013733:wilcox_test(media~cenario, dat, alternative="less")
1592951044598:wilcox_test(media~cenario, dat, alternative="equal")
1592951050925:wilcox_test(media~cenario, dat, alternative="two.sided")
1592951073264:wilcox_test(media~cenario, dat, alternative="greater")
1592951147248:wilcox.test(media~cenario, dat, alternative="greater")
1592951368973:wilcoxonOneSampleR(dat$media)
1592951377627:wilcoxonOneSampleR(dat$media, mu=0)
1592951456372:(wt <- wilcox_test(media~cenario, dat, alternative="greater"))
1592951460843:(wt <- wilcox_test(media~cenario, dat, alternative="less"))
1592951495589:(wt <- wilcox_test(media~cenario, dat, alternative="greater"))
1592951502717:wilcoxonOneSampleR(dat$media, mu=0)
1592951506153:Z <- as.numeric(statistic(wt))
1592951510300:pvalue <- pvalue(wt)
1592951515238:(r <- abs(Z/sqrt(length(x))))
1592951528395:(r <- abs(Z/sqrt(length(dat$media))))
1592951670705:wilcoxonR(dat$media)
1592951868380:library(rstatix)
1592951888795:install.packages(rstatix)
1592951894062:install.packages(rstatix)
1592951972175:library(coin)
1592951975828:wilcox_effsize()
1592952045950:wants <- c('rcompanion', 'stats','car','dplyr','rstatix')
1592952046005:has <- wants %in% rownames(installed.packages())
1592952046174:if (any(!has)) install.packages(wants[!has])
1592952047291:library(dplyr)
1592952058988:install.packages("rstatix")
1592952133600:install.packages(wants[!has])
1592952146393:## Analises não paramétrica
1592952146412:library(stats)
1592952146627:library(coin)
1592952146784:library(rcompanion)
1592952147046:library(rstatix)
1592952152135:(wt <- wilcox_test(media~cenario, dat, alternative="greater"))
1592952159316:## Leitura de dados
1592952159339:fss <- read_csv('data/fss.csv')
1592952159561:users <- read_csv('data/user-distribution.csv')
1592952159786:pre_dat <- merge(users, fss, by='email')
1592952160065:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592952163425:dat$cenario = factor(dat$cenario)
1592952165540:(wt <- wilcox_test(media~cenario, dat, alternative="greater"))
1592952169820:## Leitura de dados
1592952169840:fss <- read_csv('data/fss.csv')
1592952170317:users <- read_csv('data/user-distribution.csv')
1592952173999:library(dplyr)
1592952174284:library(car)
1592952175855:## Leitura de dados
1592952175873:fss <- read_csv('data/fss.csv')
1592952191765:?read_csv
1592952230640:library(readr)
1592952230894:library(dplyr)
1592952232863:library(car)
1592952234785:## Leitura de dados
1592952234803:fss <- read_csv('data/fss.csv')
1592952235049:users <- read_csv('data/user-distribution.csv')
1592952235579:pre_dat <- merge(users, fss, by='email')
1592952235860:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592952236393:dat$cenario = factor(dat$cenario)
1592952238440:## Analises não paramétrica
1592952238461:library(stats)
1592952238647:library(coin)
1592952238813:library(rcompanion)
1592952239457:library(rstatix)
1592952240519:(wt <- wilcox_test(media~cenario, dat, alternative="greater"))
1592952247788:## Leitura de dados
1592952247806:fss <- read_csv('data/fss.csv')
1592952248813:users <- read_csv('data/user-distribution.csv')
1592952250144:pre_dat <- merge(users, fss, by='email')
1592952250901:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592952252271:dat$cenario = factor(dat$cenario)
1592952255722:## Analises não paramétrica
1592952255740:library(stats)
1592952256294:library(coin)
1592952256788:library(rcompanion)
1592952257219:library(rstatix)
1592952258703:(wt <- wilcox_test(media~cenario, dat, alternative="greater"))
1592952266022:colnames(dat)
1592952275008:dat$cenario
1592952279542:(wt <- wilcox_test(media~cenario, dat, alternative="greater"))
1592952301493:colnames(dat)
1592952307264:(wt <- wilcox_test(media~cenario, dat, alternative="greater"))
1592952313345:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592952320130:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592952333498:wilcox_test(media~cenario, data = dat, alternative="greater")
1592952349713:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592952367545:wt
1592952376395:View(wt)
1592952394546:?wilcox_effsize
1592952423671:wilcox_effsize(dat, media~cenario, alternative = "greater")
1592952438450:Z <- as.numeric(statistic(wt))
1592952438794:pvalue <- pvalue(wt)
1592952441379:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592952446294:Z <- as.numeric(statistic(wt))
1592952454131:## Analises não paramétrica
1592952454150:library(stats)
1592952454349:library(coin)
1592952454513:library(rcompanion)
1592952454835:library(rstatix)
1592952457536:Z <- as.numeric(statistic(wt))
1592952476421:wt
1592952508810:Z <- wt$statistic
1592952510590:pvalue <- pvalue(wt)
1592952519714:Z <- wt$statistic
1592952520218:pvalue <- wt$p
1592952521409:(r <- abs(Z/sqrt(length(dat$media))))
1592952539981:Z
1592952547545:length(dat$media)
1592952552045:sqrt(length(dat$media))
1592952555806:Z
1592952561865:Z/sqrt(length(dat$media))
1592952570449:Z <- wt$statistic
1592952570838:pvalue <- wt$p
1592952573427:pvalue
1592952576705:wilcox_effsize(dat, media~cenario, alternative = "greater")
1592952593738:library(readr)
1592952593948:library(dplyr)
1592952594111:library(car)
1592952594737:## Leitura de dados
1592952594761:fss <- read_csv('data/fss.csv')
1592952595091:users <- read_csv('data/user-distribution.csv')
1592952595535:pre_dat <- merge(users, fss, by='email')
1592952595880:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592952596576:dat$cenario = factor(dat$cenario)
1592952598455:## Analises não paramétrica
1592952598475:library(stats)
1592952598745:library(coin)
1592952598979:library(rcompanion)
1592952599474:library(rstatix)
1592952600188:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592952644164:wilcoxonOneSampleR(dat$media, mu=)
1592952647652:wilcoxonOneSampleR(dat$media, mu=0)
1592952652072:wilcox_effsize(dat, media~cenario, alternative = "greater")
1592952675223:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592952885598:library(readr)
1592952885833:library(dplyr)
1592952886200:library(car)
1592952887141:## Leitura de dados
1592952887161:fss <- read_csv('data/fss.csv')
1592952887906:users <- read_csv('data/user-distribution.csv')
1592952888173:pre_dat <- merge(users, fss, by='email')
1592952888411:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592952891092:dat$cenario = factor(dat$cenario)
1592952893686:## Analises não paramétrica
1592952893706:library(stats)
1592952894306:library(coin)
1592952899396:library(rcompanion)
1592952901723:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592952912656:wilcox_effsize(dat, media~cenario, alternative = "greater")
1592952952463:Z <- as.numeric(statistic(wt))
1592952953568:pvalue <- pvalue(wt)
1592952961795:(r <- abs(Z/sqrt(length(dat$media))))
1592952976552:install.packages("rstatix")
1592952990093:install.packages("rstatix")
1592953066862:library(rstatix)
1592953067930:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592953071579:wilcox_effsize(dat, media~cenario, alternative = "greater")
1592953164564:## Analises não paramétrica
1592953164581:library(stats)
1592953168033:library(coin)
1592953168991:library(rcompanion)
1592953171150:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592953192867:Z <- as.numeric(statistic(wt))
1592953193134:pvalue <- pvalue(wt)
1592953193968:(r <- abs(Z/sqrt(length(dat$media))))
1592953198043:wilcox_effsize(dat, media~cenario, alternative = "greater")
1592953228002:## Analises não paramétrica
1592953228019:library(stats)
1592953228226:library(coin)
1592953228484:library(rcompanion)
1592953229216:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592953231542:#
1592953231560:library(rstatix)
1592953232384:wilcox_effsize(dat, media~cenario, alternative = "greater")
1592953240226:Z <- as.numeric(statistic(wt))
1592953240871:pvalue <- pvalue(wt)
1592953241828:(r <- abs(Z/sqrt(length(dat$media))))
1592953510757:## Analises não paramétrica
1592953510775:library(stats)
1592953511148:library(coin)
1592953512463:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592953524546:wants <- c('rcompanion', 'stats','car','dplyr','rstatix','readr')
1592953524773:has <- wants %in% rownames(installed.packages())
1592953524964:if (any(!has)) install.packages(wants[!has])
1592953526653:library(readr)
1592953526667:library(dplyr)
1592953526891:library(car)
1592953527121:## Leitura de dados
1592953527139:fss <- read_csv('data/fss.csv')
1592953531837:install.packages(wants[!has])
1592959237767:wants <- c('car','dplyr','rstatix','readr')
1592959238216:has <- wants %in% rownames(installed.packages())
1592959238620:if (any(!has)) install.packages(wants[!has])
1592959241206:library(readr)
1592959241259:library(dplyr)
1592959250518:install.packages(wants[!has])
1592959848640:library(readr)
1592959848974:library(dplyr)
1592959849290:library(rstatix)
1592959854090:## Leitura de dados
1592959854108:fss <- read_csv('data/fss.csv')
1592959854382:users <- read_csv('data/user-distribution.csv')
1592959854621:pre_dat <- merge(users, fss, by='email')
1592959855321:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592959858316:dat$cenario = factor(dat$cenario)
1592959870369:(wt <- wilcox_test(media~cenario, data = dat, alternative="greater"))
1592959891746:?wilcox_test
1592959958347:?wilcox_effsize
1592960006535:wilcox_effsize(media~cenario, data = dat, alternative = "greater")
1592960032219:## Analises não paramétrica
1592960032240:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592960032665:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592960149332:(wt <- wilcox_test(dimensao1~cenario, data = dat, alternative = "greater"))
1592960155214:(wt <- wilcox_test(dimensao2~cenario, data = dat, alternative = "greater"))
1592960159060:(wt <- wilcox_test(dimensao3~cenario, data = dat, alternative = "greater"))
1592960162797:(wt <- wilcox_test(dimensao4~cenario, data = dat, alternative = "greater"))
1592960166610:(wt <- wilcox_test(dimensao5~cenario, data = dat, alternative = "greater"))
1592960170107:(wt <- wilcox_test(dimensao6~cenario, data = dat, alternative = "greater"))
1592960174808:(wt <- wilcox_test(dimensao7~cenario, data = dat, alternative = "greater"))
1592960178941:(wt <- wilcox_test(dimensao8~cenario, data = dat, alternative = "greater"))
1592960183821:(wt <- wilcox_test(dimensao9~cenario, data = dat, alternative = "greater"))
1592960198914:?rbind
1592960219332:## Analises não paramétrica
1592960219351:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592960220865:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592960574817:## Leitura de dados
1592960574838:fss <- read_csv('data/fss.csv')
1592960575067:users <- read_csv('data/user-distribution.csv')
1592960575640:pre_dat <- merge(users, fss, by='email')
1592960575961:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592960579232:dat$cenario = factor(dat$cenario)
1592960583687:## Analises não paramétrica
1592960583704:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592960584989:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592960607341:View(fss)
1592960631123:View(pre_dat)
1592961816856:library(readr)
1592961817048:library(dplyr)
1592961817243:library(rstatix)
1592961818225:## Leitura de dados
1592961818245:fss <- read_csv('data/fss.csv')
1592961818939:users <- read_csv('data/user-distribution.csv')
1592961819689:pre_dat <- merge(users, fss, by='email')
1592961819981:dat <- select(pre_dat, starts_with("cenario"), starts_with("dimensao"), starts_with('media'))
1592961820483:dat$cenario = factor(dat$cenario)
1592961821141:## Analises não paramétrica
1592961821160:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592961831089:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592962555279:?boxplot
1592962567709:?car::Boxplot()
1592962607537:car::Boxplot(media~cenario, data=dat)
1592962677816:car::Boxplot(media~cenario, data=dat, outline = T)
1592962701997:car::Boxplot(media~cenario, data=dat, notch=T)
1592962892123:library(plotly)
1592962925945:plot_ly(dat, media~cenario)
1592962955358:plot_ly(dat, media~cenario, jitter = 0.3)
1592962977855:plot_ly(dat, media~cenario, type = 'box', jitter = 0.3)
1592963005051:plot_ly(dat, media~cenario, type = "box", boxpoints = "all", jitter = 0.3)
1592963045208:plot_ly(dat, y=~media, type = "box", boxpoints = "all", jitter = 0.3)
1592963069749:plot_ly(data=dat, x=~cenario, y=~media, type = "box", boxpoints = "all", jitter = 0.3)
1592963139072:plot_ly(data=dat, x=~cenario, y=~media, color=~cenario, type = "box", boxpoints = "all", jitter = 0.3)
1592963249767:## Efetuar plot
1592963249786:library(plotly)
1592963250274:plot_ly(data=dat, x=~cenario, y=~media, color=~cenario, type = "box", boxpoints = "all", jitter = 0.3)
1592963515044:colnames(dat)
1592963539103:pre_dat <- merge(users, fss, by='email')
1592963546375:colnames(pre_dat)
1592963565913:pre_dat <- merge(users, fss, by=c('email','name'))
1592963586955:pre_dat <- merge(users, fss, by=c('email','nome'))
1592963596337:colnames(pre_dat)
1592963630751:## Leitura de dados
1592963630770:fss <- read_csv('data/fss.csv')
1592963630940:users <- read_csv('data/user-distribution.csv')
1592963631136:dat <- merge(users, fss, by=c('email','nome'))
1592963631714:dat$cenario = factor(dat$cenario)
1592963636221:## Analises não paramétrica
1592963636245:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592963636436:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592963636619:## Efetuar plot
1592963636640:library(plotly)
1592963642550:plot_ly(data=dat, x=~cenario, y=~media, color=~cenario, text=~nome, type = "box", boxpoints = "all", jitter = 0.3)
1592963816709:get_summary_stats(dat)
1592963834501:View(get_summary_stats(dat))
1592963892819:pre_dat <- merge(users, fss, by=c('email','nome'))
1592963899423:colnames(pre_dat)
1592963993724:## Leitura de dados
1592963993740:fss <- read_csv('data/fss.csv')
1592963993936:users <- read_csv('data/user-distribution.csv')
1592963994121:pre_dat <- merge(users, fss, by=c("email","nome"))
1592963995215:dat <- select(pre_dat, starts_with("email"), starts_with("nome"), starts_with("dimensao"), starts_with("media"))
1592963998284:dat$cenario = factor(dat$cenario)
1592964003099:## Leitura de dados
1592964003119:fss <- read_csv('data/fss.csv')
1592964003341:users <- read_csv('data/user-distribution.csv')
1592964059823:fss <- read_csv('data/fss.csv')
1592964060033:users <- read_csv('data/user-distribution.csv')
1592964077471:fss <- read_csv('data/fss.csv')
1592964077732:users <- read_csv('data/user-distribution.csv')
1592964078020:pre_dat <- merge(users, fss, by=c("email","nome"))
1592964079095:dat <- select(pre_dat, starts_with("email"), starts_with("nome")
1592964079114:, starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1592964080055:dat$cenario = factor(dat$cenario)
1592964082095:get_summary_stats(dat)
1592964151252:## Efeituar estatistica descritiva
1592964151272:get_summary_stats(dat)
1592964179682:freq_table(dat)
1592964181787:freq_table(dat)
1592964189674:?freq_table
1592964208178:freq_table(dat,cenario)
1592964232724:?get_mode
1592964281628:get_mode(dat$cenario)
1592964287687:get_mode(dat$email)
1592964300092:get_mode(dat$media)
1592964341408:get_mode(dat$dimensao1)
1592964351816:get_mode(dat$media)
1592964652640:identify_outliers(dat)
1592964661625:?identify_outliers
1592964685461:identify_outliers(dat, media, dimensao1, dimensao2)
1592964716162:identify_outliers(dat, media)
1592964739552:identify_outliers(dat, "media")
1592964751145:identify_outliers(dat, "dimension1")
1592964753966:identify_outliers(dat, "dimension1")
1592964761541:colnames(dat)
1592964769806:identify_outliers(dat, "dimensao1")
1592964777311:identify_outliers(dat, "dimensao1","media")
1592964784562:identify_outliers(dat, c("dimensao1","media"))
1592964795777:identify_outliers(dat, dimensao1)
1592989616374:identify_outliers(dat, dimensao1)
1592989654216:mahalanobis_distance(dat, media)
1592989669430:mahalanobis_distance(dat)
1592989732627:?mahalanobis_distance
1592989804834:colnames(dat)
1592989828486:mahalanobis_distance(dat,-media)
1592989852846:mahalanobis_distance(dat, media)
1592989911355:group_by(data, cenario)
1592989924352:group_by(data, "cenario")
1592989958259:iris
1592989976987:group_by(data, cenario)
1592990022371:mahalanobis_distance(dat, .)
1592990031963:mahalanobis_distance(dat, ".")
1592990052210:mahalanobis_distance(dat)
1592990066224:mahalanobis_distance(dat, media)
1592990113407:shapiro_test(dat)
1592990119767:shapiro_test(dat, media)
1592990127415:mshapiro_test(dat, media)
1592990136662:mshapiro_test(dat)
1592990147173:shapiro_test(dat, media, dimension1)
1592990153926:shapiro_test(dat, media, dimensao1)
1592990165650:shapiro_test(dat, media, dimensao1, dimensao2)
1592990184130:?mshapiro_test
1592990215829:colnames(dat)
1592990260508:mshapiro_test(dat[,4:8])
1592990292383:mshapiro_test(dat[,4:13])
1592990303137:shapiro_test(dat, media, dimensao1, dimensao2)
1592990742793:## Efeituar estatistica descritiva
1592990742813:get_summary_stats(dat)
1592990743791:freq_table(dat, cenario)
1592990827833:freq_table(dat, cenario)
1592990897970:# Detect univariate outliers using boxplot methods.
1592990897990:identify_outliers(dat, dimensao1)
1592990898633:mahalanobis_distance(dat, media)
1592990904969:shapiro_test(dat, media, dimensao1, dimensao2)
1592990983285:plot_ly
1592990986895:?plot_ly
1592991106050:library(readr)
1592991106253:library(dplyr)
1592991106440:library(rstatix)
1592991106610:fss <- read_csv('data/fss.csv')
1592991106822:users <- read_csv('data/user-distribution.csv')
1592991107300:pre_dat <- merge(users, fss, by=c("email","nome"))
1592991107619:dat <- select(pre_dat, starts_with("email"), starts_with("nome")
1592991107635:, starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1592991108828:dat$cenario = factor(dat$cenario)
1592991112455:## Efeituar estatistica descritiva
1592991112473:summary <- get_summary_stats(dat)
1592991126521:## Efeituar estatistica descritiva
1592991126541:(summary <- get_summary_stats(dat))
1592991129938:(freq_tb <- freq_table(dat, cenario))
1592991284944:## Efeituar estatistica descritiva
1592991284964:(fss_summary <- get_summary_stats(dat))
1592991286026:(fss_frequency <- freq_table(dat, cenario))
1592991306844:write_csv(fss_summary, 'report/fss-summary.csv')
1592991325811:write_csv(fss_frequency, 'report/fss-frequency.csv')
1592991334922:## Analises não paramétrica
1592991334940:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592991335294:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592991409155:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592991409173:, x=~cenario, y=~media, color=~cenario, text=~nome))
1592991434758:?export
1592991652813:## Efetuar plot
1592991652832:library(plotly)
1592991653509:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592991653528:, x=~cenario, y=~media, color=~cenario, text=~nome))
1592991679156:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592991679174:, x=~cenario, y=~media, color=~cenario, text=~email))
1592992146896:as.widget(p)
1592992196540:## Efetuar plot
1592992196560:library(plotly)
1592992197017:library(htmlwidgets)
1592992310944:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592992310963:, x=~cenario, y=~media, color=~cenario, text=~email))
1592992312792:saveWidget(as.widget(p), "report/media-by-cenario-boxplot.html")
1592992728651:?saveWidget
1592992831637:## Efetuar plot
1592992831657:library(plotly)
1592992831888:library(htmlwidgets)
1592992832537:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592992832555:, x=~cenario, y=~media, color=~cenario, text=~email))
1592992942042:export(p, "report/h1-experiencia-fluxo/media-flow-boxplot.png")
1592992966397:?export
1592993050679:orca(p, "report/h1-experiencia-fluxo/media-flow-boxplot.png")
1592993176834:?export
1592993202814:export(p, "report/h1-experiencia-fluxo/media-flow-boxplot.pdf")
1592993227441:orca(p, "report/h1-experiencia-fluxo/media-flow-boxplot.pdf")
1592993254946:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592993254965:, x=~cenario, y=~media, color=~cenario, text=~email))
1592993743448:wants <- c('plotly','processx','dplyr','rstatix','readr')
1592993743741:has <- wants %in% rownames(installed.packages())
1592993743937:if (any(!has)) install.packages(wants[!has])
1592993766062:wants <- c('plotly','processx','dplyr','rstatix','readr')
1592993766297:has <- wants %in% rownames(installed.packages())
1592993766506:if (any(!has)) install.packages(wants[!has])
1592993766973:library(readr)
1592993775740:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592993775758:, x=~cenario, y=~media, color=~cenario, text=~email))
1592993777760:orca(p, "report/h1-experiencia-fluxo/media-flow-boxplot.pdf")
1592995401070:wants <- c('plotly','processx','dplyr','rstatix','readr')
1592995401473:has <- wants %in% rownames(installed.packages())
1592995401889:if (any(!has)) install.packages(wants[!has])
1592995402498:library(readr)
1592995402874:library(dplyr)
1592995404865:library(rstatix)
1592995409231:fss <- read_csv('data/fss.csv')
1592995410474:users <- read_csv('data/user-distribution.csv')
1592995411676:pre_dat <- merge(users, fss, by=c("email","nome"))
1592995412318:dat <- select(pre_dat, starts_with("email"), starts_with("nome")
1592995412344:, starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1592995413084:dat$cenario = factor(dat$cenario)
1592995424101:## Efeituar estatistica descritiva
1592995424129:(fss_summary <- get_summary_stats(dat))
1592995424603:(fss_frequency <- freq_table(dat, cenario))
1592995426587:write_csv(fss_summary, 'report/fss-summary.csv')
1592995426863:write_csv(fss_frequency, 'report/fss-frequency.csv')
1592995430497:## Efetuar plot
1592995430527:library(plotly)
1592995432768:library(htmlwidgets)
1592995435115:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592995435151:, x=~cenario, y=~media, color=~cenario, text=~email))
1592995439199:orca(p, "report/h1-experiencia-fluxo/media-flow-boxplot.png")
1592995510517:orca(add_surface(p), "report/h1-experiencia-fluxo/media-flow-boxplot.png")
1592995651595:orca(add_surface(p), "report/h1-experiencia-fluxo/media-flow-boxplot.pdf")
1592995784049:orca(p, "report/h1-experiencia-fluxo/media-flow-boxplot.pdf")
1592996082039:system("orca")
1592996218972:## Analises não paramétrica
1592996218993:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592996222223:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592996226760:non_param_test <- rbind(
1592996226788:merge(wilcox_test(media~cenario, data = dat, alternative="greater")
1592996226815:, wilcox_effsize(media~cenario, data = dat, alternative="greater"))
1592996226846:, merge(wilcox_test(dimensao1~cenario, data = dat, alternative="greater")
1592996226874:, wilcox_effsize(dimensao1~cenario, data = dat, alternative="greater"))
1592996226899:, merge(wilcox_test(dimensao2~cenario, data = dat, alternative="greater")
1592996226927:, wilcox_effsize(dimensao2~cenario, data = dat, alternative="greater"))
1592996226956:, merge(wilcox_test(dimensao3~cenario, data = dat, alternative="greater")
1592996226980:, wilcox_effsize(dimensao3~cenario, data = dat, alternative="greater"))
1592996227008:, merge(wilcox_test(dimensao4~cenario, data = dat, alternative="greater")
1592996227044:, wilcox_effsize(dimensao4~cenario, data = dat, alternative="greater"))
1592996227074:, merge(wilcox_test(dimensao5~cenario, data = dat, alternative="greater")
1592996227101:, wilcox_effsize(dimensao5~cenario, data = dat, alternative="greater"))
1592996227130:, merge(wilcox_test(dimensao6~cenario, data = dat, alternative="greater")
1592996227161:, wilcox_effsize(dimensao6~cenario, data = dat, alternative="greater"))
1592996227196:, merge(wilcox_test(dimensao7~cenario, data = dat, alternative="greater")
1592996227224:, wilcox_effsize(dimensao7~cenario, data = dat, alternative="greater"))
1592996227255:, merge(wilcox_test(dimensao8~cenario, data = dat, alternative="greater")
1592996227280:, wilcox_effsize(dimensao8~cenario, data = dat, alternative="greater"))
1592996227305:, merge(wilcox_test(dimensao9~cenario, data = dat, alternative="greater")
1592996227328:, wilcox_effsize(dimensao9~cenario, data = dat, alternative="greater"))
1592996227352:)
1592996233280:View(non_param_test)
1592996281118:write_csv(non_param_test, "report/h1-experiencia-fluxo/non-param-test.csv")
1592996319944:orca(p)
1592996552035:shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1592996552058:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9)
1592996555417:shapiro
1592997584442:(shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1592997584531:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9))
1592997585994:write_csv(shapiro, "report/h1-experiencia-fluxo/shapiro-test.csv")
1592998357613:wants <- c('plotly','processx','dplyr','rstatix','readr')
1592998357932:has <- wants %in% rownames(installed.packages())
1592998358192:if (any(!has)) install.packages(wants[!has])
1592998358463:library(readr)
1592998358843:library(dplyr)
1592998359134:library(rstatix)
1592998364969:## Leitura de dados
1592998365105:fss <- read_csv('data/fss.csv')
1592998366034:users <- read_csv('data/user-distribution.csv')
1592998370547:pre_dat <- merge(users, fss, by=c("email","nome"))
1592998373927:View(fss)
1592998389038:## Efeituar estatistica descritiva
1592998389093:(fss_summary <- get_summary_stats(dat))
1592998393943:library(readr)
1592998394139:library(dplyr)
1592998394307:library(rstatix)
1592998397367:## Leitura de dados
1592998397426:fss <- read_csv('data/fss.csv')
1592998397745:users <- read_csv('data/user-distribution.csv')
1592998398423:pre_dat <- merge(users, fss, by=c("email","nome"))
1592998398767:dat <- select(pre_dat, starts_with("email"), starts_with("nome")
1592998398823:, starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1592998399813:dat$cenario = factor(dat$cenario)
1592998399932:## Efeituar estatistica descritiva
1592998399978:(fss_summary <- get_summary_stats(dat))
1592998419841:pre_dat <- merge(users, fss, by=c("email","nome"))
1592998420643:dat <- select(pre_dat, starts_with("email"), starts_with("nome")
1592998420695:, starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1592998422178:dat$cenario = factor(dat$cenario)
1592998427510:## Efeituar estatistica descritiva
1592998427551:(fss_summary <- get_summary_stats(dat))
1592998430346:(fss_frequency <- freq_table(dat, cenario))
1592998431479:write_csv(fss_summary, 'report/fss-summary.csv')
1592998436029:write_csv(fss_frequency, 'report/fss-frequency.csv')
1592998438611:## Efetuar plot
1592998438676:library(plotly)
1592998439707:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592998439749:, x=~cenario, y=~media, color=~cenario, text=~email))
1592998446361:## Analises não paramétrica
1592998446414:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592998458476:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592998460991:non_param_test <- rbind(
1592998461088:merge(wilcox_test(media~cenario, data = dat, alternative="greater")
1592998461127:, wilcox_effsize(media~cenario, data = dat, alternative="greater"))
1592998461169:, merge(wilcox_test(dimensao1~cenario, data = dat, alternative="greater")
1592998461207:, wilcox_effsize(dimensao1~cenario, data = dat, alternative="greater"))
1592998461256:, merge(wilcox_test(dimensao2~cenario, data = dat, alternative="greater")
1592998461298:, wilcox_effsize(dimensao2~cenario, data = dat, alternative="greater"))
1592998461339:, merge(wilcox_test(dimensao3~cenario, data = dat, alternative="greater")
1592998461407:, wilcox_effsize(dimensao3~cenario, data = dat, alternative="greater"))
1592998461453:, merge(wilcox_test(dimensao4~cenario, data = dat, alternative="greater")
1592998461485:, wilcox_effsize(dimensao4~cenario, data = dat, alternative="greater"))
1592998461517:, merge(wilcox_test(dimensao5~cenario, data = dat, alternative="greater")
1592998461554:, wilcox_effsize(dimensao5~cenario, data = dat, alternative="greater"))
1592998461610:, merge(wilcox_test(dimensao6~cenario, data = dat, alternative="greater")
1592998461666:, wilcox_effsize(dimensao6~cenario, data = dat, alternative="greater"))
1592998461721:, merge(wilcox_test(dimensao7~cenario, data = dat, alternative="greater")
1592998461761:, wilcox_effsize(dimensao7~cenario, data = dat, alternative="greater"))
1592998461818:, merge(wilcox_test(dimensao8~cenario, data = dat, alternative="greater")
1592998461873:, wilcox_effsize(dimensao8~cenario, data = dat, alternative="greater"))
1592998461915:, merge(wilcox_test(dimensao9~cenario, data = dat, alternative="greater")
1592998461952:, wilcox_effsize(dimensao9~cenario, data = dat, alternative="greater"))
1592998462031:)
1592998475951:View(non_param_test)
1592998558951:library(readr)
1592998559002:user_distribution <- read_csv("data/user-distribution.csv")
1592998559060:View(user_distribution)
1592998612271:library(readr)
1592998612347:survey_0_dfs <- read_csv("data/survey-0-dfs.csv")
1592998612439:View(survey_0_dfs)
1592998710675:## Efetuar plot
1592998710704:library(plotly)
1592998712331:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592998712378:, x=~cenario, y=~media, color=~cenario, text=~email))
1592998939992:wants <- c('plotly','processx','dplyr','rstatix','readr')
1592998940210:has <- wants %in% rownames(installed.packages())
1592998940414:if (any(!has)) install.packages(wants[!has])
1592998940488:library(readr)
1592998940700:library(dplyr)
1592998940875:library(rstatix)
1592998941019:## Leitura de dados
1592998941061:fss <- read_csv('data/fss.csv')
1592998941359:users <- read_csv('data/user-distribution.csv')
1592998941638:pre_dat <- merge(users, fss, by=c("email","nome"))
1592998942126:dat <- select(pre_dat, starts_with("email"), starts_with("nome")
1592998942174:, starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1592998942537:dat$cenario = factor(dat$cenario)
1592998943700:## Efeituar estatistica descritiva
1592998943752:(fss_summary <- get_summary_stats(dat))
1592998944155:(fss_frequency <- freq_table(dat, cenario))
1592998948118:write_csv(fss_summary, 'report/fss-summary.csv')
1592998948503:write_csv(fss_frequency, 'report/fss-frequency.csv')
1592998948902:## Efetuar plot
1592998948952:library(plotly)
1592998949583:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1592998949640:, x=~cenario, y=~media, color=~cenario, text=~email))
1592998950599:## Analises não paramétrica
1592998950658:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592998951028:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592998996424:## Analises não paramétrica
1592998996473:(wt <- wilcox_test(media~cenario, data = dat, alternative = "equal"))
1592999006182:## Analises não paramétrica
1592999006245:(wt <- wilcox_test(media~cenario, data = dat, alternative = "two.side"))
1592999084565:## Analises não paramétrica
1592999084628:(wt <- wilcox_test(media~cenario, data = dat, alternative = "lesser"))
1592999087701:## Analises não paramétrica
1592999087737:(wt <- wilcox_test(media~cenario, data = dat, alternative = "less"))
1592999101420:## Analises não paramétrica
1592999101467:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592999108469:## Analises não paramétrica
1592999108509:(wt <- wilcox_test(media~cenario, data = dat, alternative = "less"))
1592999158656:## Analises não paramétrica
1592999158707:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592999170361:## Analises não paramétrica
1592999170431:(wt <- wilcox_test(media~cenario, data = dat, alternative = "two.side"))
1592999180002:## Analises não paramétrica
1592999180060:(wt <- wilcox_test(media~cenario, data = dat, alternative = "greater"))
1592999201460:(ez <- wilcox_effsize(media~cenario, data = dat, alternative = "greater"))
1592999594366:library(readr)
1592999594444:user_distribution <- read_csv("data/user-distribution.csv")
1592999594521:View(user_distribution)
1593000702477:(shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1593000702515:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9))
1593000717239:write_csv(shapiro, "report/h1-experiencia-fluxo/shapiro-test.csv")
1593000749732:identify_outliers(dat, dimensao1)
1593000755370:mahalanobis_distance(dat, media)
1593002476207:identify_outliers(dat, dimensao1)
1593002479446:mahalanobis_distance(dat, media)
1593003610368:for (v in c("media","dimensao1","dimensao2")) {
1593003610428:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593003610461:, x=~cenario, y=~v, color=~cenario, text=~email))
1593003610491:#orca(p)
1593003610518:}
1593003660978:for (v in c("media","dimensao1","dimensao2")) {
1593003661027:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593003661060:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email))
1593003661087:#orca(p)
1593003661118:}
1593003677293:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593003677332:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email))
1593003717709:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593003717740:, x=~cenario, y=as.formula(paste0("~", "dimensao4")), color=~cenario, text=~email))
1593003749728:for (v in c("media","dimensao1","dimensao2","dimensao3","dimensao4","dimensao5","dimensao6")) {
1593003749762:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593003749795:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email))
1593003749825:#orca(p)
1593003749857:}
1593003924644:orca(p)
1593003991798:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593003991832:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email)
1593004007434:v="dimensao6"
1593004009512:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593004009570:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email)
1593004011199:orca(p)
1593004018330:p
1593004060655:?stop
1593004105747:readline(prompt="Press [enter] to continue")
1593004132205:for (v in c("media","dimensao1","dimensao2","dimensao3","dimensao4","dimensao5","dimensao6")) {
1593004132241:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593004132276:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email))
1593004132328:readline(prompt="Press [enter] to continue")
1593004132360:}
1593004160922:?plotly
1593004181055:for (v in c("media","dimensao1","dimensao2","dimensao3","dimensao4","dimensao5","dimensao6")) {
1593004181081:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593004181111:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email)
1593004181142:p
1593004181182:readline(prompt="Press [enter] to continue")
1593004181217:}
1593004245301:?print
1593004255051:for (v in c("media","dimensao1","dimensao2","dimensao3","dimensao4","dimensao5","dimensao6")) {
1593004255081:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593004255112:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email)
1593004255144:print(p)
1593004255171:readline(prompt="Press [enter] to continue")
1593004255204:}
1593004384570:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593004384603:, x=~cenario, y=~media, color=~cenario, text=~email))
1593004433822:for (v in c("dimensao1","dimensao2","dimensao3","dimensao4","dimensao5","dimensao6",
1593004433870:"dimensao7","dimensao8","dimensao9","media")) {
1593004433900:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593004433929:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email)
1593004433967:print(p)
1593004433996:readline(prompt="Press [enter] to continue")
1593004434032:}
1593004645054:(shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1593004645091:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9))
1593004652630:write_csv(shapiro, "report/h1-experiencia-fluxo/shapiro-test.csv")
1593004657667:identify_outliers(dat, dimensao1) # outliers na dimensao1 - método boxplot
1593004658511:mahalanobis_distance(dat, media)  # outliers na media do flow - método mahalanobis
1593004738517:?t_test
1593004790523:t_test(media~cenario, data = dat, alternative = "greater")
1593004820025:(tt <- t_test(media~cenario, data = dat, alternative = "greater"))
1593004921725:?cohens_d
1593004956089:cohens_d(media~cenario, data = dat)
1593005028673:wilcox_test(media~cenario, data = dat, alternative = "greater")
1593005030392:wilcox_effsize(media~cenario, data = dat, alternative = "greater")
1593005047809:t_test(media~cenario, data = dat, alternative = "greater")
1593005048565:cohens_d(media~cenario, data = dat)
1593005159999:t_test(media~cenario, data = dat)
1593005179257:t_test(media~cenario, data = dat, alternative = "less")
1593005183489:t_test(media~cenario, data = dat, alternative = "greater")
1593005185738:cohens_d(media~cenario, data = dat)
1593005203041:param_test <- rbind(
1593005203077:merge(t_test(media~cenario, data = dat, alternative="greater")
1593005203114:, cohens_d(media~cenario, data = dat, alternative="greater"))
1593005203149:)
1593005210383:merge(t_test(media~cenario, data = dat, alternative="greater")
1593005210427:, cohens_d(media~cenario, data = dat, alternative="greater"))
1593005223599:merge(t_test(media~cenario, data = dat, alternative="greater")
1593005223637:, cohens_d(media~cenario, data = dat))
1593005235557:wilcox_effsize(dimensao1~cenario, data = dat, alternative="greater")
1593005243452:wilcox_effsize(dimensao1~cenario, data = dat)
1593005261799:cohens_d(media~cenario, data = dat, alternative="greater")
1593005279555:wilcox_effsize(media~cenario, data = dat)
1593005288017:wilcox_effsize(dimensao1~cenario, data = dat, alternative="greater")
1593005294764:wilcox_effsize(dimensao1~cenario, data = dat)
1593005367012:param_test <- rbind(
1593005367045:merge(t_test(media~cenario, data = dat, alternative="greater")
1593005367072:, cohens_d(media~cenario, data = dat))
1593005367101:, merge(t_test(dimensao1~cenario, data = dat, alternative="greater")
1593005367129:, cohens_d(dimensao1~cenario, data = dat))
1593005367156:)
1593005369889:param_test
1593005386603:param_test
1593005524635:param_test <- rbind(
1593005524666:merge(t_test(media~cenario, data = dat, alternative="greater")
1593005524701:, cohens_d(media~cenario, data = dat))
1593005524739:, merge(t_test(dimensao1~cenario, data = dat, alternative="greater")
1593005524767:, cohens_d(dimensao1~cenario, data = dat))
1593005524808:, merge(t_test(dimensao2~cenario, data = dat, alternative="greater")
1593005524837:, cohens_d(dimensao2~cenario, data = dat))
1593005524869:, merge(t_test(dimensao3~cenario, data = dat, alternative="greater")
1593005524901:, cohens_d(dimensao3~cenario, data = dat))
1593005524932:, merge(t_test(dimensao4~cenario, data = dat, alternative="greater")
1593005524969:, cohens_d(dimensao4~cenario, data = dat))
1593005525003:, merge(t_test(dimensao5~cenario, data = dat, alternative="greater")
1593005525031:, cohens_d(dimensao5~cenario, data = dat))
1593005525073:, merge(t_test(dimensao6~cenario, data = dat, alternative="greater")
1593005525103:, cohens_d(dimensao6~cenario, data = dat))
1593005525135:, merge(t_test(dimensao7~cenario, data = dat, alternative="greater")
1593005525173:, cohens_d(dimensao7~cenario, data = dat))
1593005525210:, merge(t_test(dimensao8~cenario, data = dat, alternative="greater")
1593005525233:, cohens_d(dimensao8~cenario, data = dat))
1593005525262:, merge(t_test(dimensao9~cenario, data = dat, alternative="greater")
1593005525296:, cohens_d(dimensao9~cenario, data = dat))
1593005525335:)
1593005527630:param_test
1593005611390:wants <- c('plotly','processx','dplyr','rstatix','readr')
1593005611572:has <- wants %in% rownames(installed.packages())
1593005611717:if (any(!has)) install.packages(wants[!has])
1593005612154:options(scipen = 999)
1593005623288:t_test(media~cenario, data = dat)
1593005623560:t_test(media~cenario, data = dat, alternative = "less")
1593005623754:t_test(media~cenario, data = dat, alternative = "greater")
1593005623963:cohens_d(media~cenario, data = dat)
1593005625617:param_test <- rbind(
1593005625669:merge(t_test(media~cenario, data = dat, alternative="greater")
1593005625700:, cohens_d(media~cenario, data = dat))
1593005625728:, merge(t_test(dimensao1~cenario, data = dat, alternative="greater")
1593005625762:, cohens_d(dimensao1~cenario, data = dat))
1593005625805:, merge(t_test(dimensao2~cenario, data = dat, alternative="greater")
1593005625834:, cohens_d(dimensao2~cenario, data = dat))
1593005625864:, merge(t_test(dimensao3~cenario, data = dat, alternative="greater")
1593005625893:, cohens_d(dimensao3~cenario, data = dat))
1593005625917:, merge(t_test(dimensao4~cenario, data = dat, alternative="greater")
1593005625944:, cohens_d(dimensao4~cenario, data = dat))
1593005625975:, merge(t_test(dimensao5~cenario, data = dat, alternative="greater")
1593005626002:, cohens_d(dimensao5~cenario, data = dat))
1593005626032:, merge(t_test(dimensao6~cenario, data = dat, alternative="greater")
1593005626063:, cohens_d(dimensao6~cenario, data = dat))
1593005626087:, merge(t_test(dimensao7~cenario, data = dat, alternative="greater")
1593005626111:, cohens_d(dimensao7~cenario, data = dat))
1593005626136:, merge(t_test(dimensao8~cenario, data = dat, alternative="greater")
1593005626163:, cohens_d(dimensao8~cenario, data = dat))
1593005626192:, merge(t_test(dimensao9~cenario, data = dat, alternative="greater")
1593005626221:, cohens_d(dimensao9~cenario, data = dat))
1593005626252:)
1593005627289:param_test
1593005669098:write_csv(param_test, "report/h1-experiencia-fluxo/param-test.csv")
1593005684454:wilcox_test(media~cenario, data = dat, alternative = "greater")
1593005686124:wilcox_effsize(media~cenario, data = dat, alternative = "greater")
1593005687714:non_param_test <- rbind(
1593005687744:merge(wilcox_test(media~cenario, data = dat, alternative="greater")
1593005687779:, wilcox_effsize(media~cenario, data = dat))
1593005687806:, merge(wilcox_test(dimensao1~cenario, data = dat, alternative="greater")
1593005687835:, wilcox_effsize(dimensao1~cenario, data = dat))
1593005687866:, merge(wilcox_test(dimensao2~cenario, data = dat, alternative="greater")
1593005687894:, wilcox_effsize(dimensao2~cenario, data = dat))
1593005687919:, merge(wilcox_test(dimensao3~cenario, data = dat, alternative="greater")
1593005687945:, wilcox_effsize(dimensao3~cenario, data = dat))
1593005687973:, merge(wilcox_test(dimensao4~cenario, data = dat, alternative="greater")
1593005688002:, wilcox_effsize(dimensao4~cenario, data = dat))
1593005688029:, merge(wilcox_test(dimensao5~cenario, data = dat, alternative="greater")
1593005688056:, wilcox_effsize(dimensao5~cenario, data = dat))
1593005688087:, merge(wilcox_test(dimensao6~cenario, data = dat, alternative="greater")
1593005688125:, wilcox_effsize(dimensao6~cenario, data = dat))
1593005688155:, merge(wilcox_test(dimensao7~cenario, data = dat, alternative="greater")
1593005688186:, wilcox_effsize(dimensao7~cenario, data = dat))
1593005688219:, merge(wilcox_test(dimensao8~cenario, data = dat, alternative="greater")
1593005688255:, wilcox_effsize(dimensao8~cenario, data = dat))
1593005688284:, merge(wilcox_test(dimensao9~cenario, data = dat, alternative="greater")
1593005688314:, wilcox_effsize(dimensao9~cenario, data = dat))
1593005688346:)
1593005694767:write_csv(non_param_test, "report/h1-experiencia-fluxo/non-param-test.csv")
1593005718725:write_csv(non_param_test, "report/h1-experiencia-fluxo/non-param-test.csv")
1593005728745:non-param-test
1593005730842:non-param-test
1593005741968:non_param_test
1593005790095:## Efetuar plot
1593005790130:library(plotly)
1593005791826:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593005791865:, x=~cenario, y=~media, color=~cenario, text=~email))
1593005850970:## Efetuar plot
1593005851005:library(plotly)
1593005851286:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593005851329:, x=~cenario, y=~media, color=~cenario, text=~email))
1593005897124:for (v in c("dimensao1","dimensao2","dimensao3","dimensao4","dimensao5","dimensao6",
1593005897159:"dimensao7","dimensao8","dimensao9","media")) {
1593005897197:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3, ylab="dsdf"
1593005897229:, x=~cenario, y=as.formula(paste0("~", v)), color=~cenario, text=~email)
1593005897262:print(p)
1593005897295:readline(prompt="Press [enter] to continue")
1593005897323:}
1593006012094:(p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3, yaxis="dfs"
1593006012130:, x=~cenario, y=~media, color=~cenario, text=~email))
1593006112795:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593006112828:, x=~cenario, y=~media, color=~cenario, text=~email)
1593006114290:p <- layout(p, xaxis = "cenario", yaxis = "media flow", showlegend = F)
1593006117052:p
1593006124868:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593006124901:, x=~cenario, y=~media, color=~cenario, text=~email)
1593006126115:p <- layout(p, xaxis = "cenario", yaxis = "media flow", showlegend = F)
1593006132128:print(p)
1593006136434:p
1593006140492:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593006140523:, x=~cenario, y=~media, color=~cenario, text=~email)
1593006181404:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593006181445:, x=~cenario, y=~media, color=~cenario, text=~email)
1593006183323:p <- layout(p, xaxis = list(title="cenario"), yaxis = list(title="media flow"), showlegend = F)
1593006184372:print(p)
1593006206572:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593006206624:, x=~cenario, y=~media, color=~cenario, text=~email)
1593006206973:p <- layout(p, yaxis = list(title="media flow"), showlegend = F)
1593006208196:print(p)
1593006300159:?pairs
1593006331940:ac(a="df",sf)
1593006334529:c(a="df",sf)
1593006560890:list("dimensao1", "Balanço desafio habilidade")
1593006948254:## Efetuar plot
1593006948291:library(plotly)
1593006948508:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593006948537:, x=~cenario, y=~media, color=~cenario, text=~email)
1593006948738:p <- layout(p, yaxis = list(title="media flow"), showlegend = F)
1593006948987:print(p)
1593006951738:for (param in c(list("dimensao1", "balanço desafio/habilidade")
1593006951772:, list("dimensao2", "fusão ação e atenção")
1593006951805:, list("dimensao3", "objetivos claros")
1593006951836:, list("dimensao4", "feedback")
1593006951869:, list("dimensao5", "concentração")
1593006951904:, list("dimensao6", "controle")
1593006951935:, list("dimensao7", "perda autoconsciência")
1593006951966:, list("dimensao8", "transformação do tempo")
1593006951994:, list("dimensao9", "experiência autotélica")
1593006952023:, list("media", "experiência de fluxo"))) {
1593006952060:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593006952089:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~email)
1593006952119:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593006952149:print(p)
1593006952195:readline(prompt="Press [enter] to continue")
1593006952229:}
1593006971121:c(list("dimensao1", "balanço desafio/habilidade")
1593006971171:, list("dimensao2", "fusão ação e atenção")
1593006971211:, list("dimensao3", "objetivos claros")
1593006971246:, list("dimensao4", "feedback")
1593006971276:, list("dimensao5", "concentração")
1593006971315:, list("dimensao6", "controle")
1593006971342:, list("dimensao7", "perda autoconsciência")
1593006971377:, list("dimensao8", "transformação do tempo")
1593006971419:, list("dimensao9", "experiência autotélica")
1593006971452:, list("media", "experiência de fluxo"))
1593006992864:, list("media", "experiência de fluxo"))) {
1593006992901:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593006992941:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~email)
1593006992971:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593006993008:print(p)
1593006993172:readline(prompt="Press [enter] to continue")
1593007006150:for (param in list(list("dimensao1", "balanço desafio/habilidade")
1593007006187:, list("dimensao2", "fusão ação e atenção")
1593007006227:, list("dimensao3", "objetivos claros")
1593007006266:, list("dimensao4", "feedback")
1593007006294:, list("dimensao5", "concentração")
1593007006324:, list("dimensao6", "controle")
1593007006359:, list("dimensao7", "perda autoconsciência")
1593007006390:, list("dimensao8", "transformação do tempo")
1593007006424:, list("dimensao9", "experiência autotélica")
1593007006459:, list("media", "experiência de fluxo"))) {
1593007006489:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593007006519:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~email)
1593007006552:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593007006582:print(p)
1593007006623:readline(prompt="Press [enter] to continue")
1593007006652:}
1593007095926:## Efetuar plot
1593007095956:library(plotly)
1593007096130:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593007096165:, x=~cenario, y=~media, color=~cenario, text=~email)
1593007097034:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593007097867:print(p)
1593007143171:View(param_test)
1593008120587:t_test(media~cenario, data = dat)
1593008120849:t_test(media~cenario, data = dat, alternative = "less")
1593008121061:t_test(media~cenario, data = dat, alternative = "greater")
1593008121268:cohens_d(media~cenario, data = dat)
1593008122677:param_test <- do.call(
1593008122704:rbind
1593008122728:, lapply(
1593008122750:list(list("dimensao1", "balanço desafio/habilidade")
1593008122771:, list("dimensao2", "fusão ação e atenção")
1593008122794:, list("dimensao3", "objetivos claros")
1593008122815:, list("dimensao4", "feedback")
1593008122836:, list("dimensao5", "concentração")
1593008122857:, list("dimensao6", "controle")
1593008122887:, list("dimensao7", "perda autoconsciência")
1593008122909:, list("dimensao8", "transformação do tempo")
1593008122932:, list("dimensao9", "experiência autotélica")
1593008122957:, list("media", "média do fluxo"))
1593008122982:, FUN = function(param) {
1593008123005:formula <- as.formula(paste0(param[[1]],'~cenario'))
1593008123026:return(
1593008123048:cbind(
1593008123071:"fator latente" = param[[2]]
1593008123091:, merge(t_test(formula, data = dat, alternative="greater")
1593008123113:, cohens_d(formula, data = dat))
1593008123135:)
1593008123154:)
1593008123176:}
1593008123196:)
1593008123224:)
1593008126530:param_test
1593008161004:write_csv(param_test, "report/h1-experiencia-fluxo/param-test.csv")
1593008166063:param_test
1593008184392:param_test
1593008213486:wilcox_test(media~cenario, data = dat, alternative = "greater")
1593008213932:wilcox_effsize(media~cenario, data = dat, alternative = "greater")
1593008278345:non_param_test <- do.call(
1593008278368:rbind
1593008278397:, lapply(
1593008278418:list(list("dimensao1", "balanço desafio/habilidade")
1593008278439:, list("dimensao2", "fusão ação e atenção")
1593008278461:, list("dimensao3", "objetivos claros")
1593008278483:, list("dimensao4", "feedback")
1593008278504:, list("dimensao5", "concentração")
1593008278525:, list("dimensao6", "controle")
1593008278545:, list("dimensao7", "perda autoconsciência")
1593008278563:, list("dimensao8", "transformação do tempo")
1593008278584:, list("dimensao9", "experiência autotélica")
1593008278606:, list("media", "média do fluxo"))
1593008278624:, FUN = function(param) {
1593008278645:formula <- as.formula(paste0(param[[1]],'~cenario'))
1593008278665:return(
1593008278684:cbind(
1593008278704:"fator latente" = param[[2]]
1593008278725:, merge(wilcox_test(formula, data = dat, alternative="greater")
1593008278743:, wilcox_effsize(formula, data = dat))
1593008278763:)
1593008278786:)
1593008278803:}
1593008278822:)
1593008278842:)
1593008281668:non_param_test
1593008300167:write_csv(non_param_test, "report/h1-experiencia-fluxo/non-param-test.csv")
1593008324832:## Efetuar plot
1593008324865:library(plotly)
1593008329464:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593008329488:, x=~cenario, y=~media, color=~cenario, text=~email)
1593008329802:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593008330555:print(p)
1593008422490:param_list <- list(list("dimensao1", "balanço desafio/habilidade")
1593008422517:, list("dimensao2", "fusão ação e atenção")
1593008422539:, list("dimensao3", "objetivos claros")
1593008422560:, list("dimensao4", "feedback")
1593008422579:, list("dimensao5", "concentração")
1593008422601:, list("dimensao6", "controle")
1593008422622:, list("dimensao7", "perda autoconsciência")
1593008422641:, list("dimensao8", "transformação do tempo")
1593008422662:, list("dimensao9", "experiência autotélica")
1593008422685:, list("media", "média do fluxo"))
1593008536345:non_param_test <- do.call(rbind, lapply(param_list, FUN = function(param) {
1593008536368:formula <- as.formula(paste0(param[[1]],'~cenario'))
1593008536390:cbind("fator latente" = param[[2]]
1593008536412:, merge(wilcox_test(formula, data = dat, alternative="greater")
1593008536432:, wilcox_effsize(formula, data = dat)))
1593008536453:}))
1593008537594:non_param_test
1593008546114:write_csv(non_param_test, "report/h1-experiencia-fluxo/non-param-test.csv")
1593008570592:## Efetuar plot
1593008570618:library(plotly)
1593008570765:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593008570792:, x=~cenario, y=~media, color=~cenario, text=~email)
1593008570908:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593008571170:print(p)
1593008579884:for (param in param_list) {
1593008579907:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593008579928:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~email)
1593008579949:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593008579969:print(p)
1593008579997:readline(prompt="Press [enter] to continue")
1593008580018:}
1593008974641:library(readr)      # biblioteca para leitura de arquivos CVS
1593008974931:library(digest)     # biblioteca para anonimizar dados
1593009005590:?digest
1593009048869:digest("ad")
1593009050173:digest("ad")
1593009059223:digest("sd")
1593009061667:digest("ad")
1593009066488:digest("tt")
1593009079845:digest("tt", algo = "crc32")
1593009400320:wants <- c('jsonlite', 'digest', 'readr', 'careless', 'car','dplyr')
1593009400548:has <- wants %in% rownames(installed.packages())
1593009402175:if (any(!has)) install.packages(wants[!has])
1593009403011:library(readr)      # biblioteca para leitura de arquivos CVS
1593009403224:library(digest)     # biblioteca para anonimizar dados
1593009403388:library(careless)   # biblioteca para tratamento de respostas descuidadas
1593009403584:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1593009405482:library(dplyr)      # biblioteca para manipular data.frames
1593009413948:## Leitura do questionario DFS usando arquivo CSV
1593009413974:fss_dat <- read_csv("data/survey-fss.csv")
1593009415459:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1593009416719:## Tratamento de respostas descuidadas (careless response)
1593009416749:(careless_fss_long <- longstring(resp_fss_dat))
1593009422584:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 11,27,42,13 respostas a ser eliminada
1593009424476:careless_fss_irv <- irv(resp_fss_dat)
1593009425047:careless_fss_irv_idx <- order(careless_fss_irv)
1593009425637:careless_irv_df <- cbind(resp = careless_fss_irv_idx
1593009425660:, IRV=careless_fss_irv[careless_fss_irv_idx]
1593009425689:, resp_fss_dat[careless_fss_irv_idx,])
1593009426294:head(careless_irv_df)
1593009427088:## Salvar respostas descuidadas e DFS sem respostas descuidadas
1593009427111:write_csv(fss_dat[c(11,27,42,13,14),], 'data/fss-careless.csv')
1593010415333:wants <- c('jsonlite', 'digest', 'readr', 'dplyr')
1593010416015:has <- wants %in% rownames(installed.packages())
1593010416341:if (any(!has)) install.packages(wants[!has])
1593010417967:library(readr)      # biblioteca para leitura de arquivos CVS
1593010418324:library(digest)     # biblioteca para anonimizar dados
1593010426991:library(jsonlite)
1593010458474:wants <- c('jsonlite', 'digest', 'readr', 'dplyr')
1593010458716:has <- wants %in% rownames(installed.packages())
1593010458851:if (any(!has)) install.packages(wants[!has])
1593010459013:library(jsonlite)   # biblioteca para leitura de arquivos JSON
1593010459360:library(readr)      # biblioteca para leitura de arquivos CVS
1593010459552:library(digest)     # biblioteca para anonimizar dados
1593010460090:library(dplyr)      # biblioteca para manipular data.frames
1593010550820:wants <- c('digest', 'readr', 'dplyr')
1593010551003:has <- wants %in% rownames(installed.packages())
1593010551180:if (any(!has)) install.packages(wants[!has])
1593010551656:library(readr)      # biblioteca para leitura de arquivos CVS
1593010551876:library(digest)     # biblioteca para anonimizar dados
1593010552130:library(dplyr)      # biblioteca para manipular data.frames
1593010571462:library(readr)
1593010571500:dataset <- read_csv(NULL)
1593010571535:View(dataset)
1593010608037:participants <- read_csv("raw-data/participants.csv")
1593010611608:participants
1593010705111:participants[["UserID"]] <-
1593010705159:sapply(participants$nome)
1593010722569:participants[["UserID"]] <-
1593010722624:sapply(participants$nome, FUN = function(x) digest(x))
1593010743768:participants$nome
1593010751309:sapply(participants$nome, FUN = function(x) digest(x))
1593011164930:sapply(participants$nome, digest)
1593011186118:participants[["UserID"]] <- sapply(participants$email, digest) # anonimizando por email
1593011189672:participants
1593011278630:participants <- read_csv("raw-data/participants.csv")
1593011279445:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1593011279475:digest(x, algo = "crc32")
1593011279501:})
1593011283345:participants
1593011352930:participants <- read_csv("raw-data/participants.csv")
1593011353147:participants[["UserID"]] <- sapply(participants$nome, FUN = function(x) { # anonimizando por nome
1593011353175:digest(x, algo = "crc32")
1593011353219:})
1593011353500:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1593011353524:digest(x, algo = "crc32")
1593011353550:})
1593011479022:colnames(dat)
1593011486714:colnames(participants)
1593011532455:participants <- read_csv("raw-data/participants.csv")
1593011532696:participants[["UserID"]] <- sapply(participants$nome, FUN = function(x) { # anonimizando por nome
1593011532719:digest(x, algo = "crc32")
1593011532739:})
1593011532953:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1593011532976:digest(x, algo = "crc32")
1593011532998:})
1593011533199:write_csv(participants[,c("UserID","cenario")], "data/participants.csv") # escrevendo resultados anonimizados
1593011683269:dfs <- read_csv("raw-data/survey-dfs.csv")
1593011693747:dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593011754840:merge(participants, dfs)
1593011796127:dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593011800740:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593011805038:dfs <- merge(participants, pre_dfs, by='email')
1593011814906:colnames(dfs)
1593011836857:dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593011837446:dfs <- merge(participants, pre_dfs, by='email')
1593011845695:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593011847174:dfs <- merge(participants, pre_dfs, by='email')
1593011990531:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593011990786:dfs <- merge(participants, pre_dfs, by='email')
1593012001361:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593012001655:dfs <- merge(participants, pre_dfs, by='email')
1593012002854:dfs <- select(dfs, starts_with("UserID"), starts_with("cenario")
1593012002876:, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1593012011527:View(dfs)
1593012106197:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593012106381:dfs <- merge(participants, pre_dfs, by='email')
1593012106577:dfs <- select(dfs, starts_with("UserID"), starts_with("cenario")
1593012106600:, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1593012107322:write_csv(dfs, "data/survey-dfs.csv")
1593012118783:View(dfs)
1593012156326:pre_fss <- read_csv("raw-data/survey-0-fss.csv")
1593012168630:pre_fss <- read_csv("raw-data/survey-0-fss.csv")
1593012169933:fss <- merge(participants, pre_fss, by='email')
1593012184328:fss <- select(fss, starts_with("UserID"), starts_with("cenario")
1593012184355:, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1593012187936:View(fss)
1593012211280:write_csv(fss, "data/survey-fss.csv")
1593012395273:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593012415260:colnames(pre_qpj)
1593012451088:unique(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`)
1593012883393:unique(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`)
1593013177654:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593013178807:qpj <- mutate(
1593013178830:pre_qpj
1593013178854:, "Item-Icus9"=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013178877:, "Sempre" = 5, "Frequentemente" = 4, "Não sei ao certo" = 3, "Pouco tempo" = 2, "Pouquíssimo tempo" = 1))
1593013190225:qpj <- mutate(
1593013190251:pre_qpj
1593013190275:, "Item-Icus9"=recode(`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013190298:, "Sempre" = 5, "Frequentemente" = 4, "Não sei ao certo" = 3, "Pouco tempo" = 2, "Pouquíssimo tempo" = 1))
1593013213031:recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013213056:, "Sempre" = 5, "Frequentemente" = 4, "Não sei ao certo" = 3, "Pouco tempo" = 2, "Pouquíssimo tempo" = 1)
1593013251566:library(readr)      # biblioteca para leitura de arquivos CVS
1593013251917:library(digest)     # biblioteca para anonimizar dados
1593013252129:library(dplyr)      # biblioteca para manipular data.frames
1593013254812:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593013256548:qpj <- mutate(
1593013256574:pre_qpj
1593013256600:, "Item-Icus9"=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013256622:, "Sempre" = 5, "Frequentemente" = 4, "Não sei ao certo" = 3, "Pouco tempo" = 2, "Pouquíssimo tempo" = 1))
1593013267195:?recode
1593013315000:recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013315023:, "Sempre" = 5, "Frequentemente" = 4, "Não sei ao certo" = 3, "Pouco tempo" = 2, "Pouquíssimo tempo" = 1)
1593013327073:recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013327101:, "Sempre" = 5, "Frequentemente" = 4, "Não sei ao certo" = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1)
1593013350740:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593013467267:qpj <- mutate(
1593013467302:pre_qpj
1593013467332:, "Item-Icus9"=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013467361:, "Sempre" = 5, "Frequentemente" = 4, "Não sei ao certo" = 3, "Pouco tempo" = 2, "Pouquíssimo tempo" = 1))
1593013535207:qpj <- mutate(
1593013535254:pre_qpj
1593013535289:, "Item-Icus9"=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013535323:, `Sempre` = 5, `Frequentemente` = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1))
1593013561859:qpj <- mutate(
1593013561900:pre_qpj
1593013561928:, "Item-Icus9"=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013561954:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1))
1593013572085:qpj <- mutate(
1593013572114:pre_qpj
1593013572141:, "Item-Icus9"=recode(`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013572168:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1))
1593013580109:qpj <- mutate(
1593013580139:pre_qpj
1593013580167:, "Item-Icus9"=recode("4 - Quanto tempo você passa customizando seu personagem durante a criação dele?"
1593013580197:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1))
1593013589041:qpj <- transmutate(
1593013589068:pre_qpj
1593013589097:, "Item-Icus9"=recode("4 - Quanto tempo você passa customizando seu personagem durante a criação dele?"
1593013589118:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1))
1593013601151:qpj <- transmute(
1593013601178:pre_qpj
1593013601210:, "Item-Icus9"=recode("4 - Quanto tempo você passa customizando seu personagem durante a criação dele?"
1593013601234:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1))
1593013732650:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593013764859:colnames(pre_qpj)
1593013858744:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593013903674:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593013905833:pre_qpj <- transmute(
1593013905865:pre_qpj
1593013905895:, Item8=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013905929:, 'Sim' = 1, 'Não' = 0)
1593013905959:)
1593013922819:unique(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`)
1593013960434:pre_qpj <- transmute(
1593013960470:pre_qpj
1593013960498:, Item8=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013960522:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1)
1593013960544:)
1593013999899:pre_qpj <- transmute(
1593013999935:pre_qpj
1593013999964:, Item8=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593013999991:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1, .defaul = "")
1593014000028:)
1593014001784:pre_qpj <- transmute(
1593014001805:pre_qpj
1593014001828:, Item8=recode(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593014001854:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1, .defaul = "")
1593014001877:)
1593014019220:pre_qpj <- transmute(
1593014019257:pre_qpj
1593014019286:, Item8=recode("4 - Quanto tempo você passa customizando seu personagem durante a criação dele?"
1593014019320:, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1, .defaul = "")
1593014019349:)
1593014313144:unique(pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`)
1593014322814:unique(pre_qpj$`...estar em vantagem em relação aos outros jogadores?`)
1593014336614:unique(pre_qpj$`...estar em vantagem em relação aos outros jogadores?`)
1593014595901:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593014597901:pre_qpj <- data.frame(
1593014597925:nome = pre_qpj$`Nome completo`
1593014597947:, email = pre_qpj$email
1593014597970:# componente - realização
1593014597992:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593014598022:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593014598094:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593014598119:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593014598141:, Acom8 = pre_qpj$`... você gosta de fazer coisas que incomodam outros jogadores?`
1593014598166:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593014598195:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593014598223:)
1593014630228:pre_qpj <- data.frame(
1593014630262:nome = pre_qpj$`Nome completo`
1593014630289:, email = pre_qpj$email
1593014630313:# componente - realização
1593014630345:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593014630370:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593014630399:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593014630426:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593014630460:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593014630484:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593014630513:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593014630634:)
1593014875738:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593014876100:pre_qpj <- data.frame(
1593014876122:nome = pre_qpj$`Nome completo`
1593014876151:, email = pre_qpj$email
1593014876174:# componente - realização
1593014876196:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593014876216:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593014876236:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593014876257:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593014876279:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593014876299:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593014876318:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593014876338:# componente - imersão
1593014876354:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593014876375:, Icus1 = pre_qpj$`... a armadura ou roupas de seu personagem estejam combinando em cor e estilo ou que as peças do jogo tenham uma aparência interessante?`
1593014876394:, Icus3 = pre_qpj$`... a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593014876415:, Icus9 = pre_qpj$`... quanto tempo você passa customizando seu personagem durante a criação dele?`
1593014876436:, Irol8 = pre_qpj$`... Você gosta de estar imerso em um mundo de fantasia?`
1593014876455:)
1593014918670:colnames(pre_qpj)
1593015043660:pre_qpj <- data.frame(
1593015043686:nome = pre_qpj$`Nome completo`
1593015043712:, email = pre_qpj$email
1593015043741:# componente - realização
1593015043768:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015043797:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015043825:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015043846:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015043868:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015043889:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015043909:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015043930:# componente - imersão
1593015043951:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015043971:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015043991:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015044013:, Icus9 = pre_qpj$`... quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015044032:, Irol8 = pre_qpj$`... Você gosta de estar imerso em um mundo de fantasia?`
1593015044051:)
1593015076208:pre_qpj <- data.frame(
1593015076231:nome = pre_qpj$`Nome completo`
1593015076254:, email = pre_qpj$email
1593015076272:# componente - realização
1593015076291:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015076313:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015076334:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015076352:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015076372:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015076393:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015076412:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015076432:# componente - imersão
1593015076452:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015076475:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015076494:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015076515:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015076535:, Irol8 = pre_qpj$`... Você gosta de estar imerso em um mundo de fantasia?`
1593015076555:)
1593015146069:pre_qpj <- data.frame(
1593015146112:nome = pre_qpj$`Nome completo`
1593015146141:, email = pre_qpj$email
1593015146168:# componente - realização
1593015146222:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015146255:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015146285:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015146308:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015146331:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015146354:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015146375:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015146397:# componente - imersão
1593015146424:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015146444:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015146469:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015146493:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015146517:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015146540:# componente - social
1593015146561:)
1593015389381:pre_qpj <- data.frame(
1593015389412:nome = pre_qpj$`Nome completo`
1593015389443:, email = pre_qpj$email
1593015389514:# componente - realização
1593015389536:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015389585:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015389613:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015389641:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015389671:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015389697:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015389718:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015389741:# componente - imersão
1593015389765:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015389786:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015389805:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015389833:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015389856:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015389881:# componente - social
1593015389903:, Srel0 = pre_qpj$`... conversar com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015389925:, Srel1 = pre_qpj$`... com que frequência outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015389950:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015389990:, Ssoc7 = pre_qpj$`... Você gosta de ajudar outros jogadores?`
1593015390019:, Ssoc8 = pre_qpj$`... Você gosta de conhecer outros jogadores?`
1593015390042:, Ssoc9 = pre_qpj$`... Você gosta de conversar com outros jogadores?`
1593015390064:, Stra2 = pre_qpj$`... Procura fazer parte de um grupo em jogos?`
1593015390086:)
1593015402633:pre_qpj$`... Você gosta de ajudar outros jogadores?`
1593015409001:pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015413661:pre_qpj$`... conversar com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015420652:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593015437550:colnames(pre_qpj)
1593015566788:pre_qpj <- data.frame(
1593015566817:nome = pre_qpj$`Nome completo`
1593015566849:, email = pre_qpj$email
1593015566874:# componente - realização
1593015566896:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015566917:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015566937:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015566959:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015566979:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015567000:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015567022:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015567043:# componente - imersão
1593015567063:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015567084:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015567104:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015567124:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015567144:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015567164:# componente - social
1593015567185:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015567204:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015567226:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015567248:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593015567267:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593015567288:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593015567309:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593015567328:)
1593015595758:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593015597597:pre_qpj <- data.frame(
1593015597622:nome = pre_qpj$`Nome completo`
1593015597645:, email = pre_qpj$email
1593015597665:# componente - realização
1593015597692:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015597715:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015597738:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015597767:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015597792:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015597815:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015597836:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015597856:# componente - imersão
1593015597877:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015597900:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015597920:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015597938:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015597958:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015597983:# componente - social
1593015598006:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015598032:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015598060:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015598080:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593015598102:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593015598124:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593015598144:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593015598165:)
1593015601752:View(pre_qpj)
1593015659487:pre_qpj <- data.frame(
1593015659512:nome = pre_qpj$`Nome completo`
1593015659534:, email = pre_qpj$email
1593015659558:# componente - realização
1593015659589:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015659617:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015659644:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015659668:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015659696:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015659721:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015659741:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015659764:# componente - imersão
1593015659788:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015659810:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015659831:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015659851:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015659871:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015659892:# componente - social
1593015659914:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015659933:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015659953:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015659971:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593015660003:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593015660030:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593015660053:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593015660075:)
1593015665076:qpj <- transmute(
1593015665110:pre_qpj
1593015665139:, Icus9=recode(Icus9, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1, .defaul = "")
1593015665164:)
1593015677728:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593015678215:pre_qpj <- data.frame(
1593015678239:nome = pre_qpj$`Nome completo`
1593015678264:, email = pre_qpj$email
1593015678287:# componente - realização
1593015678310:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015678331:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015678354:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015678377:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015678403:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015678426:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015678446:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015678474:# componente - imersão
1593015678498:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015678520:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015678543:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015678564:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015678585:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015678614:# componente - social
1593015678637:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015678658:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015678678:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015678699:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593015678721:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593015678741:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593015678768:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593015678793:)
1593015685821:qpj <- transmute(
1593015685855:pre_qpj
1593015685882:, Icus9=recode(Icus9, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1, .defaul = "")
1593015685913:)
1593015692440:pre_qpj
1593015705941:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593015706690:qpj <- data.frame(
1593015706719:nome = pre_qpj$`Nome completo`
1593015706745:, email = pre_qpj$email
1593015706768:# componente - realização
1593015706790:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015706814:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015706836:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015706856:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015706879:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015706900:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015706920:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015706941:# componente - imersão
1593015706962:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015706985:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015707007:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015707028:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015707046:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015707068:# componente - social
1593015707090:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015707110:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015707140:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015707163:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593015707183:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593015707211:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593015707233:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593015707261:)
1593015733274:qpj <- transmute(
1593015733295:qpj
1593015733319:, Icus9=recode(Icus9, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1, .defaul = "")
1593015733342:)
1593015773288:qpj <- transmute(
1593015773321:qpj
1593015773351:, Icus9=recode(Icus9, 'Sempre' = 5, 'Frequentemente' = 4, 'Não sei ao certo' = 3, 'Pouco tempo' = 2, 'Pouquíssimo tempo' = 1, .defaul = "")
1593015773379:)
1593015778935:qpj <- data.frame(
1593015778973:nome = pre_qpj$`Nome completo`
1593015779005:, email = pre_qpj$email
1593015779036:# componente - realização
1593015779074:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015779098:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015779121:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015779151:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015779174:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015779199:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015779224:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015779246:# componente - imersão
1593015779267:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015779287:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015779310:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015779330:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015779350:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015779372:# componente - social
1593015779392:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015779413:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015779435:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015779456:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593015779478:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593015779499:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593015779519:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593015779543:)
1593015816051:qpj$Icus9
1593015818817:qpj$Icus9
1593015898323:qpj <- data.frame(
1593015898351:nome = pre_qpj$`Nome completo`
1593015898375:, email = pre_qpj$email
1593015898398:# componente - realização
1593015898422:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015898445:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015898466:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015898488:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015898508:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015898526:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015898550:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015898569:# componente - imersão
1593015898588:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015898607:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015898626:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015898644:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015898665:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015898685:# componente - social
1593015898705:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015898726:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015898745:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015898765:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593015898786:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593015898813:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593015898834:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593015898858:)
1593015899308:qpj[["Icus9"]] <- sapply(qpj$Icus9, FUN = function(x) {
1593015899329:if (x == 'Sempre') return(5)
1593015899351:if (x == 'Frequentemente') return(4)
1593015899377:if (x == 'Não sei ao certo') return(3)
1593015899396:if (x == 'Pouco tempo') return(2)
1593015899420:if (x == 'Pouquíssimo tempo') return(1)
1593015899439:})
1593015907602:View(qpj)
1593015995502:qpj <- data.frame(
1593015995562:nome = pre_qpj$`Nome completo`
1593015995583:, email = pre_qpj$email
1593015995603:# componente 1 - realização
1593015995625:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593015995647:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593015995669:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593015995691:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593015995717:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593015995745:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593015995766:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593015995793:# componente 2 - imersão
1593015995819:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593015995849:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593015995873:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593015995895:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593015995915:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593015995937:# componente 3 - social
1593015995965:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593015995988:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593015996013:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593015996036:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593015996059:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593015996080:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593015996103:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593015996127:)
1593015997764:qpj[["Icus9"]] <- sapply(qpj$Icus9, FUN = function(x) {
1593015997819:if (x == 'Sempre') return(5)
1593015997849:if (x == 'Frequentemente') return(4)
1593015997881:if (x == 'Não sei ao certo') return(3)
1593015997908:if (x == 'Pouco tempo') return(2)
1593015997941:if (x == 'Pouquíssimo tempo') return(1)
1593015997963:})
1593016161221:qpj <- data.frame(
1593016161270:nome = pre_qpj$`Nome completo`
1593016161315:, email = pre_qpj$email
1593016161344:# componente 1 - realização
1593016161369:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016161398:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016161428:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593016161457:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016161478:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016161497:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593016161516:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016161536:# componente 2 - imersão
1593016161553:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016161572:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016161591:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016161609:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016161630:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016161647:# componente 3 - social
1593016161665:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016161682:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016161700:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016161718:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016161739:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016161759:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016161779:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016161799:)
1593016161863:qpj[["Icus9"]] <- sapply(qpj$Icus9, FUN = function(x) {
1593016161887:if (x == 'Sempre') return(5)
1593016161906:if (x == 'Frequentemente') return(4)
1593016161927:if (x == 'Não sei ao certo') return(3)
1593016161952:if (x == 'Pouco tempo') return(2)
1593016161974:if (x == 'Pouquíssimo tempo') return(1)
1593016161995:})
1593016162739:qpj <- transmute(
1593016162761:qpj
1593016162786:, "social" = (Srel0+Srel1+Srel9+Ssoc7+Ssoc8+Ssoc9+Stra2)/7
1593016162806:)
1593016168662:View(qpj)
1593016181469:qpj <- data.frame(
1593016181496:nome = pre_qpj$`Nome completo`
1593016181519:, email = pre_qpj$email
1593016181539:# componente 1 - realização
1593016181559:, Acom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016181580:, Acom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016181599:, Acom5 = pre_qpj$`... derrotar outros jogadores?`
1593016181621:, Acom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016181643:, Acom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016181666:, ACom9 = pre_qpj$`... competir com outros jogadores?`
1593016181686:, AAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016181705:# componente 2 - imersão
1593016181725:, Icus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016181743:, Icus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016181761:, Icus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016181780:, Icus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016181801:, Irol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016181821:# componente 3 - social
1593016181841:, Srel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016181863:, Srel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016181882:, Srel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016181902:, Ssoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016181921:, Ssoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016181942:, Ssoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016181962:, Stra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016181982:)
1593016182042:qpj[["Icus9"]] <- sapply(qpj$Icus9, FUN = function(x) {
1593016182065:if (x == 'Sempre') return(5)
1593016182086:if (x == 'Frequentemente') return(4)
1593016182110:if (x == 'Não sei ao certo') return(3)
1593016182131:if (x == 'Pouco tempo') return(2)
1593016182153:if (x == 'Pouquíssimo tempo') return(1)
1593016182173:})
1593016182679:qpj <- mutate(
1593016182707:qpj
1593016182730:, "social" = (Srel0+Srel1+Srel9+Ssoc7+Ssoc8+Ssoc9+Stra2)/7
1593016182754:)
1593016185898:View(qpj)
1593016370335:wants <- c('digest', 'readr', 'dplyr')
1593016370541:has <- wants %in% rownames(installed.packages())
1593016370665:if (any(!has)) install.packages(wants[!has])
1593016370827:library(readr)      # biblioteca para leitura de arquivos CVS
1593016371030:library(digest)     # biblioteca para anonimizar dados
1593016371160:library(dplyr)      # biblioteca para manipular data.frames
1593016371319:participants <- read_csv("raw-data/participants.csv")
1593016371540:participants[["UserID"]] <- sapply(participants$nome, FUN = function(x) { # anonimizando por nome
1593016371614:digest(x, algo = "crc32")
1593016371633:})
1593016371678:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1593016371703:digest(x, algo = "crc32")
1593016371728:})
1593016371821:write_csv(participants[,c("UserID","cenario")], "data/participants.csv") # escrevendo resultados anonimizados
1593016371978:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593016372698:dfs <- merge(participants, pre_dfs, by='email')
1593016373017:dfs <- select(dfs, starts_with("UserID"), starts_with("cenario")
1593016373039:, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1593016373296:write_csv(dfs, "data/survey-dfs.csv")
1593016374256:pre_fss <- read_csv("raw-data/survey-0-fss.csv")
1593016374942:fss <- merge(participants, pre_fss, by='email')
1593016375165:fss <- select(fss, starts_with("UserID"), starts_with("cenario")
1593016375192:, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1593016375346:write_csv(fss, "data/survey-fss.csv")
1593016377659:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016421173:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016421649:qpj <- data.frame(
1593016421669:nome = pre_qpj$`Nome completo`
1593016421692:, email = pre_qpj$email
1593016421711:# componente 1 - realização
1593016421730:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016421758:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016421779:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016421799:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016421819:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016421840:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016421861:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016421881:# componente 2 - imersão
1593016421900:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016421922:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016421939:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016421956:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016421972:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016421988:# componente 3 - social
1593016422006:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016422026:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016422044:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016422063:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016422081:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016422098:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016422116:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016422133:)
1593016427591:qpj[["Icus9"]] <- sapply(qpj$ItemIcus9, FUN = function(x) {
1593016427612:if (x == 'Sempre') return(5)
1593016427635:if (x == 'Frequentemente') return(4)
1593016427654:if (x == 'Não sei ao certo') return(3)
1593016427673:if (x == 'Pouco tempo') return(2)
1593016427694:if (x == 'Pouquíssimo tempo') return(1)
1593016427716:})
1593016462145:qpj[["Icus9"]] <- sapply(qpj$ItemIcus9, FUN = function(x) {
1593016462166:if (x == 'Sempre') return(5)
1593016462185:if (x == 'Frequentemente') return(4)
1593016462204:if (x == 'Não sei ao certo') return(3)
1593016462222:if (x == 'Pouco tempo') return(2)
1593016462238:if (x == 'Pouquíssimo tempo') return(1)
1593016462256:})
1593016490116:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016491355:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016493047:qpj <- data.frame(
1593016493065:nome = pre_qpj$`Nome completo`
1593016493083:, email = pre_qpj$email
1593016493099:# componente 1 - realização
1593016493117:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016493133:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016493152:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016493170:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016493188:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016493205:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016493221:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016493238:# componente 2 - imersão
1593016493257:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016493273:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016493289:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016493308:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016493324:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016493341:# componente 3 - social
1593016493359:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016493376:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016493394:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016493411:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016493427:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016493446:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016493464:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016493479:)
1593016507269:qpj <- data.frame(
1593016507313:nome = pre_qpj$`Nome completo`
1593016507344:, email = pre_qpj$email
1593016507371:# componente 1 - realização
1593016507397:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016507424:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016507448:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016507469:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016507503:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016507525:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016507547:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016507570:# componente 2 - imersão
1593016507591:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016507614:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016507634:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016507655:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016507683:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016507707:# componente 3 - social
1593016507734:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016507768:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016507788:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016507808:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016507833:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016507854:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016507878:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016507907:)
1593016512716:qpj[["Icus9"]] <- sapply(pre_qpj$ItemIcus9, FUN = function(x) {
1593016512742:if (x == 'Sempre') return(5)
1593016512765:if (x == 'Frequentemente') return(4)
1593016512796:if (x == 'Não sei ao certo') return(3)
1593016512822:if (x == 'Pouco tempo') return(2)
1593016512850:if (x == 'Pouquíssimo tempo') return(1)
1593016512875:})
1593016519537:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016521424:qpj <- data.frame(
1593016521469:nome = pre_qpj$`Nome completo`
1593016521493:, email = pre_qpj$email
1593016521517:# componente 1 - realização
1593016521537:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016521558:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016521580:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016521597:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016521617:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016521637:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016521656:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016521683:# componente 2 - imersão
1593016521703:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016521727:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016521751:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016521772:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016521791:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016521813:# componente 3 - social
1593016521833:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016521854:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016521874:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016521894:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016521915:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016521935:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016521955:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016521976:)
1593016534399:qpj[["ItemIcus9"]] <- sapply(pre_qpj$ItemIcus9, FUN = function(x) {
1593016534421:if (x == 'Sempre') return(5)
1593016534445:if (x == 'Frequentemente') return(4)
1593016534466:if (x == 'Não sei ao certo') return(3)
1593016534490:if (x == 'Pouco tempo') return(2)
1593016534514:if (x == 'Pouquíssimo tempo') return(1)
1593016534536:})
1593016559640:qpj <- data.frame(
1593016559660:nome = pre_qpj$`Nome completo`
1593016559678:, email = pre_qpj$email
1593016559694:# componente 1 - realização
1593016559713:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016559729:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016559745:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016559764:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016559782:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016559802:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016559820:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016559837:# componente 2 - imersão
1593016559854:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016559874:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016559892:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016559910:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016559932:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016559947:# componente 3 - social
1593016559963:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016559980:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016559998:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016560019:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016560040:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016560057:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016560075:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016560091:)
1593016623846:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016624336:qpj <- data.frame(
1593016624356:nome = pre_qpj$`Nome completo`
1593016624383:, email = pre_qpj$email
1593016624404:# componente 1 - realização
1593016624423:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016624443:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016624463:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016624483:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016624503:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016624522:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016624541:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016624558:# componente 2 - imersão
1593016624578:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016624595:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016624617:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016624634:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016624652:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016624669:# componente 3 - social
1593016624689:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016624708:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016624727:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016624747:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016624765:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016624782:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016624802:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016624820:)
1593016628176:qpj[["ItemIcus9"]] <- sapply(
1593016628199:pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016628220:, FUN = function(x) {
1593016628239:if (x == 'Sempre') return(5)
1593016628259:if (x == 'Frequentemente') return(4)
1593016628279:if (x == 'Não sei ao certo') return(3)
1593016628301:if (x == 'Pouco tempo') return(2)
1593016628320:if (x == 'Pouquíssimo tempo') return(1)
1593016628341:})
1593016636145:qpj <- mutate(
1593016636171:qpj
1593016636196:, "realizacao" = (ItemAcom0+ItemAcom3+ItemAcom5+ItemAcom6+ItemAcom8+ItemAcom9+ItemAAva2)/7
1593016636219:, "imersao" = (ItemIcus0+ItemIcus1+ItemIcus3+ItemIcus9+ItemIrol8)/5
1593016636242:, "social" = (ItemSrel0+ItemSrel1+ItemSrel9+ItemSsoc7+ItemSsoc8+ItemSsoc9+ItemStra2)/7
1593016636276:)
1593016648919:View(qpj)
1593016723904:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016734300:wants <- c('digest', 'readr', 'dplyr')
1593016734461:has <- wants %in% rownames(installed.packages())
1593016734617:if (any(!has)) install.packages(wants[!has])
1593016734760:library(readr)      # biblioteca para leitura de arquivos CVS
1593016734952:library(digest)     # biblioteca para anonimizar dados
1593016735115:library(dplyr)      # biblioteca para manipular data.frames
1593016735290:participants <- read_csv("raw-data/participants.csv")
1593016735682:participants[["UserID"]] <- sapply(participants$nome, FUN = function(x) { # anonimizando por nome
1593016735703:digest(x, algo = "crc32")
1593016735725:})
1593016735916:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1593016735938:digest(x, algo = "crc32")
1593016735958:})
1593016737668:write_csv(participants[,c("UserID","cenario")], "data/participants.csv") # escrevendo resultados anonimizados
1593016741352:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593016741576:dfs <- merge(participants, pre_dfs, by='email')
1593016741776:dfs <- select(dfs, starts_with("UserID"), starts_with("cenario")
1593016741798:, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1593016741957:write_csv(dfs, "data/survey-dfs.csv")
1593016742108:pre_fss <- read_csv("raw-data/survey-0-fss.csv")
1593016742326:fss <- merge(participants, pre_fss, by='email')
1593016742680:fss <- select(fss, starts_with("UserID"), starts_with("cenario")
1593016742700:, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1593016742976:write_csv(fss, "data/survey-fss.csv")
1593016743485:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016775221:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016780994:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016783399:qpj <- data.frame(
1593016783431:nome = pre_qpj$`Nome completo`
1593016783458:, email = pre_qpj$email
1593016783479:# componente 1 - realização
1593016783505:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016783529:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016783556:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016783578:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016783600:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016783620:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016783640:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016783660:# componente 2 - imersão
1593016783678:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016783698:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016783718:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016783737:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016783755:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016783774:# componente 3 - social
1593016783792:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016783810:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016783831:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016783850:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016783868:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016783885:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016783904:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016783921:)
1593016790507:qpj[["ItemIcus9"]] <- sapply(
1593016790534:pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016790560:, FUN = function(x) {
1593016790580:if (x == 'Sempre') return(5)
1593016790601:if (x == 'Frequentemente') return(4)
1593016790622:if (x == 'Não sei ao certo') return(3)
1593016790644:if (x == 'Pouco tempo') return(2)
1593016790661:if (x == 'Pouquíssimo tempo') return(1)
1593016790680:})
1593016796970:View(qpj)
1593016814641:qpj <- mutate(
1593016814664:qpj
1593016814685:, "realizacao" = (ItemAcom0+ItemAcom3+ItemAcom5+ItemAcom6+ItemAcom8+ItemAcom9+ItemAAva2)/7
1593016814703:, "imersao" = (ItemIcus0+ItemIcus1+ItemIcus3+ItemIcus9+ItemIrol8)/5
1593016814722:, "social" = (ItemSrel0+ItemSrel1+ItemSrel9+ItemSsoc7+ItemSsoc8+ItemSsoc9+ItemStra2)/7
1593016814740:)
1593016855270:qpj <- merge(participants, qpj, by='email')
1593016864564:colnames(qpj)
1593016912278:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016912778:pre_qpj <- data.frame(
1593016912796:nome = pre_qpj$`Nome completo`
1593016912814:, email = pre_qpj$email
1593016912834:# componente 1 - realização
1593016912853:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016912870:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016912886:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016912903:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016912956:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016912973:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016912993:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016913013:# componente 2 - imersão
1593016913032:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016913050:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016913067:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016913084:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016913101:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016913118:# componente 3 - social
1593016913137:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016913155:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016913171:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016913189:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016913206:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016913222:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016913239:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016913256:)
1593016948207:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593016948431:pre_qpj <- data.frame(
1593016948452:nome = pre_qpj$`Nome completo`
1593016948473:, email = pre_qpj$email
1593016948493:# componente 1 - realização
1593016948512:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1593016948531:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1593016948546:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1593016948563:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1593016948577:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1593016948594:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1593016948610:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1593016948626:# componente 2 - imersão
1593016948644:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1593016948659:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1593016948677:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1593016948692:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1593016948708:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1593016948732:# componente 3 - social
1593016948750:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1593016948766:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1593016948782:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1593016948802:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1593016948823:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1593016948844:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1593016948867:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1593016948894:)
1593016949225:pre_qpj[["ItemIcus9"]] <- sapply(pre_qpj$ItemIcus9, FUN = function(x) {
1593016949243:if (x == 'Sempre') return(5)
1593016949263:if (x == 'Frequentemente') return(4)
1593016949284:if (x == 'Não sei ao certo') return(3)
1593016949300:if (x == 'Pouco tempo') return(2)
1593016949317:if (x == 'Pouquíssimo tempo') return(1)
1593016949335:})
1593016962192:pre_qpj <- mutate(
1593016962210:pre_qpj
1593016962235:, "realizacao" = (ItemAcom0+ItemAcom3+ItemAcom5+ItemAcom6+ItemAcom8+ItemAcom9+ItemAAva2)/7
1593016962263:, "imersao" = (ItemIcus0+ItemIcus1+ItemIcus3+ItemIcus9+ItemIrol8)/5
1593016962289:, "social" = (ItemSrel0+ItemSrel1+ItemSrel9+ItemSsoc7+ItemSsoc8+ItemSsoc9+ItemStra2)/7
1593016962314:)
1593016968843:qpj <- merge(participants, pre_qpj, by='email')
1593016986501:colnames(pre_qpj)
1593017030811:qpj <- merge(participants, pre_qpj, by='email')
1593017035811:qpj <- select(qpj, starts_with("UserID"), starts_with("cenario"), starts_with("Item")
1593017035837:, starts_with("realizacao"), starts_with("imersao"), starts_with("social"))
1593017041750:write_csv(qpj, "data/survey-qpj.csv")
1593017046606:View(qpj)
1593017126491:wants <- c('jsonlite', 'digest', 'readr', 'careless', 'car','dplyr')
1593017126657:has <- wants %in% rownames(installed.packages())
1593017126798:if (any(!has)) install.packages(wants[!has])
1593017126954:library(readr)      # biblioteca para leitura de arquivos CVS
1593017127187:library(digest)     # biblioteca para anonimizar dados
1593017127273:library(careless)   # biblioteca para tratamento de respostas descuidadas
1593017127454:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1593017127627:library(dplyr)      # biblioteca para manipular data.frames
1593017127815:## Leitura do questionario DFS usando arquivo CSV
1593017127835:fss_dat <- read_csv("data/survey-fss.csv")
1593017133862:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1593017134481:## Tratamento de respostas descuidadas (careless response)
1593017134500:(careless_fss_long <- longstring(resp_fss_dat))
1593017135713:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 11,27,42,13 respostas a ser eliminada
1593017168335:wants <- c('jsonlite', 'digest', 'readr', 'careless', 'car','dplyr')
1593017168524:has <- wants %in% rownames(installed.packages())
1593017168847:if (any(!has)) install.packages(wants[!has])
1593017169086:library(readr)      # biblioteca para leitura de arquivos CVS
1593017169228:library(digest)     # biblioteca para anonimizar dados
1593017169396:library(careless)   # biblioteca para tratamento de respostas descuidadas
1593017169574:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1593017169775:library(dplyr)      # biblioteca para manipular data.frames
1593017187204:wants <- c('readr', 'careless', 'car','dplyr')
1593017187415:has <- wants %in% rownames(installed.packages())
1593017187593:if (any(!has)) install.packages(wants[!has])
1593017187898:library(readr)      # biblioteca para leitura de arquivos CVS
1593017188549:library(careless)   # biblioteca para tratamento de respostas descuidadas
1593017189290:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1593017190589:library(dplyr)      # biblioteca para manipular data.frames
1593017192030:## Leitura do questionario DFS usando arquivo CSV
1593017192049:fss_dat <- read_csv("data/survey-fss.csv")
1593017196098:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1593017199564:View(resp_fss_dat)
1593017209938:## Tratamento de respostas descuidadas (careless response)
1593017209960:(careless_fss_long <- longstring(resp_fss_dat))
1593017235063:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 11,27,42,13 respostas a ser eliminada
1593017335346:careless_fss_irv <- irv(resp_fss_dat)
1593017336840:careless_fss_irv_idx <- order(careless_fss_irv)
1593017338674:careless_irv_df <- cbind(resp = careless_fss_irv_idx
1593017338700:, IRV=careless_fss_irv[careless_fss_irv_idx]
1593017338725:, resp_fss_dat[careless_fss_irv_idx,])
1593017347693:head(careless_irv_df)
1593017444100:write_csv(fss_dat[c(3,20,38,5,6),], 'data/fss-careless.csv')
1593017444648:write_csv(fss_dat[-c(3,20,38,5,6),], 'data/fss.csv')
1593017521242:wants <- c('readr', 'careless', 'car','dplyr')
1593017521559:has <- wants %in% rownames(installed.packages())
1593017521955:if (any(!has)) install.packages(wants[!has])
1593017522240:library(readr)      # biblioteca para leitura de arquivos CVS
1593017522532:library(careless)   # biblioteca para tratamento de respostas descuidadas
1593017522796:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1593017523206:library(dplyr)      # biblioteca para manipular data.frames
1593017525470:## Leitura do questionario DFS usando arquivo CSV
1593017525491:dfs_dat <- read_csv("data/survey-0-dfs.csv")
1593017530582:## Leitura do questionario DFS usando arquivo CSV
1593017530602:dfs_dat <- read_csv("data/survey-dfs.csv")
1593017531671:resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
1593017534631:(careless_dfs_long <- longstring(resp_dfs_dat))
1593017541301:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS")
1593017601234:(careless_dfs_long <- longstring(resp_dfs_dat))
1593017605046:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS") # careless 3,20
1593017607059:careless_dfs_irv <- irv(resp_dfs_dat)
1593017608400:careless_dfs_irv_idx <- order(careless_dfs_irv)
1593017609195:careless_irv_df <- cbind(resp = careless_dfs_irv_idx
1593017609217:, IRV=careless_dfs_irv[careless_dfs_irv_idx]
1593017609236:, resp_dfs_dat[careless_dfs_irv_idx,])
1593017610330:head(careless_irv_df)
1593017661622:write_csv(dfs_dat[c(3,20,6),], 'data/dfs-careless.csv')
1593017662771:write_csv(dfs_dat[-c(3,20,6),], 'data/dfs.csv')
1593017780911:wants <- c('readr', 'careless', 'car','dplyr')
1593017781103:has <- wants %in% rownames(installed.packages())
1593017781338:if (any(!has)) install.packages(wants[!has])
1593017781535:library(readr)      # biblioteca para leitura de arquivos CVS
1593017781889:library(careless)   # biblioteca para tratamento de respostas descuidadas
1593017782104:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1593017782297:library(dplyr)      # biblioteca para manipular data.frames
1593017782737:dfs_dat <- read_csv("data/survey-qpj.csv")
1593017795947:wants <- c('readr', 'careless', 'car','dplyr')
1593017796121:has <- wants %in% rownames(installed.packages())
1593017796263:if (any(!has)) install.packages(wants[!has])
1593017796405:library(readr)      # biblioteca para leitura de arquivos CVS
1593017796566:library(careless)   # biblioteca para tratamento de respostas descuidadas
1593017796729:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1593017796930:library(dplyr)      # biblioteca para manipular data.frames
1593017797344:qpj_dat <- read_csv("data/survey-qpj.csv")
1593017822281:resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
1593017830369:(careless_dfs_long <- longstring(resp_qpj_dat))
1593017841166:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o QPJ") # careless 3,20
1593017957075:careless_dfs_irv <- irv(resp_dfs_dat)
1593017974817:(careless_qpj_long <- longstring(resp_qpj_dat))
1593017976059:Boxplot(careless_qpj_long, main = "Boxplot do Longstring para o QPJ") # nemhum > 12 => não há careless
1593017996722:careless_qpj_irv <- irv(resp_qpj_dat)
1593017997616:careless_qpj_irv_idx <- order(careless_qpj_irv)
1593018024272:careless_qpj_df <- cbind(resp = careless_qpj_irv_idx
1593018024306:, IRV=careless_qpj_irv[careless_qpj_irv_idx]
1593018024330:, resp_qpj_dat[careless_qpj_irv_idx,])
1593018025354:head(careless_irv_df) # careless 3, 20, 6
1593018040762:careless_irv_df <- cbind(resp = careless_qpj_irv_idx
1593018040790:, IRV=careless_qpj_irv[careless_qpj_irv_idx]
1593018040820:, resp_qpj_dat[careless_qpj_irv_idx,])
1593018043025:head(careless_irv_df) # careless 3, 20, 6
1593018096973:careless_qpj_irv <- irv(resp_qpj_dat)
1593018097254:careless_qpj_irv_idx <- order(careless_qpj_irv)
1593018097442:careless_irv_df <- cbind(resp = careless_qpj_irv_idx
1593018097461:, IRV=careless_qpj_irv[careless_qpj_irv_idx]
1593018097485:, resp_qpj_dat[careless_qpj_irv_idx,])
1593018098580:head(careless_irv_df) # careless 40
1593018099937:write_csv(dfs_dat[c(40),], 'data/qpj-careless.csv')
1593018111811:qpj_dat <- read_csv("data/survey-qpj.csv")
1593018113171:resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
1593018113669:(careless_qpj_long <- longstring(resp_qpj_dat))
1593018114144:Boxplot(careless_qpj_long, main = "Boxplot do Longstring para o QPJ") # nemhum > 12 => não há careless
1593018114680:careless_qpj_irv <- irv(resp_qpj_dat)
1593018114989:careless_qpj_irv_idx <- order(careless_qpj_irv)
1593018115256:careless_irv_df <- cbind(resp = careless_qpj_irv_idx
1593018115276:, IRV=careless_qpj_irv[careless_qpj_irv_idx]
1593018115296:, resp_qpj_dat[careless_qpj_irv_idx,])
1593018116288:head(careless_irv_df) # careless 40
1593018117099:write_csv(qpj_dat[c(40),], 'data/qpj-careless.csv')
1593018117716:write_csv(qpj_dat[-c(40),], 'data/qpj.csv')
1593018125961:View(resp_qpj_dat)
1593018141493:View(qpj_dat)
1593018243864:wants <- c('plotly','processx','dplyr','rstatix','readr')
1593018244125:has <- wants %in% rownames(installed.packages())
1593018244299:if (any(!has)) install.packages(wants[!has])
1593018245162:options(scipen = 999)
1593018245474:library(readr)
1593018245690:library(dplyr)
1593018245864:library(rstatix)
1593018248101:fss <- read_csv('data/fss.csv')
1593018264310:colnames(fss)
1593018308921:fss <- read_csv('data/fss.csv')
1593018309816:dat <- select(fss, starts_with("UserID"), starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1593018311037:dat$cenario = factor(dat$cenario)
1593018313961:View(dat)
1593018326058:(fss_summary <- get_summary_stats(dat))
1593018333294:(fss_frequency <- freq_table(dat, cenario))
1593018336162:write_csv(fss_summary, 'report/fss-summary.csv')
1593018336937:write_csv(fss_frequency, 'report/fss-frequency.csv')
1593018342256:(shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1593018342282:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9))
1593018819570:if_else(shapiro$p < 0.5, 'não normal', 'normal')
1593018833609:if_else(shapiro$p < 0.5, 'não normal', 'normal')
1593018854942:if_else(shapiro$p < 0.05, 'não normal', 'normal')
1593018874630:shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1593018874653:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9)
1593018875205:shapiro[["obs"]] <- if_else(shapiro$p < 0.05, 'não normal', 'normal')
1593018875847:print(shapiro)
1593018901328:mahalanobis_distance(dat, dimensao5)  # identificação de outliers na media do flow - método mahalanobis
1593018975574:identify_outliers(dat, dimensao2) # identificação de outliers na dimensao1 - método boxplot
1593018986654:mahalanobis_distance(dat, dimensao2)  # identificação de outliers na media do flow - método mahalanobis
1593019005279:mahalanobis_distance(dat)
1593019165460:identify_outliers(dat, dimensao2) # identificação de outliers na dimensao1 - método boxplot
1593019175610:print(shapiro)
1593019188526:identify_outliers(dat, media) # identificação de outliers na dimensao1 - método boxplot
1593019277407:t_test(dimensao1~cenario, data = dat)
1593019277775:t_test(dimensao1~cenario, data = dat, alternative = "less")
1593019278052:t_test(dimensao1~cenario, data = dat, alternative = "greater")
1593019278463:cohens_d(dimensao1~cenario, data = dat)
1593019314999:t_test(dimensao1~cenario, data = dat)
1593019318649:t_test(dimensao1~cenario, data = dat, alternative = "less")
1593019333778:t_test(media~cenario, data = dat)
1593019334901:t_test(media~cenario, data = dat, alternative = "less")
1593019335640:t_test(media~cenario, data = dat, alternative = "greater")
1593019336978:cohens_d(media~cenario, data = dat)
1593019373785:shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1593019373806:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9)
1593019379284:print(shapiro)
1593019487367:MVN::mvn(dat)
1593019491944:MVN::mvn(dat)
1593019495532:?mnv
1593019510146:?MVN::mvn
1593019525417:MVN::mvn(dat, univariateNormality =T)
1593019549255:MVN::mvn(dat, univariateTest = "SW")
1593019560731:MVN::mvn(dat$dimensao1, univariateTest = "SW")
1593019653193:MVN::mvn(select(dat, starts_with("dimensao")) , univariateTest = "SW")
1593019749084:shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1593019749117:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9)
1593019749846:shapiro[["dist.normal"]] <- if_else(shapiro$p > 0.05, 'sim', 'não')
1593019751558:print(shapiro)
1593019760780:MVN::mvn(select(dat, starts_with("dimensao")) , univariateTest = "SW")
1593019775700:print(shapiro)
1593019864969:identify_outliers(dat, media) # identificação de outliers na media do fluxo - método boxplot
1593019891697:t_test(dimensao1~cenario, data = dat)
1593019895562:t_test(dimensao1~cenario, data = dat, alternative = "less")
1593019900756:t_test(dimensao1~cenario, data = dat, alternative = "greater")
1593019904205:cohens_d(dimensao1~cenario, data = dat)
1593019964019:param_test <- do.call(
1593019964040:rbind
1593019964059:, lapply(
1593019964074:list(list("dimensao1", "balanço desafio/habilidade")
1593019964089:, list("dimensao5", "concentração"))
1593019964107:, FUN = function(param) {
1593019964123:formula <- as.formula(paste0(param[[1]],'~cenario'))
1593019964142:return(
1593019964160:cbind(
1593019964178:"fator latente" = param[[2]]
1593019964197:, merge(t_test(formula, data = dat, alternative="greater")
1593019964221:, cohens_d(formula, data = dat))
1593019964240:)
1593019964260:)
1593019964280:}
1593019964297:)
1593019964318:)
1593019965646:param_test
1593019991827:write_csv(param_test, "report/h1-experiencia-fluxo/parametric-test.csv")
1593020002379:wilcox_test(media~cenario, data = dat, alternative = "greater")
1593020003359:wilcox_effsize(media~cenario, data = dat, alternative = "greater")
1593020013551:param_list <- list(list("dimensao1", "balanço desafio/habilidade")
1593020013574:, list("dimensao2", "fusão ação e atenção")
1593020013595:, list("dimensao3", "objetivos claros")
1593020013615:, list("dimensao4", "feedback")
1593020013634:, list("dimensao5", "concentração")
1593020013656:, list("dimensao6", "controle")
1593020013677:, list("dimensao7", "perda autoconsciência")
1593020013694:, list("dimensao8", "transformação do tempo")
1593020013713:, list("dimensao9", "experiência autotélica")
1593020013731:, list("media", "média do fluxo"))
1593020021788:non_param_test <- do.call(rbind, lapply(param_list, FUN = function(param) {
1593020021809:formula <- as.formula(paste0(param[[1]],'~cenario'))
1593020021832:cbind("fator latente" = param[[2]]
1593020021853:, merge(wilcox_test(formula, data = dat, alternative="greater")
1593020021869:, wilcox_effsize(formula, data = dat)))
1593020021890:}))
1593020022703:non_param_test
1593020072514:write_csv(non_param_test, "report/h1-experiencia-fluxo/non-parametric-test.csv")
1593020090691:## Efetuar plot
1593020090712:library(plotly)
1593020091497:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593020091519:, x=~cenario, y=~media, color=~cenario, text=~email)
1593020095659:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593020096945:print(p)
1593020107684:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593020107705:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593020108568:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593020110321:print(p)
1593020154991:for (param in param_list) {
1593020155020:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593020155045:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~email)
1593020155072:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593020155091:print(p)
1593020155206:readline(prompt="Press [enter] to continue")
1593020155225:}
1593020166163:## Efetuar plot
1593020166185:library(plotly)
1593020166390:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593020166414:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593020166667:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593020167035:print(p)
1593020169675:for (param in param_list) {
1593020169695:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593020169713:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1593020169730:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593020169749:print(p)
1593020169774:readline(prompt="Press [enter] to continue")
1593020169793:}
1593023404254:library(readr)
1593023405167:survey_0_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1593023405235:View(survey_0_dfs)
1593023429798:library(readr)
1593023429828:survey_0_fss <- read_csv("raw-data/survey-0-fss.csv")
1593023429885:View(survey_0_fss)
1593023446210:library(readr)
1593023446240:survey_0_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1593023446336:View(survey_0_qpj)
1593023536501:wants <- c('readr', 'careless', 'car','dplyr')
1593023537062:has <- wants %in% rownames(installed.packages())
1593023541520:if (any(!has)) install.packages(wants[!has])
1593023541548:library(readr)      # biblioteca para leitura de arquivos CVS
1593023541576:library(careless)   # biblioteca para tratamento de respostas descuidadas
1593023541605:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1593023541655:library(dplyr)      # biblioteca para manipular data.frames
1593023541678:## Leitura do questionario DFS usando arquivo CSV
1593023541702:fss_dat <- read_csv("data/survey-fss.csv")
1593023542593:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1593023543052:## Tratamento de respostas descuidadas (careless response)
1593023543089:(careless_fss_long <- longstring(resp_fss_dat))
1593023547655:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 3,20,38 respostas a ser eliminada
1593023576435:careless_fss_irv <- irv(resp_fss_dat)
1593023577017:careless_fss_irv_idx <- order(careless_fss_irv)
1593023577642:careless_irv_df <- cbind(resp = careless_fss_irv_idx
1593023577668:, IRV=careless_fss_irv[careless_fss_irv_idx]
1593023577706:, resp_fss_dat[careless_fss_irv_idx,])
1593023578537:head(careless_irv_df) # 3,20,5,6
1593023644655:wants <- c('plotly','processx','dplyr','rstatix','readr')
1593023645163:has <- wants %in% rownames(installed.packages())
1593023645611:if (any(!has)) install.packages(wants[!has])
1593023646088:options(scipen = 999)
1593023646391:library(readr)
1593023651740:library(readr)
1593023652253:library(dplyr)
1593023652873:library(rstatix)
1593023681624:fss <- read_csv('data/fss.csv')
1593023682191:dat <- select(fss, starts_with("UserID"), starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1593023683018:dat$cenario = factor(dat$cenario)
1593023684152:(fss_summary <- get_summary_stats(dat))
1593023712200:(fss_summary <- get_summary_stats(dat))
1593023712593:(fss_frequency <- freq_table(dat, cenario))
1593023716688:write_csv(fss_summary, 'report/fss-summary.csv')
1593023717094:write_csv(fss_frequency, 'report/fss-frequency.csv')
1593023721438:shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1593023721461:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9)
1593023722582:shapiro[["dist.normal"]] <- if_else(shapiro$p > 0.05, 'sim', 'não')
1593023723554:print(shapiro)
1593023738654:t_test(dimensao1~cenario, data = dat)
1593023740260:t_test(dimensao1~cenario, data = dat, alternative = "less")
1593023771214:cohens_d(dimensao1~cenario, data = dat)
1593023800946:wilcox_test(media~cenario, data = dat, alternative = "greater")
1593023801423:wilcox_effsize(media~cenario, data = dat, alternative = "greater")
1593023802558:param_list <- list(list("dimensao1", "balanço desafio/habilidade")
1593023802581:, list("dimensao2", "fusão ação e atenção")
1593023802609:, list("dimensao3", "objetivos claros")
1593023802634:, list("dimensao4", "feedback")
1593023802663:, list("dimensao5", "concentração")
1593023802687:, list("dimensao6", "controle")
1593023802715:, list("dimensao7", "perda autoconsciência")
1593023802737:, list("dimensao8", "transformação do tempo")
1593023802761:, list("dimensao9", "experiência autotélica")
1593023802787:, list("media", "média do fluxo"))
1593023802844:non_param_test <- do.call(rbind, lapply(param_list, FUN = function(param) {
1593023802873:formula <- as.formula(paste0(param[[1]],'~cenario'))
1593023802897:cbind("fator latente" = param[[2]]
1593023802930:, merge(wilcox_test(formula, data = dat, alternative="greater")
1593023802965:, wilcox_effsize(formula, data = dat)))
1593023803061:}))
1593023804424:non_param_test
1593024064006:wants <- c('plotly','processx','dplyr','rstatix','readr')
1593024064322:has <- wants %in% rownames(installed.packages())
1593024064570:if (any(!has)) install.packages(wants[!has])
1593024064754:options(scipen = 999)
1593024064965:library(readr)
1593024065241:library(dplyr)
1593024065436:library(rstatix)
1593024065873:fss <- read_csv('data/fss.csv')
1593024066298:dat <- select(fss, starts_with("UserID"), starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1593024066695:dat$cenario = factor(dat$cenario)
1593024067054:(fss_summary <- get_summary_stats(dat))
1593024067320:(fss_frequency <- freq_table(dat, cenario))
1593024067526:write_csv(fss_summary, 'report/fss-summary.csv')
1593024067751:write_csv(fss_frequency, 'report/fss-frequency.csv')
1593024068242:shapiro <- shapiro_test(dat, media, dimensao1, dimensao2, dimensao3
1593024068278:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9)
1593024068976:shapiro[["dist.normal"]] <- if_else(shapiro$p > 0.05, 'sim', 'não')
1593024069510:print(shapiro)
1593024169773:(fss_summary <- get_summary_stats(dat))
1593024170221:(fss_frequency <- freq_table(dat, cenario))
1593024242432:t_test(dimensao1~cenario, data = dat)
1593024242656:t_test(dimensao1~cenario, data = dat, alternative = "less")
1593024242816:t_test(dimensao1~cenario, data = dat, alternative = "greater")
1593024243113:cohens_d(dimensao1~cenario, data = dat)
1593024243528:param_test <- do.call(
1593024243550:rbind
1593024243571:, lapply(
1593024243604:list(list("dimensao1", "balanço desafio/habilidade")
1593024243642:, list("dimensao5", "concentração"))
1593024243669:, FUN = function(param) {
1593024243695:formula <- as.formula(paste0(param[[1]],'~cenario'))
1593024243719:return(
1593024243750:cbind(
1593024243780:"fator latente" = param[[2]]
1593024243810:, merge(t_test(formula, data = dat, alternative="greater")
1593024243836:, cohens_d(formula, data = dat))
1593024243862:)
1593024243889:)
1593024243929:}
1593024243955:)
1593024243983:)
1593024245529:param_test
1593024248396:View(param_test)
1593024338096:## Efetuar plot
1593024338163:library(plotly)
1593024338383:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593024338409:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593024339121:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593024339143:print(p)
1593024340229:for (param in param_list) {
1593024340252:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593024340275:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1593024340295:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593024340316:print(p)
1593024340353:readline(prompt="Press [enter] to continue")
1593024340375:}
1593024419673:fss <- read_csv('data/fss.csv')
1593024420179:dat <- select(fss, starts_with("UserID"), starts_with("cenario"), starts_with("dimensao"), starts_with("media"))
1593024420458:dat$cenario = factor(dat$cenario)
1593024420735:(fss_summary <- get_summary_stats(dat))
1593024903861:for (param in param_list) {
1593024903880:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593024903898:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1593024903927:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593024903947:print(p)
1593024903968:readline(prompt=paste0("Current graph: ",param," >> Press [enter] to continue"))
1593024903989:}
1593041315785:?digest
1593086680579:wants <- c('plotly','dplyr','rstatix','readr')
1593086680909:has <- wants %in% rownames(installed.packages())
1593086681215:if (any(!has)) install.packages(wants[!has])
1593086683593:options(scipen = 999)
1593086683984:library(plotly)
1593086684248:library(readr)
1593086684474:library(dplyr)
1593086685235:library(rstatix)
1593086689292:fss <- read_csv('data/fss.csv')
1593086714274:fss <- read_csv("data/fss.csv")
1593086715822:participants <- read_csv("data/participants.csv")
1593086749780:fss <- read_csv("data/fss.csv")
1593086749998:participants <- read_csv("data/participants.csv")
1593086751633:dat <- merge(participants, fss)
1593086758156:View(dat)
1593086775432:fss <- read_csv("data/fss.csv")
1593086775642:participants <- read_csv("data/participants.csv")
1593086776420:dat <- merge(participants, fss, by="UserID")
1593086799989:?factor
1593086815118:dat$cenario = factor(dat$cenario)
1593087113206:View(dat)
1593087424175:(fss_summary <- get_summary_stats(dat))
1593087438409:?get_summary_stats
1593087475779:(fss_summary <- get_summary_stats(dat~cenario))
1593087647393:sample_n_by(dat)
1593087674720:sample_n_by(dat, cenario)
1593087693904:sample_n_by(dat, cenario, size = 2)
1593087718939:sample_n_by(dat, cenario, size = 25)
1593087785258:get_summary_stats(group_by(dat, cenario))
1593087869284:freq_table(group_by(dat, cenario))
1593087887812:freq_table(dat, cenario)
1593088823806:(frequency <- freq_table(dat, cenario))
1593088825378:(summary <- get_summary_stats(group_by(dat, cenario)))
1593088827161:write_csv(fss_frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1593088840126:(frequency <- freq_table(dat, cenario))
1593088840615:(summary <- get_summary_stats(group_by(dat, cenario)))
1593088843949:write_csv(frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1593088844371:write_csv(summary, 'report/h1-experiencia-fluxo/summary.csv')
1593088937219:(frequency <- freq_table(dat, cenario))
1593088937805:(summary <- get_summary_stats(group_by(dat, cenario)))
1593088938553:write_csv(frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1593088938807:write_csv(summary, 'report/h1-experiencia-fluxo/summary.csv')
1593089487007:?freq_table
1593089990046:?get_summary_stats
1593091543980:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593091544014:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593091544515:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593091545423:print(p)
1593097538899:for (param in list(list("dimensao1", "balanço desafio/habilidade")
1593097539080:, list("dimensao2", "fusão ação e atenção")
1593097539094:, list("dimensao3", "objetivos claros")
1593097539112:, list("dimensao4", "feedback")
1593097539131:, list("dimensao5", "concentração")
1593097539147:, list("dimensao6", "controle")
1593097539170:, list("dimensao7", "perda autoconsciência")
1593097539187:, list("dimensao8", "transformação do tempo")
1593097539204:, list("dimensao9", "experiência autotélica")
1593097539221:, list("media", "média do fluxo"))) {
1593097539249:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593097539271:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1593097539291:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593097539309:print(p)
1593097539334:readline(prompt=paste0("Current graph: ",param[[1]]," >> Press [enter] to continue"))
1593097539351:}
1593101397158:identify_outliers(dat)
1593101406756:identify_outliers(dat, media)
1593101418004:identify_outliers(dat, dimensao1)
1593101423286:identify_outliers(dat, dimensao2)
1593101426343:identify_outliers(dat, dimensao3)
1593101429947:identify_outliers(dat, dimensao4)
1593101434730:identify_outliers(dat, dimensao5)
1593101438358:identify_outliers(dat, dimensao6)
1593101455551:identify_outliers(dat, dimensao7)
1593101459141:identify_outliers(dat, dimensao8)
1593101477459:identify_outliers(group_by(dat, cenario), dimensao8)
1593101484231:identify_outliers(group_by(dat, cenario), media)
1593101493605:identify_outliers(group_by(dat, cenario), dimensao2)
1593101497653:identify_outliers(group_by(dat, cenario), dimensao1)
1593101517295:identify_outliers(group_by(dat, cenario), media, dimensao1, dimensao2, dimensao3
1593101517312:, dimensao4, dimensao5, dimensao6, dimensao7, dimensao8, dimensao9)
1593101524781:identify_outliers(group_by(dat, cenario), media)
1593101534436:identify_outliers(group_by(dat, cenario), dimensao1)
1593102097470:identify_outliers(group_by(dat, cenario), media)
1593102098181:shapiro_test(group_by(dat, cenario), media)
1593102159063:identify_outliers(group_by(dat, cenario), media)
1593102168133:outliers <- identify_outliers(group_by(dat, cenario), media)
1593102177477:outliers$UserID
1593102182920:outliers$UserID
1593102224723:dat[dat$UserID %in% outliers$UserID,]
1593102234737:dat[!(dat$UserID %in% outliers$UserID),]
1593102244306:outliers <- identify_outliers(group_by(dat, cenario), media)
1593102247780:shapiro_test(group_by(dat[!(dat$UserID %in% outliers$UserID),], cenario), media)
1593102393413:outliers <- identify_outliers(group_by(dat, cenario), media)
1593102394549:shapiro_test(group_by(dat[!(dat$UserID %in% outliers$UserID),], cenario), media)
1593102416373:shapiro_test(group_by(dat, cenario), media)
1593102689682:levene_test(group_by(dat[!(dat$UserID %in% outliers$UserID),], cenario), media)
1593102692490:shapiro_test(group_by(dat[!(dat$UserID %in% outliers$UserID),], cenario), media)
1593102693861:outliers <- identify_outliers(group_by(dat, cenario), media)
1593102694996:shapiro_test(group_by(dat[!(dat$UserID %in% outliers$UserID),], cenario), media)
1593102695321:levene_test(group_by(dat[!(dat$UserID %in% outliers$UserID),], cenario), media)
1593102701857:levene_test(group_by(dat[!(dat$UserID %in% outliers$UserID),], cenario))
1593102747482:levene_test(media~cenario, dat[!(dat$UserID %in% outliers$UserID),])
1593102776862:levene_test(dat[!(dat$UserID %in% outliers$UserID),], media~cenario)
1593102920853:view(dat[!(dat$UserID %in% outliers$UserID),])
1593102930039:view(dat[!(dat$UserID %in% outliers$UserID),])
1593102934143:View(dat[!(dat$UserID %in% outliers$UserID),])
1593104182202:(outliers_media <- identify_outliers(group_by(dat, cenario), media))
1593104224406:(outliers_media <- identify_outliers(group_by(dat, cenario), media))
1593104434517:?identify_outliers
1593104469627:(outliers_media <- identify_outliers(group_by(dat, cenario), media, dimensao1, dimensao2, dimensao3))
1593104507758:(outliers_media <- identify_outliers(group_by(dat, cenario), "media", "dimensao1", "dimensao2", "dimensao3"))
1593104544773:(outliers_media <- identify_outliers(group_by(dat, cenario), media))
1593106287588:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593106353146:(media_dat <- dat[!dat$UserID %in% media_outliers$UserID])
1593106360692:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593106369627:(media_dat <- dat[!dat$UserID %in% media_outliers$UserID])
1593106380032:(media_dat <- dat[!dat$UserID %in% media_outliers$UserID,])
1593106423444:shapiro_test(group_by(media_dat, cenario), media)
1593106455734:group_by(media_dat, cenario)
1593106498474:shapiro_test(group_by(media_dat, cenario), media)
1593106525296:identify_outliers(group_by(media_dat, cenario), media)
1593106574763:?qqPlot()
1593106623406:car::qqPlot(media ~ cenario, data = media_dat)
1593106696092:media_dat[c(37,40)]
1593106698421:media_dat[c(37,40),]
1593106772424:identify_outliers(group_by(media_dat[-c(37,40),], cenario), media)
1593106784991:shapiro_test(group_by(media_dat[-c(37,40),], cenario), media)
1593106840788:shapiro_test(group_by(media_dat[-c(40),], cenario), media)
1593106861026:shapiro_test(group_by(media_dat[-c(37),], cenario), media)
1593106903520:car::qqPlot(media ~ cenario, data = media_dat[-c(37,40),])
1593106931914:car::qqPlot(media ~ cenario, data = media_dat[-c(37,40,15),])
1593106951201:car::qqPlot(media ~ cenario, data = media_dat[-c(37,40,15),])
1593106957197:car::qqPlot(media ~ cenario, data = media_dat[-c(37),])
1593106966005:car::qqPlot(media ~ cenario, data = media_dat
1593106968759:)
1593106989951:car::qqPlot(media ~ cenario, data = media_dat[-c(40),])
1593107000077:car::qqPlot(media ~ cenario, data = media_dat[-c(40),])
1593107010041:car::qqPlot(media ~ cenario, data = media_dat[-c(0),])
1593107014750:car::qqPlot(media ~ cenario, data = media_dat
1593107016504:)
1593107033222:car::qqPlot(media ~ cenario, data = media_dat[-c(40),])
1593107040434:car::qqPlot(media ~ cenario, data = media_dat[-c(40,37),])
1593107054394:qqPlot()
1593107058293:?qqPlot
1593107196181:car::qqPlot(media ~ cenario, data = media_dat[-c(40),])
1593107198638:car::qqPlot(media ~ cenario, data = media_dat[-c(40),])
1593107209106:car::qqPlot(media ~ cenario, data = media_dat[-c(40,41),])
1593107212515:car::qqPlot(media ~ cenario, data = media_dat[-c(40,42),])
1593107219077:car::qqPlot(media ~ cenario, data = media_dat[-c(40,42,43),])
1593107223524:car::qqPlot(media ~ cenario, data = media_dat[-c(40),])
1593107229366:car::qqPlot(media ~ cenario, data = media_dat[-c(37),])
1593107237555:car::qqPlot(media ~ cenario, data = media_dat[-c(37),])
1593107245156:car::qqPlot(media ~ cenario, data = media_dat[-c(37,15),])
1593107284950:car::qqPlot(media ~ cenario, data = media_dat)
1593107293952:media_dat
1593107340052:shapiro_test(group_by(media_dat, cenario), media)
1593107392657:car::qqPlot(media ~ cenario, data = media_dat[-c(37,40),])
1593107404452:car::qqPlot(media ~ cenario, data = media_dat[-c(37,40,15),])
1593107413595:car::qqPlot(media ~ cenario, data = media_dat[-c(37,40,20),])
1593107419441:car::qqPlot(media ~ cenario, data = media_dat[-c(37,40,15),])
1593107817747:car::qqPlot(media ~ cenario, data = media_dat, id="UserID")
1593107835627:car::qqPlot(media ~ cenario, data = media_dat)
1593107899130:rownames(media_dat) <- media_dat$UserID
1593107902710:car::qqPlot(media ~ cenario, data = media_dat)
1593107940967:car::qqPlot(media ~ cenario, data = media_dat[-c("a9d87bce"),])
1593107980371:car::qqPlot(media ~ cenario, data = media_dat[-c("a9d87bce"),])
1593108000098:car::qqPlot(media ~ cenario, data = media_dat[!media_dat %in %c("a9d87bce"),])
1593108008155:car::qqPlot(media ~ cenario, data = media_dat[!media_dat %in% c("a9d87bce"),])
1593108028147:!media_dat %in% c("a9d87bce")
1593108046508:car::qqPlot(media ~ cenario, data = media_dat[!media_dat$UserID %in% c("a9d87bce"),])
1593108078868:car::qqPlot(media ~ cenario, data = media_dat[!media_dat$UserID %in% c("a9d87bce","b7c1ac58"),])
1593108101373:car::qqPlot(media ~ cenario, data = media_dat[!media_dat$UserID %in% c("b7c1ac58"),])
1593108127514:car::qqPlot(media ~ cenario, data = media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),])
1593108136706:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593108137079:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593108137900:shapiro_test(group_by(media_dat, cenario), media)
1593108141225:identify_outliers(group_by(media_dat, cenario), media)
1593108268945:car::qqPlot(media~cenario)
1593108276083:car::qqPlot(media~cenario, dat)
1593108304220:car::qqPlot(media~cenario, media_dat[-c(37),])
1593108327294:View(media_dat[-c(37),])
1593108387990:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593108388323:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593108397098:shapiro_test(group_by(media_dat, cenario), media)
1593108417254:car::qqPlot(media~cenario, media_dat)
1593108460549:shapiro_test(group_by(media_dat[-c(37)], cenario), media)
1593108476970:shapiro_test(group_by(media_dat[-c(37,40)], cenario), media)
1593108492326:shapiro_test(group_by(media_dat[-c(37)], cenario), media)
1593108542282:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593108564179:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593108564467:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593108565033:rownames(media_dat) <- dat$UserID
1593108573114:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593108573422:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593108587863:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593108588651:rownames(media_dat) <- media_dat$UserID
1593108592608:shapiro_test(group_by(media_dat, cenario), media)
1593108599748:car::qqPlot(media~cenario, media_dat)
1593108670932:shapiro_test(group_by(media_dat[-c("b7c1ac58","a9d87bce")], cenario), media)
1593108675890:shapiro_test(group_by(media_dat[-c("b7c1ac58","a9d87bce")], cenario), media)
1593108680503:shapiro_test(group_by(media_dat[-c("b7c1ac58","a9d87bce"),], cenario), media)
1593108690783:media_dat[-c("b7c1ac58","a9d87bce"),]
1593108726283:shapiro_test(group_by(media_dat[media_dat$UserID %in% c("b7c1ac58","a9d87bce")], cenario), media)
1593108741248:shapiro_test(group_by(media_dat[media_dat$UserID %in% c("b7c1ac58","a9d87bce"),], cenario), media)
1593108751230:shapiro_test(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),], cenario), media)
1593108807583:identify_outliers(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),], cenario), media)
1593108823332:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),])
1593108835707:car::qqPlot(media~cenario, media_dat)
1593108837952:shapiro_test(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),], cenario), media)
1593108842012:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),])
1593108911855:shapiro_test(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98"),], cenario), media)
1593108915118:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98"),])
1593108939219:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","cba08983"),])
1593108955185:shapiro_test(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","cba08983"),], cenario), media)
1593108976667:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d","cba08983"),])
1593108996352:shapiro_test(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d","cba08983"),], cenario), media)
1593108999406:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d","cba08983"),])
1593109024986:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d"),])
1593109034275:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d","cba08983","0ec"),])
1593109061698:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d","cba08983","0ec7edaf68f5"),])
1593109135260:car::qqPlot(media~cenario, media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d","cba08983","0ec7e6"),])
1593110723677:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593110724671:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593110731328:shapiro_test(group_by(media_dat, cenario), media)
1593110780278:car::qqPlot(media~cenario, media_dat)
1593110841091:shapiro_test(group_by(media_dat, cenario), media)
1593110851718:car::qqPlot(media~cenario, media_dat)
1593110862650:media_dat <- media_dat[-c(37,40),]
1593110863990:shapiro_test(group_by(media_dat, cenario), media)
1593110886037:car::qqPlot(media~cenario, media_dat)
1593110908490:media_dat <- media_dat[-c(37,15),]
1593110910051:shapiro_test(group_by(media_dat, cenario), media)
1593110922723:car::qqPlot(media~cenario, media_dat)
1593110929688:car::qqPlot(media~cenario, media_dat)
1593110939457:media_dat <- media_dat[-c(37,15),]
1593110941433:shapiro_test(group_by(media_dat, cenario), media)
1593110948589:car::qqPlot(media~cenario, media_dat)
1593110952507:car::qqPlot(media~cenario, media_dat)
1593110957706:media_dat <- media_dat[-c(37,15),]
1593110958455:shapiro_test(group_by(media_dat, cenario), media)
1593111005235:car::qqPlot(media~cenario, media_dat)
1593111007924:media_dat <- media_dat[-c(37,15),]
1593111010882:shapiro_test(group_by(media_dat, cenario), media)
1593111019556:car::qqPlot(media~cenario, media_dat)
1593111026630:media_dat <- media_dat[-c(37,15),]
1593111027739:shapiro_test(group_by(media_dat, cenario), media)
1593112984585:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593112984885:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593112989076:shapiro_test(group_by(media_dat, cenario), media)
1593112990938:car::qqPlot(media~cenario, media_dat)
1593113041129:showLabels(cenario, media)
1593113101218:with(media_dat, showLabels(cenario, media,
1593113101237:labels = rownames(media_dat), method=list("x", "y"), n=3))
1593113118990:with(media_dat, showLabels(cenario, media,
1593113119056:labels = media_dat$UserID, method=list("x", "y"), n=3))
1593113132532:with(media_dat, showLabels(cenario, media,
1593113132555:labels = media_dat$UserID, method=list("x", "y"), n=3))
1593113152297:with(media_dat, showLabels(y= media,
1593113152314:labels = media_dat$UserID, method=list("x", "y"), n=3))
1593113287198:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593113287490:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593113292956:shapiro_test(group_by(media_dat, cenario), media)
1593113294786:install.packages("manhattanly")
1593113307111:library(manhattanly)
1593113322465:?qqly
1593113349343:qqly(media_dat)
1593113414900:qqly(media_dat, snp = "media", gene = "cenario")
1593113432244:qqly(media_dat, snp = "media", gene = "UserID")
1593113487779:qqrObject <- qqr(media_dat)
1593113561238:car::av.plots(media~cenario, data = dat)
1593113592575:?qqPlot()
1593113886191:normPlot <- function(rdat, dv, wid="UserID") {
1593113886210:library(ggplot2)
1593113886223:library(ggrepel)
1593113886250:df <- data.frame(name = factor(rdat[[wid]]), x = rdat[[dv]])
1593113886276:y <- quantile(rdat[[dv]], c(0.25,0.75))
1593113886295:x <- qnorm(c(0.25,0.75))
1593113886312:name <- rdat[[wid]]
1593113886333:slope <- diff(y)/diff(x)
1593113886349:int <- y[1] - slope*x[1]
1593113886372:g<-ggplot(df, aes(sample = x)) + stat_qq()
1593113886389:df.new<-ggplot_build(g)$data[[1]]
1593113886406:df.new$name<-df$name[order(df$x)]
1593113886430:print(ggplot(df.new,aes(theoretical,sample,label=name))+geom_point(color = 'black')+#geom_text()+
1593113886447:geom_abline(intercept=int, slope=slope,linetype = "dotted") + theme_bw() +
1593113886464:geom_text_repel(aes(label = name)
1593113886482:, segment.color = '#888888'
1593113886503:, segment.size = 0.25
1593113886520:, arrow = arrow(length = unit(0.005, 'npc'))
1593113886539:, point.padding = unit(0.4, 'lines') # extra padding
1593113886559:, box.padding = unit(0.15, 'lines')
1593113886579:, force = 1 # Strength of the repulsion force.
1593113886599:, size = 3))
1593113886617:}
1593113918089:normPlot(media_dat, "media", wid="UserID")
1593114016939:qnorm(c(0.25,0.75))
1593114033488:?quantile
1593114074173:group_by(media_dat, cenario)
1593114084954:rdat <- group_by(media_dat, cenario)
1593114089962:normPlot <- function(rdat, dv, wid="UserID") {
1593114089979:library(ggplot2)
1593114090008:library(ggrepel)
1593114090034:df <- data.frame(name = factor(rdat[[wid]]), x = rdat[[dv]])
1593114090058:y <- quantile(rdat[[dv]], c(0.25,0.75))
1593114090075:x <- qnorm(c(0.25,0.75))
1593114090092:name <- rdat[[wid]]
1593114090117:slope <- diff(y)/diff(x)
1593114090139:int <- y[1] - slope*x[1]
1593114090170:g<-ggplot(df, aes(sample = x)) + stat_qq()
1593114090190:df.new<-ggplot_build(g)$data[[1]]
1593114090207:df.new$name<-df$name[order(df$x)]
1593114090233:print(ggplot(df.new,aes(theoretical,sample,label=name))+geom_point(color = 'black')+#geom_text()+
1593114090253:geom_abline(intercept=int, slope=slope,linetype = "dotted") + theme_bw() +
1593114090272:geom_text_repel(aes(label = name)
1593114090290:, segment.color = '#888888'
1593114090309:, segment.size = 0.25
1593114090325:, arrow = arrow(length = unit(0.005, 'npc'))
1593114090343:, point.padding = unit(0.4, 'lines') # extra padding
1593114090358:, box.padding = unit(0.15, 'lines')
1593114090375:, force = 1 # Strength of the repulsion force.
1593114090392:, size = 3))
1593114090409:}
1593114100518:normPlot(rdat, "media", wid="UserID")
1593114128652:rdat$cenario
1593114239129:ggqqplot(media_dat, x = "media", facet.by = "cenario")
1593114245645:library(ggplot2)
1593114280120:library(ggpubr)
1593114292081:ggqqplot(media_dat, x = "media", facet.by = "cenario")
1593114316903:gp <- ggqqplot(media_dat, x = "media", facet.by = "cenario")
1593114319019:gp
1593114382175:ggplot2::ggplot()
1593114390904:ggplot2::ggplot(gp)
1593114395738:gp <- ggqqplot(media_dat, x = "media", facet.by = "cenario")
1593114401351:ggqqplot(media_dat, x = "media", facet.by = "cenario")
1593114451618:?geom_text_repel
1593114468301:ggqqplot(media_dat, x = "media", facet.by = "cenario")
1593114470905:geom_text_repel(data=media_dat, aes(label = name)
1593114470924:, segment.color = '#888888'
1593114470941:, segment.size = 0.25
1593114470960:, arrow = arrow(length = unit(0.005, 'npc'))
1593114470979:, point.padding = unit(0.4, 'lines') # extra padding
1593114470994:, box.padding = unit(0.15, 'lines')
1593114471011:, force = 1 # Strength of the repulsion force.
1593114471026:, size = 3)
1593114511957:gp <- ggqqplot(media_dat, x = "media", facet.by = "cenario") +
1593114511976:geom_text_repel(data=media_dat, aes(label = name)
1593114511993:, segment.color = '#888888'
1593114512009:, segment.size = 0.25
1593114512027:, arrow = arrow(length = unit(0.005, 'npc'))
1593114512044:, point.padding = unit(0.4, 'lines') # extra padding
1593114512063:, box.padding = unit(0.15, 'lines')
1593114512079:, force = 1 # Strength of the repulsion force.
1593114512099:, size = 3)
1593114515645:gp
1593114525039:gp <- ggqqplot(media_dat, x = "media", facet.by = "cenario") +
1593114525058:geom_text_repel(data=media_dat, aes(label = name)
1593114525076:, segment.color = '#888888'
1593114525091:, segment.size = 0.25
1593114525106:, arrow = arrow(length = unit(0.005, 'npc'))
1593114525123:, point.padding = unit(0.4, 'lines') # extra padding
1593114525140:, box.padding = unit(0.15, 'lines')
1593114525157:, force = 1 # Strength of the repulsion force.
1593114525174:, size = 3)
1593114526244:gp
1593114532085:ggqqplot(media_dat, x = "media", facet.by = "cenario") +
1593114532104:geom_text_repel(data=media_dat, aes(label = name)
1593114532153:, segment.color = '#888888'
1593114532174:, segment.size = 0.25
1593114532190:, arrow = arrow(length = unit(0.005, 'npc'))
1593114532207:, point.padding = unit(0.4, 'lines') # extra padding
1593114532227:, box.padding = unit(0.15, 'lines')
1593114532249:, force = 1 # Strength of the repulsion force.
1593114532269:, size = 3)
1593114597734:normPlot <- function(rdat, dv, wid="UserID") {
1593114597753:library(ggplot2)
1593114597772:library(ggrepel)
1593114597798:df <- data.frame(name = factor(rdat[[wid]]), x = rdat[[dv]])
1593114597824:y <- quantile(rdat[[dv]], c(0.25,0.75))
1593114597842:x <- qnorm(c(0.25,0.75))
1593114597860:name <- rdat[[wid]]
1593114597885:slope <- diff(y)/diff(x)
1593114597904:int <- y[1] - slope*x[1]
1593114597930:g<-ggplot(df, aes(sample = x)) + stat_qq()
1593114597950:df.new<-ggplot_build(g)$data[[1]]
1593114597969:df.new$name<-df$name[order(df$x)]
1593114597995:print(ggplot(df.new,aes(theoretical,sample,label=name))+geom_point(color = 'black')+#geom_text()+
1593114598012:geom_abline(intercept=int, slope=slope,linetype = "dotted") + theme_bw() +
1593114598030:geom_text_repel(aes(label = name)
1593114598048:, segment.color = '#888888'
1593114598065:, segment.size = 0.25
1593114598093:, arrow = arrow(length = unit(0.005, 'npc'))
1593114598112:, point.padding = unit(0.4, 'lines') # extra padding
1593114598131:, box.padding = unit(0.15, 'lines')
1593114598149:, force = 1 # Strength of the repulsion force.
1593114598173:, size = 3))
1593114598194:}
1593114614214:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593114614491:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593114615342:shapiro_test(group_by(media_dat, cenario), media)
1593114699225:media_dat[which(cenario == 'gamificado'),]
1593114717275:media_dat[which(media_dat$cenario == 'gamificado'),]
1593114747815:subset(media_dat, cenario)
1593114752727:?subset
1593114778054:subset(media_dat, cenario == "gamificado")
1593114817608:normPlot(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593114964998:shapiro_test(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),], cenario), media)
1593114997191:shapiro_test(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98"),], cenario), media)
1593115025651:shapiro_test(group_by(media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d"),], cenario), media)
1593115140403:userids <- c("b7c1ac58","a9d87bce","0cacbb98","4779490d")
1593115141392:shapiro_test(group_by(media_dat[!media_dat$UserID %in% userids,], cenario), media)
1593115209623:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593115209847:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593115211172:shapiro_test(group_by(media_dat, cenario), media)
1593115214091:normPlot(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593115217688:media_dat <- media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce","0cacbb98","4779490d"),]
1593115224238:shapiro_test(group_by(media_dat, cenario), media)
1593115233754:normPlot(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593115281020:media_dat <- media_dat[!media_dat$UserID %in% c("4d27a0e8"),]
1593115282697:shapiro_test(group_by(media_dat, cenario), media)
1593115290844:normPlot(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593115330633:media_dat <- media_dat[!media_dat$UserID %in% c("3362c235","cba089983"),]
1593115331666:shapiro_test(group_by(media_dat, cenario), media)
1593115339224:normPlot(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593115423186:media_dat <- media_dat[!media_dat$UserID %in% c("ddc3f0f6","cba08983"),]
1593115423707:shapiro_test(group_by(media_dat, cenario), media)
1593115431693:normPlot(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593115456292:media_dat <- media_dat[!media_dat$UserID %in% c("0ec7e6c2","91a35aee"),]
1593115456931:shapiro_test(group_by(media_dat, cenario), media)
1593115463514:normPlot(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593115486517:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593115486955:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593115489723:shapiro_test(group_by(media_dat, cenario), media)
1593115811344:?quantile
1593115871268:?diff
1593116068732:qnorm(c(0.25,0.75))
1593116098856:?stat_qq
1593116254554:?qqly
1593116284574:?car::qqp
1593116303600:?car::qqPlot
1593116379288:?qqnorm
1593116411658:qqnorm(media_dat$media)
1593116805887:qqnorm(alto)
1593116811809:qqnorm(media_dat)
1593116819379:qqnorm(media_dat$media)
1593116825121:a <- qqnorm(media_dat$media)
1593116826858:a
1593116868558:a <- qqnorm(media_dat$media[c(1,2),])
1593116872666:a <- qqnorm(media_dat$media[c(1,2)])
1593116877564:a
1593116915375:?qqnorm
1593116977941:qqnorm(media_dat$media, plot.it = F, datax = T)
1593116986554:a <- qqnorm(media_dat$media, plot.it = F, datax = T)
1593116988145:a
1593117209525:dv <- media_dat$media
1593117224479:dv <- media_dat$media
1593117225140:names(dv) <- media_dat$UserID
1593117227333:dv
1593117236761:a <- qqnorm(media_dat$media, plot.it = F, datax = T)
1593117240020:a$x
1593117242490:a$y
1593117253200:a <- qqnorm(media_dat$media, plot.it = F)
1593117255276:a
1593117313778:dv <- media_dat[['media']]
1593117328363:dv <- media_dat[['media']]
1593117332322:names(dv) <- media_dat[['UserID']]
1593117344703:dv <- sort(dv)
1593117346430:dv
1593117370939:i      <- 1:length(dv)
1593117371911:fi     <- (i - 0.5) / length(dv)
1593117384998:x.norm <- qnorm(fi)
1593117433846:x.norm
1593117438721:dv
1593117473269:dv <- media_dat[['media']]
1593117473944:names(dv) <- media_dat[['UserID']]
1593117474982:dv <- sort(dv)
1593117477622:fi     <- ((1:length(dv)) - 0.5)/length(dv)
1593117483374:fi
1593117500703:dv <- sort(dv)
1593117501911:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593117505340:x.norm
1593117508887:dv
1593117511814:x.norm
1593117557318:plot( alto ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593117569544:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593117728431:quantile(dv, c(0.25, 0.75), type = 5)
1593117766204:qnorm(c(0.25, 0.75))
1593117781905:dv <- media_dat[['media']]
1593117782132:names(dv) <- media_dat[['UserID']]
1593117783512:dv <- sort(dv)
1593117783725:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593117784516:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593117785265:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593117787287:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593117820560:abline(a = int, b = slope )
1593117866952:dv
1593117870508:x.nom
1593117873036:x.norm
1593117916440:names(dv)
1593117955199:df <- data.frame(wid=names(dv), x = x.norm, y=dv)
1593117965730:View(df)
1593118025209:int+slope*x.norm
1593118037144:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593118042509:View(df)
1593118139771:3^2
1593118173786:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593118174998:df$diff2 <- (df$y - df$expected.y)^2
1593118183424:View(df)
1593118616185:sort(df, decreasing = T)
1593118628606:sort(df, "diff2", decreasing = T)
1593118635286:?sort
1593118646428:sort(df$diff2, decreasing = T)
1593118655965:which(sort(df$diff2, decreasing = T))
1593118719081:order(df$diff2, decreasing = T)
1593118743554:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593118743822:df$diff2 <- (df$y - df$expected.y)^2
1593118744876:df <- df[order(df$diff2, decreasing = T),]
1593118750053:View(df)
1593118807530:shapiro_test(dv)
1593120974662:media_dat[['UserID']]
1593120990733:to_remove <- c()
1593120993883:which(media_dat[['UserID']] %in% to_remove)
1593121000920:which(!media_dat[['UserID']] %in% to_remove)
1593121063004:media_dat[idx,]
1593121071395:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593121074709:media_dat[idx,]
1593121100790:to_remove <- c()
1593121143901:shapiro_test(dv)
1593121178104:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593121178378:dv <- media_dat[idx,][['media']]
1593121181327:names(dv) <- media_dat[idx,][['UserID']]
1593121193631:shapiro_test(dv)
1593121327455:to_remove <- c()
1593121333711:repeat {
1593121333729:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593121333750:dv <- media_dat[idx,][['media']]
1593121333765:names(dv) <- media_dat[idx,][['UserID']]
1593121333786:if (shapiro_test(dv)$p.value < 0.5) {
1593121333804:dv <- sort(dv)
1593121333822:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593121333842:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593121333864:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593121333880:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593121333904:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593121333924:df$diff2 <- (df$y - df$expected.y)^2
1593121333940:df <- df[order(df$diff2, decreasing = T),]
1593121333964:to_remove <- c(df$wid, to_remove)
1593121333981:} else {
1593121333996:break()
1593121334024:}
1593121334040:}
1593121392269:df$wid[1]
1593121411674:as.character(df$wid[1])
1593121415528:to_remove <- c()
1593121419581:repeat {
1593121419603:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593121419624:dv <- media_dat[idx,][['media']]
1593121419642:names(dv) <- media_dat[idx,][['UserID']]
1593121419666:if (shapiro_test(dv)$p.value < 0.5) {
1593121419684:dv <- sort(dv)
1593121419698:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593121419720:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593121419742:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593121419758:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593121419783:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593121419802:df$diff2 <- (df$y - df$expected.y)^2
1593121419820:df <- df[order(df$diff2, decreasing = T),]
1593121419840:to_remove <- c(as.character(df$wid[1]), to_remove)
1593121419858:print(to_remove)
1593121419876:} else {
1593121419892:break()
1593121419910:}
1593121419924:}
1593121446640:to_remove
1593121525071:abs(df$y - df$expected.y)
1593121531826:to_remove <- c()
1593121532948:repeat {
1593121532966:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593121532989:dv <- media_dat[idx,][['media']]
1593121533008:names(dv) <- media_dat[idx,][['UserID']]
1593121533031:if (shapiro_test(dv)$p.value < 0.5) {
1593121533053:dv <- sort(dv)
1593121533070:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593121533093:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593121533115:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593121533134:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593121533153:abline(a = int, b = slope)
1593121533176:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593121533194:df$diff2 <- abs(df$y - df$expected.y)#^2
1593121533212:df <- df[order(df$diff2, decreasing = T),]
1593121533244:to_remove <- c(as.character(df$wid[1]), to_remove)
1593121533265:print(to_remove)
1593121533281:} else {
1593121533295:break()
1593121533313:}
1593121533330:}
1593121605165:as.character(df$wid[1:2])
1593121611813:to_remove <- c()
1593121612129:repeat {
1593121612147:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593121612175:dv <- media_dat[idx,][['media']]
1593121612196:names(dv) <- media_dat[idx,][['UserID']]
1593121612221:if (shapiro_test(dv)$p.value < 0.5) {
1593121612242:dv <- sort(dv)
1593121612262:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593121612287:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593121612316:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593121612340:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593121612361:abline(a = int, b = slope)
1593121612386:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593121612405:df$diff2 <- abs(df$y - df$expected.y)#^2
1593121612425:df <- df[order(df$diff2, decreasing = T),]
1593121612448:to_remove <- c(as.character(df$wid[1:2]), to_remove)
1593121612465:print(to_remove)
1593121612483:} else {
1593121612499:break()
1593121612516:}
1593121612535:}
1593121658354:?plot
1593121770506:names(dv)
1593121788052:to_remove <- c()
1593121788720:repeat {
1593121788739:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593121788759:dv <- media_dat[idx,][['media']]
1593121788777:names(dv) <- media_dat[idx,][['UserID']]
1593121788799:if (shapiro_test(dv)$p.value < 0.5) {
1593121788815:dv <- sort(dv)
1593121788832:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593121788856:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593121788874:text(dv ~ x.norm, labels = names(dv))
1593121788896:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593121788913:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593121788945:abline(a = int, b = slope)
1593121788966:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593121788985:df$diff2 <- abs(df$y - df$expected.y)#^2
1593121789004:df <- df[order(df$diff2, decreasing = T),]
1593121789033:to_remove <- c(as.character(df$wid[1:2]), to_remove)
1593121789052:print(to_remove)
1593121789067:} else {
1593121789084:break()
1593121789101:}
1593121789119:}
1593121895757:to_remove <- c()
1593121898580:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593121900170:dv <- media_dat[idx,][['media']]
1593121902542:names(dv) <- media_dat[idx,][['UserID']]
1593121907629:dv <- sort(dv)
1593121908426:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593121921774:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593121944669:names(dv)
1593121950676:text(dv ~ x.norm, labels = names(dv))
1593121955583:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593121955948:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593121957681:abline(a = int, b = slope)
1593122021278:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593122043980:df$diff2 <- abs(df$y - df$expected.y)#^2
1593122092836:df <- df[order(df$diff2, decreasing = T),]
1593122127616:df$wid[1:2]
1593122143118:as.character(df$wid[1:2])
1593122147568:to_remove <- c(as.character(df$wid[1:2]), to_remove)
1593122182026:print(to_remove)
1593122191819:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593122192316:dv <- media_dat[idx,][['media']]
1593122192919:names(dv) <- media_dat[idx,][['UserID']]
1593122198300:shapiro_test(dv)$p.value
1593122202334:dv <- sort(dv)
1593122202590:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593122202825:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593122203200:text(dv ~ x.norm, labels = names(dv))
1593122203632:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593122203872:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593122207252:abline(a = int, b = slope)
1593122208046:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593122208571:df$diff2 <- abs(df$y - df$expected.y)#^2
1593122209605:df <- df[order(df$diff2, decreasing = T),]
1593122235253:to_remove <- c(as.character(df$wid[1:2]), to_remove)
1593122242006:print(to_remove)
1593122260992:to_remove <- c()
1593122261384:repeat {
1593122261399:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593122261433:dv <- media_dat[idx,][['media']]
1593122261450:names(dv) <- media_dat[idx,][['UserID']]
1593122261469:if (shapiro_test(dv)$p.value < 0.5) {
1593122261485:dv <- sort(dv)
1593122261502:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593122261523:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593122261538:text(dv ~ x.norm, labels = names(dv))
1593122261563:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593122261582:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593122261599:abline(a = int, b = slope)
1593122261622:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593122261639:df$diff2 <- abs(df$y - df$expected.y)#^2
1593122261656:df <- df[order(df$diff2, decreasing = T),]
1593122261678:to_remove <- c(as.character(df$wid[1:4]), to_remove)
1593122261696:print(to_remove)
1593122261712:} else {
1593122261727:break()
1593122261742:}
1593122261757:}
1593122405629:to_remove <- c()
1593122406258:repeat {
1593122406275:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593122406301:dv <- media_dat[idx,][['media']]
1593122406316:names(dv) <- media_dat[idx,][['UserID']]
1593122406339:if (shapiro_test(dv)$p.value < 0.05) {
1593122406357:dv <- sort(dv)
1593122406380:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593122406403:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593122406418:text(dv ~ x.norm, labels = names(dv))
1593122406442:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593122406460:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593122406478:abline(a = int, b = slope)
1593122406500:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593122406518:df$diff2 <- abs(df$y - df$expected.y)#^2
1593122406535:df <- df[order(df$diff2, decreasing = T),]
1593122406560:to_remove <- c(as.character(df$wid[1:1]), to_remove)
1593122406582:print(to_remove)
1593122406600:} else {
1593122406617:break()
1593122406631:}
1593122406649:}
1593122444888:to_remove <- c()
1593122472356:to_remove <- c()
1593122472762:repeat {
1593122472776:idx <- which(!media_dat[['UserID']] %in% to_remove)
1593122472798:dv <- media_dat[idx,][['media']]
1593122472816:names(dv) <- media_dat[idx,][['UserID']]
1593122472840:print(shapiro_test(dv))
1593122472855:if (shapiro_test(dv)$p.value < 0.05) {
1593122472873:dv <- sort(dv)
1593122472891:x.norm <- qnorm(((1:length(dv)) - 0.5)/length(dv))
1593122472916:plot(dv ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593122472933:text(dv ~ x.norm, labels = names(dv))
1593122472957:slope <- diff(quantile(dv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593122472973:int   <- quantile(dv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593122472987:abline(a = int, b = slope)
1593122473008:df <- data.frame(wid=names(dv), x=x.norm, y=dv, expected.y=int+(slope*x.norm))
1593122473025:df$diff2 <- abs(df$y - df$expected.y)#^2
1593122473041:df <- df[order(df$diff2, decreasing = T),]
1593122473065:to_remove <- c(as.character(df$wid[1:2]), to_remove)
1593122473083:print(to_remove)
1593122473095:} else {
1593122473110:break()
1593122473125:}
1593122473140:}
1593123080681:step = 2
1593123375867:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers')
1593123379830:print(p)
1593123431464:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593123432086:print(p)
1593123585967:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593123586525:p <- add_text(p, textposition="top right")
1593123587340:print(p)
1593123607613:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593123608124:p <- add_text(p, textposition="top")
1593123608589:print(p)
1593123673029:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593123673487:p <- add_text(p, textfont = list(
1593123673503:family = "sans serif",
1593123673521:size = 8,
1593123673539:color = toRGB("grey50")),  textposition="top")
1593123674766:print(p)
1593123725118:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593123725321:p <- add_text(p, textfont = list(family="sans serif", size=6),  textposition="top")
1593123725939:print(p)
1593123738704:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593123739137:p <- add_text(p, textfont = list(family="sans serif", size=8),  textposition="top")
1593123739565:print(p)
1593124701860:df$x[1]
1593124716179:df$x[2]
1593124732660:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593124732897:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593124733413:p <- layout(p, shapes=list(list(type = "line",
1593124733430:line = list(color = ""),
1593124733445:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124733485:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2]),
1593124733500:)))
1593124750657:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593124751124:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593124753152:p <- layout(p, shapes=list(list(type = "line",
1593124753171:line = list(color = ""),
1593124753183:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124753199:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2]),
1593124753213:)))
1593124762158:p <- layout(p, shapes=list(list(type = "line",
1593124762176:line = list(color = "black"),
1593124762190:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124762205:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2]),
1593124762223:)))
1593124777026:p <- layout(p, shapes=list(list(type = "line",
1593124777045:line = list(color = "black"),
1593124777062:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124777079:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593124777094:)))
1593124780127:print(p)
1593124794300:p <- layout(p, shapes=list(list(type = "line",
1593124794324:line = list(color = "grey"),
1593124794342:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124794360:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593124794383:)))
1593124795111:print(p)
1593124816011:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593124816284:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593124816629:p <- layout(p, shapes=list(list(type = "line",
1593124816647:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124816663:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593124816681:)))
1593124817397:print(p)
1593124848080:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593124848278:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593124848507:p <- layout(p, shapes=list(list(type = "line",
1593124848523:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124848541:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593124848559:)), showlegend =F)
1593124849327:print(p)
1593124935158:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593124935388:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593124935655:p <- layout(p, shapes=list(list(type = "line",
1593124935674:line = list(width = 1),
1593124935693:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124935711:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593124935726:)), showlegend =F)
1593124936312:print(p)
1593124944335:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593124944481:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593124944700:p <- layout(p, shapes=list(list(type = "line",
1593124944719:line = list(width = 0.5),
1593124944739:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593124944770:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593124944794:)), showlegend =F)
1593124945440:print(p)
1593125240800:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593125241131:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593125241375:p <- layout(p, shapes=list(list(type = "line",
1593125241394:line = list(width = 0.5),
1593125241427:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593125241442:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593125241460:)), showlegend =F
1593125241476:, xaxis = list(
1593125241495:zeroline = F,
1593125241513:showline = F#,
1593125241531:#mirror = "ticks",
1593125241550:#gridcolor = toRGB("gray50"),
1593125241570:#gridwidth = 2,
1593125241597:#zerolinecolor = toRGB("red"),
1593125241619:#zerolinewidth = 4,
1593125241635:#linecolor = toRGB("black"),
1593125241653:#linewidth = 0
1593125241673:))
1593125242330:print(p)
1593125285265:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593125285460:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593125285643:p <- layout(p, shapes=list(list(type = "line",
1593125285662:line = list(width = 0.5),
1593125285681:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593125285699:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593125285715:)), showlegend =F
1593125285733:, xaxis = list(
1593125285748:zeroline = F,
1593125285769:showline = F,
1593125285785:title = 'theoretical'
1593125285800:#mirror = "ticks",
1593125285818:#gridcolor = toRGB("gray50"),
1593125285836:#gridwidth = 2,
1593125285854:#zerolinecolor = toRGB("red"),
1593125285873:#zerolinewidth = 4,
1593125285892:#linecolor = toRGB("black"),
1593125285909:#linewidth = 0
1593125285926:))
1593125286016:print(p)
1593125412486:p <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593125412694:p <- add_text(p, textfont=list(family="sans serif", size=8),  textposition="top")
1593125412861:p <- layout(p, shapes=list(list(type = "line",
1593125412876:line = list(width = 0.5),
1593125412896:xref = "x", x0 = df$x[1], x1 = df$x[2],
1593125412916:yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593125412934:)), showlegend =F
1593125412950:, xaxis = list(zeroline = F, showline = F, title = 'theoretical')
1593125412967:, yaxis = list(zeroline = F, showline = F, title = 'theoretical'))
1593125413073:print(p)
1593125597945:deparse(substitute(v1))
1593125604303:deparse(substitute("v1"))
1593125615685:deparse(substitute(v1))
1593125644549:is.null(vafdasdf)
1593125681846:exists(dasfdf)
1593125689649:v1 = 23
1593125694021:deparse(substitute(v1))
1593125706153:typeof(dfsaf)
1593125823599:exists(dfdf)
1593125856622:exists("dfdf")
1593125861571:exists("v1")
1593126064249:substitute(name)
1593126074685:name = dfsf
1593126086644:substitute(name = dfsf)
1593126094202:substitute(name <- dfsf)
1593128322849:identify_nonnormal <- function(data, dv, wid = "UserID", step = 2, to_remove = c(), plot = T, as.list = F) {
1593128322951:pre_plot <- NULL
1593128322975:repeat {
1593128322997:idx <- which(!data[[wid]] %in% to_remove)
1593128323027:pdv <- data[idx,][[dv]]
1593128323049:names(pdv) <- data[idx,][[wid]]
1593128323077:if (shapiro_test(pdv)$p.value < 0.05) {
1593128323099:pdv <- sort(pdv)
1593128323137:x.norm <- qnorm(((1:length(pdv)) - 0.5)/length(pdv))
1593128323171:slope <- diff(quantile(pdv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593128323191:int   <- quantile(pdv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593128323219:df <- data.frame(wid=names(pdv), x=x.norm, y=pdv, expected.y=int+(slope*x.norm))
1593128323251:df$diff2 <- abs(df$y - df$expected.y)#^2
1593128323274:df <- df[order(df$diff2, decreasing = T),]
1593128323310:if (is.null(pre_plot)) {
1593128323337:pre_plot <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593128323371:pre_plot <- add_text(pre_plot, textfont=list(family="sans serif", size=8),  textposition="top")
1593128323393:pre_plot <- layout(
1593128323420:pre_plot, shapes=list(list(type = "line", line = list(width = 0.5)
1593128323443:, xref = "x", x0 = df$x[1], x1 = df$x[2]
1593128323466:, yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593128323488:)), showlegend = F
1593128323515:, xaxis = list(zeroline = F, showline = F, title = 'theoretical')
1593128323538:, yaxis = list(zeroline = F, showline = F, title = dv))
1593128323570:if (plot) { print(pre_plot) }
1593128323596:}
1593128323626:to_remove <- c(as.character(df$wid[1:step]), to_remove)
1593128323656:} else {
1593128323684:post_plot <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593128323724:post_plot <- add_text(post_plot, textfont=list(family="sans serif", size=8),  textposition="top")
1593128323754:post_plot <- layout(
1593128323789:post_plot, shapes=list(list(type = "line", line = list(width = 0.5)
1593128323817:, xref = "x", x0 = df$x[1], x1 = df$x[2]
1593128323842:, yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593128323868:)), showlegend =F
1593128323891:, xaxis = list(zeroline = F, showline = F, title = 'theoretical')
1593128323913:, yaxis = list(zeroline = F, showline = F, title = dv))
1593128323940:if (plot) { print(post_plot) }
1593128323966:break()
1593128324041:}
1593128324064:}
1593128324086:if (as.list) return(list(remove=to_remove, pre.plot= pre_plot, post.plot=post_plot))
1593128324109:return(to_remove)
1593128324136:}
1593128333230:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593128333545:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593128333944:shapiro_test(group_by(media_dat, cenario), media)
1593128341429:normPlot(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593128404004:identify_nonnormal(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593129248066:wants <- c('plotly','dplyr','rstatix','readr')
1593129248210:has <- wants %in% rownames(installed.packages())
1593129248392:if (any(!has)) install.packages(wants[!has])
1593129248514:options(scipen = 999)
1593129249178:library(readr)
1593129249194:library(plotly)
1593129249213:library(dplyr)
1593129249230:library(rstatix)
1593129249397:fss <- read_csv("data/fss.csv")
1593129249605:participants <- read_csv("data/participants.csv")
1593129249995:dat <- merge(participants, fss, by="UserID")
1593129250415:dat$cenario <- factor(dat$cenario)
1593129250870:(frequency <- freq_table(dat, cenario))
1593129251385:(summary <- get_summary_stats(group_by(dat, cenario)))
1593129251787:write_csv(frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1593129252095:write_csv(summary, 'report/h1-experiencia-fluxo/summary.csv')
1593129252707:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593129252723:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593129254023:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593129254700:print(p)
1593129258664:for (param in list(list("dimensao1", "balanço desafio/habilidade")
1593129258681:, list("dimensao2", "fusão ação e atenção")
1593129258698:, list("dimensao3", "objetivos claros")
1593129258713:, list("dimensao4", "feedback")
1593129258727:, list("dimensao5", "concentração")
1593129258743:, list("dimensao6", "controle")
1593129258763:, list("dimensao7", "perda autoconsciência")
1593129258783:, list("dimensao8", "transformação do tempo")
1593129258802:, list("dimensao9", "experiência autotélica")
1593129258820:, list("media", "média do fluxo"))) {
1593129258837:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593129258857:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1593129258875:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593129258897:print(p)
1593129258921:readline(prompt=paste0("Current graph: ",param[[1]]," >> Press [enter] to continue"))
1593129258943:}
1593129289804:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593129297800:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593129301993:media_dat
1593129313745:shapiro_test(group_by(media_dat, cenario), media)
1593129486636:car::qqPlot(subset(media_dat, cenario == "gamificado"), "media")
1593129490688:car::qqPlot(subset(media_dat, cenario == "gamificado"), "media")
1593129507969:car::qqPlot(subset(media_dat, cenario == "gamificado"), media~cenario)
1593129520231:?qqPlot
1593129558619:car::qqPlot(~media, subset(media_dat, cenario == "gamificado"))
1593129711689:View(media_dat)
1593129818918:View(subset(media_dat, cenario == "gamificado"))
1593130008719:car::qqPlot(media~UserID, subset(media_dat, cenario == "gamificado"))
1593130017226:car::qqPlot(UserID~media, subset(media_dat, cenario == "gamificado"))
1593130025583:car::qqPlot(media, subset(media_dat, cenario == "gamificado"))
1593130033533:car::qqPlot(~media, subset(media_dat, cenario == "gamificado"))
1593130088185:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593130088526:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593130089706:shapiro_test(group_by(media_dat, cenario), media)
1593130091164:rownames(media_dat) <- media_dat$UserID
1593130093252:car::qqPlot(~media, subset(media_dat, cenario == "gamificado"))
1593130233713:media_dat <- media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),]
1593130241600:shapiro_test(group_by(media_dat, cenario), media)
1593130309151:source('common/identify_nonnormal.R')
1593130311382:identify_nonnormal(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID")
1593130385023:source('common/identify_nonnormal.R')
1593130385637:(non_normal_ids <- identify_nonnormal(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID"))
1593130397261:media_dat <- media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce", non_normal_ids),]
1593130400272:shapiro_test(group_by(media_dat, cenario), media)
1593130434971:(shapiro <- shapiro_test(group_by(media_dat, cenario), media))
1593130519410:write_csv(media_dat, 'report/h1-experiencia-fluxo/media-data.csv')
1593130523722:write_csv(shapiro, 'report/h1-experiencia-fluxo/summary.csv')
1593130854877:levene_test(media ~ cenario, data = media_dat)
1593130891460:(levene <- levene_test(media ~ cenario, data = media_dat))
1593131000312:write_csv(media_dat, 'report/h1-experiencia-fluxo/media-data.csv')
1593131003687:write_csv(shapiro, 'report/h1-experiencia-fluxo/media-shapiro.csv')
1593131013009:(levene <- levene_test(media ~ cenario, data = media_dat))
1593131028414:write_csv(levene, 'report/h1-experiencia-fluxo/media-shapiro.csv')
1593131152345:(tt <- t_test(media ~ cenario, data = media_dat))
1593131167675:?t_test
1593131274307:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater"))
1593131371586:add_significance(tt)
1593131391097:add_significance(levene)
1593131397616:add_significance(tt)
1593131475548:(ez <- cohens_d(media ~ cenario, var.equal = T))
1593131491326:(ez <- cohens_d(media ~ cenario, data = media_dat, var.equal = T))
1593131553149:merge(tt, ez)
1593131564901:add_significance(merge(tt, ez))
1593131584771:parametric_test <- add_significance(merge(tt, ez))
1593131595286:(parametric_test <- add_significance(merge(tt, ez)))
1593131645900:(tt <- t_test(media ~ cenario, data = media_dat))
1593131646110:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater"))
1593131646293:add_significance(tt)
1593131646619:(ez <- cohens_d(media ~ cenario, data = media_dat, var.equal = T))
1593131647049:(t_test <- add_significance(merge(tt, ez)))
1593131648815:write_csv(t_test, 'report/h1-experiencia-fluxo/media-ttest.csv')
1593131827480:p <- plot_ly(data=media_dat, type = "box", boxpoints = "all", jitter = 0.3
1593131827500:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593131828028:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593131828571:print(p)
1593131850743:View(summary)
1593132212635:get_summary_stats(media_dat)
1593132223714:get_summary_stats(media_dat, media)
1593132636039:## ... criamos novamente a estatistica descritiva da média do fluxo
1593132636057:(media_summary <- get_summary_stats(media_dat, media))
1593137568033:wants <- c('plotly','dplyr','rstatix','readr')
1593137568209:has <- wants %in% rownames(installed.packages())
1593137568353:if (any(!has)) install.packages(wants[!has])
1593137568559:options(scipen = 999)
1593137568724:library(plotly)
1593137568844:library(readr)
1593137569046:library(dplyr)
1593137569213:library(rstatix)
1593137569339:fss <- read_csv("data/fss.csv")
1593137569532:participants <- read_csv("data/participants.csv")
1593137569728:dat <- merge(participants, fss, by="UserID")
1593137569887:dat$cenario <- factor(dat$cenario)
1593137570081:(frequency <- freq_table(dat, cenario))
1593137570324:(summary <- get_summary_stats(group_by(dat, cenario)))
1593137570721:write_csv(frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1593137571179:write_csv(summary, 'report/h1-experiencia-fluxo/summary.csv')
1593137575733:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593137575752:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593137576495:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593137578083:print(p)
1593137582860:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593137586349:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593137586964:shapiro_test(group_by(media_dat, cenario), media)
1593137593258:rownames(media_dat) <- media_dat$UserID
1593137594810:car::qqPlot(~media, subset(media_dat, cenario == "gamificado"))
1593137674052:media_dat <- media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce"),]
1593137675133:shapiro_test(group_by(media_dat, cenario), media)
1593137680798:source('common/identify_nonnormal.R')
1593137681560:(non_normal_ids <- identify_nonnormal(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID"))
1593137689075:media_dat <- media_dat[!media_dat$UserID %in% c("b7c1ac58","a9d87bce", non_normal_ids),]
1593137692766:(shapiro <- shapiro_test(group_by(media_dat, cenario), media))
1593137706035:write_csv(media_dat, 'report/h1-experiencia-fluxo/media-data.csv')
1593137706562:write_csv(shapiro, 'report/h1-experiencia-fluxo/media-shapiro.csv')
1593137708032:(levene <- levene_test(media ~ cenario, data = media_dat))
1593137730840:write_csv(levene, 'report/h1-experiencia-fluxo/media-shapiro.csv')
1593137742877:(tt <- t_test(media ~ cenario, data = media_dat))
1593137744080:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater"))
1593137745114:add_significance(tt)
1593137747532:(ez <- cohens_d(media ~ cenario, data = media_dat, var.equal = T))
1593137748352:(t_test <- add_significance(merge(tt, ez)))
1593137749954:write_csv(t_test, 'report/h1-experiencia-fluxo/media-ttest.csv')
1593137755967:## ... criamos novamente a gráfica do boxplot para a média do fluxo (porque foram removidos dados)
1593137755985:p <- plot_ly(data=media_dat, type = "box", boxpoints = "all", jitter = 0.3
1593137755998:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593137756453:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593137758247:print(p)
1593137779521:## ... criamos novamente a estatistica descritiva da média do fluxo
1593137779540:(media_summary <- get_summary_stats(media_dat, media))
1593140902505:(tt <- t_test(media ~ cenario, data = media_dat))
1593140910247:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater"))
1593140920393:t_test
1593140924661:?t_test
1593140990888:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater", detailed=T))
1593141039874:(tt <- t_test(media ~ cenario, data = media_dat))
1593141040068:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater", detailed = T))
1593141040270:add_significance(tt)
1593141040552:(ez <- cohens_d(media ~ cenario, data = media_dat, var.equal = T))
1593141041072:(t_test <- add_significance(merge(tt, ez)))
1593141041866:write_csv(t_test, 'report/h1-experiencia-fluxo/media-ttest.csv')
1593141043297:## ... criamos novamente a gráfica do boxplot para a média do fluxo (porque foram removidos dados)
1593141043312:p <- plot_ly(data=media_dat, type = "box", boxpoints = "all", jitter = 0.3
1593141043327:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593141043623:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593141044784:print(p)
1593141080256:## ... criamos novamente a estatistica descritiva da média do fluxo
1593141080275:(media_summary <- get_summary_stats(media_dat, media))
1593141100924:wilcox_test(media~cenario, data = dat, alternative = "greater")
1593142046011:shiny::runApp()
1593142060711:runApp()
1593142062472:runApp()
1593142103785:runApp()
1593142136127:runApp()
1593142735578:?group_by
1593142813175:headache %>%
1593142813193:group_by(gender, risk, treatment) %>%
1593142813206:identify_outliers(pain_score)
1593142831446:data("headache", package = "datarium")
1593142843513:install.packages('"datarium"')
1593142849984:install.packages("datarium")
1593142855681:data("headache", package = "datarium")
1593142908477:do.call("group_by", c(headache, c("gender","risk","treatment")))
1593142940182:do.call("group_by", c(headache, c(gender, risk , treatment )))
1593142959805:group_by(headache,gender, risk, treatment)
1593142968775:do.call("group_by", c(headache, c(gender, risk , treatment )))
1593142996178:do.call("group_by", c(headache, c(as.formula("gender"), "risk" , "treatment" )))
1593143219043:do.call("group_by", list(headache, c("gender")))
1593143233726:do.call("group_by", list(headache, c("gender", "risk", "treatment")))
1593143246922:do.call("group_by", list(headache, c("gender", "risk", "treatment")))
1593143260595:do.call("group_by", list(headache, "gender", "risk", "treatment"))
1593143288066:identify_outliers(do.call("group_by", list(headache, "gender", "risk", "treatment")))
1593143296764:do.call("group_by", list(headache, "gender", "risk", "treatment"))
1593143334869:identify_outliers(do.call("group_by", list(headache, "gender", "risk", "treatment")), "pain_score")
1593143882716:?identify_outliers
1593143983663:do.call("group_by", c(headache, c(as.formula("gender"), "risk" , "treatment" )))
1593143987941:identify_outliers(do.call("group_by", list(headache, "gender", "risk", "treatment")), "pain_score")
1593144164599:group_by_(headache, c("gender", "risk"))
1593144172061:group_by(headache, c("gender", "risk"))
1593144209851:identify_outliers(do.call("group_by", list(headache, c("gender", "risk", "treatment"))), "pain_score")
1593144318312:?group_by
1593144476516:list(headache, "gender", "risk", "treatment")
1593144575704:dvs <- c("gender", "risk", "treatment")
1593144579980:dvs
1593144588311:as.list(dvs)
1593144634400:as.list(c(headache, dvs))
1593144726269:c(headache, as.list(dvs))
1593144767948:as.list(dvs)
1593144774440:c(list(headache), as.list(dvs))
1593144819648:?data
1593145211267:runApp()
1593145222545:runApp()
1593145293850:runApp()
1593145430594:headache <- read_csv("data/fss.csv")
1593145446775:runApp()
1593145496886:runApp()
1593145757773:runApp()
1593145772508:runApp()
1593145783725:runApp()
1593145866761:runApp()
1593145963264:runApp()
1593146009822:runApp()
1593146093096:runApp()
1593146203901:runApp()
1593146226776:headache <- read_csv("data/fss.csv")
1593146227061:headache <- merge(read_csv("data/participants.csv"), headache)
1593146249267:ivs=c("cenario")
1593146252667:dvs=c('media','dimensao1','dimensao2')
1593146259364:dat <- do.call("group_by", c(list(data), as.list(ivs)))
1593146272765:dat <- do.call(group_by, c(list(data), as.list(ivs)))
1593146294579:ivs
1593146300679:c(list(data), as.list(ivs))
1593146333425:data=headache
1593146338988:dat <- do.call(group_by, c(list(data), as.list(ivs)))
1593146341883:dat
1593146359596:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593146359612:print(dv)
1593146359627:print(cbind(variable = dv, identify_outliers(dat, dv)))
1593146359641:return(dat)
1593146359654:}))
1593146382304:dv = "media"
1593146385603:print(dv)
1593146392600:identify_outliers(dat, dv)
1593146407895:cbind(variable = dv, identify_outliers(dat, dv))
1593146423057:data.frame(variable = dv, identify_outliers(dat, dv))
1593146464175:outliers <- identify_outliers(dat, dv)
1593146471399:length(outliers)
1593146478497:nrow(outliers)
1593146508653:outliers
1593146567454:dat <- do.call(group_by, c(list(data), as.list(ivs)))
1593146578576:identify_outliers(dat, media)
1593146584475:identify_outliers(dat, dimensao1)
1593146586420:identify_outliers(dat, dimensao2)
1593146588494:identify_outliers(dat, dimensao3)
1593146590678:identify_outliers(dat, dimensao4)
1593146596315:data
1593146615089:wants <- c('plotly','dplyr','rstatix','readr')
1593146615584:has <- wants %in% rownames(installed.packages())
1593146615683:if (any(!has)) install.packages(wants[!has])
1593146615703:options(scipen = 999)
1593146615726:library(plotly)
1593146615744:library(readr)
1593146615766:library(dplyr)
1593146615781:library(rstatix)
1593146615801:fss <- read_csv("data/fss.csv")
1593146617094:participants <- read_csv("data/participants.csv")
1593146619159:dat <- merge(participants, fss, by="UserID")
1593146625035:dat$cenario <- factor(dat$cenario)
1593146634305:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593146676640:do.call(group_by, c(list(data), as.list(ivs)))
1593146687374:outliers <- identify_outliers(dat, dv)
1593146692544:outliers
1593146710747:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593146717922:(media_outliers <- identify_outliers(group_by(data, cenario), media))
1593146722447:(media_outliers <- identify_outliers(group_by(data, cenario), media))
1593146755497:dat <- do.call(group_by, c(list(data), as.list(ivs)))
1593146765691:identify_outliers(dat, dv)
1593146777367:?identify_outliers
1593146793493:outliers <- identify_outliers(dat, variable=dv)
1593146796858:outliers
1593146829914:(outliers <- identify_outliers(dat, variable=dv))
1593146836634:(outliers <- identify_outliers(dat, media))
1593146856300:(outliers <- identify_outliers(group_by(dat, cenario), media))
1593146897798:(outliers <- identify_outliers(group_by(dat, cenario), variable="media"))
1593146913633:ivs
1593146926318:(outliers <- identify_outliers(do.call(group_by, c(list(data), as.list(ivs))), variable=dv))
1593146982244:data
1593146996692:dat <- do.call(group_by, c(list(data), as.list(ivs)))
1593146999065:dat
1593147078842:for (iv in ivs) {
1593147078857:dat <- group_by(data, iv)
1593147078872:}
1593147084308:(outliers <- identify_outliers(dat, variable=dv))
1593147088509:dv
1593147103006:(outliers <- identify_outliers(dat, media))
1593147111350:dat
1593147154727:(dat <- group_by(data, media))
1593147169899:(dat <- group_by(data, cenario))
1593147189027:?group_by
1593147226281:dat <- do.call(group_by, c(list(data), as.list(ivs)))
1593147234222:(dat <- do.call(group_by, c(list(data), as.list(ivs))))
1593147258997:(dat <- do.call(group_by, c(list(data), as.list(as.formula(ivs)))))
1593147381176:!!!syms(ivs)
1593147386219:(dat <- group_by(data, !!!syms(ivs)))
1593147409860:(outliers <- identify_outliers(dat, variable=dv))
1593147520687:runApp()
1593147622780:runApp()
1593147649226:runApp()
1593148150178:?if_else
1593148162143:?ifelse
1593148291685:runApp()
1593148315878:source('modules/getOutliers.R')
1593148318920:headache <- read_csv("data/fss.csv")
1593148319187:headache <- merge(read_csv("data/participants.csv"), headache)
1593148319558:dvs <- c('media','dimensao1','dimensao2','dimensao3','dimensao4'
1593148319577:,'dimensao5','dimensao6','dimensao7','dimensao8','dimensao9')
1593148320663:outliers <- getOutliers(dat, dvs, ivs = "cenario")
1593148327304:outliers
1593148363873:runApp()
1593148448919:runApp()
1593148643782:?shapiro_test
1593148734911:data
1593148737162:dvs
1593148739683:ivs
1593148789557:shapiro
1593148985577:outliers <- getOutliers(dat, dvs, ivs = "cenario")
1593148986306:shapiro.test <- getShapiroTest(dat, dvs, ivs = "cenario")
1593148990922:options(stringsAsFactors=F)
1593148991129:source('modules/getOutliers.R')
1593148991268:source('modules/getShapiroTest.R')
1593148994699:outliers <- getOutliers(dat, dvs, ivs = "cenario")
1593148995254:shapiro.test <- getShapiroTest(dat, dvs, ivs = "cenario")
1593148997444:shapiro.test
1593149087555:freq_table(data = head())
1593149107382:headache <- read_csv("data/fss.csv")
1593149108255:headache <- merge(read_csv("data/participants.csv"), headache)
1593149109703:dvs <- c('media','dimensao1','dimensao2','dimensao3','dimensao4'
1593149109719:,'dimensao5','dimensao6','dimensao7','dimensao8','dimensao9')
1593149110241:outliers <- getOutliers(headache, dvs, ivs = "cenario")
1593149111556:shapiro.test <- getShapiroTest(headache, dvs, ivs = "cenario")
1593149113891:shapiro.test
1593149309212:?levene_test
1593149435482:(levene <- levene_test(media ~ cenario, data = media_dat))
1593149458868:(levene <- levene_test(~media, data = media_dat))
1593150471051:options(stringsAsFactors=F)
1593150471228:source('modules/getOutliers.R')
1593150471415:source('modules/getShapiroTest.R')
1593150471943:source('modules/getLeveneTest.R')
1593150510657:levene.test <- getLeveneTest(headache, dvs, ivs = "cenario")
1593150557043:as.formula("ad ~df")
1593150565574:levene.test <- getLeveneTest(headache, dvs, ivs = "cenario")
1593150571492:dvs
1593150577785:data = headache
1593150582834:ivs = "cenario"
1593150589875:dat <- group_by(data, !!!syms(ivs))
1593150593420:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593150593434:levene <- levene_test(as.formula(paste(dv, '~', paste0(ivs, collapse = '+'))), data =  dat)
1593150593446:if (nrow(levene) > 0){
1593150593460:return(cbind(variable = dv, levene))
1593150593471:}
1593150593484:}))
1593150598122:dv
1593150605249:levene <- levene_test(as.formula(paste(dv, '~', paste0(ivs, collapse = '+'))), data =  dat)
1593150614183:as.formula(paste(dv, '~', paste0(ivs, collapse = '+')))
1593150633163:levene <- levene_test(as.formula(paste(dv, '~', paste0(ivs, collapse = '+'))), data =  dat)
1593150660173:levene <- levene_test(as.formula('media ~ cenario'), data =  dat)
1593150668117:colnames(dat)
1593150725181:levene <- levene_test(as.formula('media~cenario'), data =  dat)
1593150816277:levene <- leveneTest(as.formula('media~cenario'), data =  dat)
1593150828603:levene
1593150837804:levene <- levene_test(as.formula('media~cenario'), data =  dat)
1593150849053:levene <- levene_test(formula = 'media~cenario', data =  dat)
1593150855351:levene <- levene_test(formula = media~cenario, data =  dat)
1593150865233:levene_test(formula = media~cenario, data =  dat)
1593150888849:levene_test(data =  dat, formula = media ~ cenario)
1593150899260:dat
1593150912256:levene_test(data =  dat, formula = media ~ cenario)
1593150918572:levene_test(data =  dat, media ~ cenario)
1593150949469:(levene <- levene_test(media ~ cenario, data = media_dat))
1593150964154:levene_test(data =  dat, media ~ cenario)
1593150973153:levene_test(data =  dat, media)
1593150990576:levene_test(data =  dat, cenario ~ media)
1593150995750:levene_test(data =  dat, ~ media)
1593151002873:levene_test(data =  dat, media ~ cenario)
1593151032939:levene_test(data =  dat, !!!syms("media ~ cenario"))
1593151040629:levene_test(data =  dat, !!!syms(media ~ cenario))
1593151103391:dat$cenario <- as.factor(dat$cenario)
1593151108524:levene_test(data =  dat, media ~ cenario)
1593151115151:cenario
1593151185247:library(rstatix)
1593151185423:options(stringsAsFactors=F)
1593151185564:source('modules/getOutliers.R')
1593151186163:source('modules/getShapiroTest.R')
1593151186473:source('modules/getLeveneTest.R')
1593151191572:headache <- read_csv("data/fss.csv")
1593151191892:headache <- merge(read_csv("data/participants.csv"), headache)
1593151192103:dvs <- c('media','dimensao1','dimensao2','dimensao3','dimensao4'
1593151192122:,'dimensao5','dimensao6','dimensao7','dimensao8','dimensao9')
1593151192688:outliers <- getOutliers(headache, dvs, ivs = "cenario")
1593151193034:shapiro.test <- getShapiroTest(headache, dvs, ivs = "cenario")
1593151194326:levene.test <- getLeveneTest(headache, dvs, ivs = "cenario")
1593151210416:data = headache
1593151213037:dvs
1593151215859:dat <- group_by(data, !!!syms(ivs))
1593151226316:ivs = "cenario"
1593151228727:dat <- group_by(data, !!!syms(ivs))
1593151233212:dv
1593151243796:dv <- dvs[1]
1593151245102:dv
1593151248030:levene <- levene_test(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat)
1593151271518:levene <- leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat)
1593151278527:leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat)
1593151314019:as.data.frame(leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat))
1593151411032:as.data.frame(leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat, group = ))[1,]
1593151424076:as.data.frame(leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat, group = ))[c(1),]
1593151429346:as.data.frame(leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat, group = ))[1,]
1593151432359:as.data.frame(leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat, group = ))
1593151434526:as.data.frame(leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat, group = )
1593151436559:)
1593151458073:as.data.frame(leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat)
1593151460054:)
1593151472390:as.data.frame(leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat))[1,]
1593151511441:source('modules/getOutliers.R')
1593151511660:source('modules/getShapiroTest.R')
1593151511786:source('modules/getLeveneTest.R')
1593151515593:headache <- read_csv("data/fss.csv")
1593151515836:headache <- merge(read_csv("data/participants.csv"), headache)
1593151516209:dvs <- c('media','dimensao1','dimensao2','dimensao3','dimensao4'
1593151516226:,'dimensao5','dimensao6','dimensao7','dimensao8','dimensao9')
1593151516689:outliers <- getOutliers(headache, dvs, ivs = "cenario")
1593151516999:shapiro.test <- getShapiroTest(headache, dvs, ivs = "cenario")
1593151517781:levene.test <- getLeveneTest(headache, dvs, ivs = "cenario")
1593151524937:View(levene.test)
1593151587415:add_significance(levene.test)
1593151618050:levene.test[["p"]] <- levene.test$`Pr(>F)`
1593151627646:add_significance(levene.test)
1593151670855:(levene <- levene_test(media ~ cenario, data = media_dat))
1593151677896:wants <- c('plotly','dplyr','rstatix','readr')
1593151678108:has <- wants %in% rownames(installed.packages())
1593151678255:if (any(!has)) install.packages(wants[!has])
1593151678403:options(scipen = 999)
1593151678649:library(plotly)
1593151678774:library(readr)
1593151678966:library(dplyr)
1593151679128:library(rstatix)
1593151679321:fss <- read_csv("data/fss.csv")
1593151679945:participants <- read_csv("data/participants.csv")
1593151680142:dat <- merge(participants, fss, by="UserID")
1593151682328:dat$cenario <- factor(dat$cenario)
1593151682801:(frequency <- freq_table(dat, cenario))
1593151683248:(summary <- get_summary_stats(group_by(dat, cenario)))
1593151683428:write_csv(frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1593151683589:write_csv(summary, 'report/h1-experiencia-fluxo/summary.csv')
1593151683709:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593151683726:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593151684024:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593151684257:print(p)
1593151684711:for (param in list(list("dimensao1", "balanço desafio/habilidade")
1593151684727:, list("dimensao2", "fusão ação e atenção")
1593151684741:, list("dimensao3", "objetivos claros")
1593151684758:, list("dimensao4", "feedback")
1593151684771:, list("dimensao5", "concentração")
1593151684786:, list("dimensao6", "controle")
1593151684800:, list("dimensao7", "perda autoconsciência")
1593151684814:, list("dimensao8", "transformação do tempo")
1593151684827:, list("dimensao9", "experiência autotélica")
1593151684845:, list("media", "média do fluxo"))) {
1593151684862:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593151684880:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1593151684908:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1593151684925:print(p)
1593151684947:readline(prompt=paste0("Current graph: ",param[[1]]," >> Press [enter] to continue"))
1593151684962:}
1593151691633:(shapiro <- shapiro_test(group_by(media_dat, cenario), media))
1593151692828:write_csv(media_dat, 'report/h1-experiencia-fluxo/media-data.csv')
1593151693137:write_csv(shapiro, 'report/h1-experiencia-fluxo/media-shapiro.csv')
1593151695403:(levene <- levene_test(media ~ cenario, data = media_dat))
1593151701364:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1593151703219:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1593151709604:(levene <- levene_test(media ~ cenario, data = media_dat))
1593151749070:levene <- car::leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat)
1593151812111:levene$`F value`
1593151818243:levene$`F value`[1]
1593151858415:source('modules/getOutliers.R')
1593151858618:source('modules/getShapiroTest.R')
1593151858755:source('modules/getLeveneTest.R')
1593151863232:headache <- read_csv("data/fss.csv")
1593151863400:headache <- merge(read_csv("data/participants.csv"), headache)
1593151863558:dvs <- c('media','dimensao1','dimensao2','dimensao3','dimensao4'
1593151863574:,'dimensao5','dimensao6','dimensao7','dimensao8','dimensao9')
1593151863735:outliers <- getOutliers(headache, dvs, ivs = "cenario")
1593151864000:shapiro.test <- getShapiroTest(headache, dvs, ivs = "cenario")
1593151864717:levene.test <- getLeveneTest(headache, dvs, ivs = "cenario")
1593151867352:levene.test
1593151896936:getLeveneTest <- function (data, dvs, ivs) {
1593151896956:dat <- group_by(data, !!!syms(ivs))
1593151896973:return(
1593151896989:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593151897005:levene <- car::leveneTest(as.formula(paste(dv, '~', paste0(ivs, collapse = '*'))), data =  dat)
1593151897023:levene <- data.frame(df1 = levene$Df[1], df2 = levene$Df[2], statistic = levene$`F value`[1], p = levene$`Pr(>F)`[1])
1593151897040:if (nrow(levene) > 0){
1593151897065:return(cbind(variable = dv, levene))
1593151897086:}
1593151897109:}))
1593151897127:)
1593151897145:}
1593151903367:levene.test <- getLeveneTest(headache, dvs, ivs = "cenario")
1593151909681:levene.test
1593152286302:dat <- group_by(data, !!!syms(ivs))
1593152331996:t_test(data = dat, alternative = "two.sided", detailed = T)
1593152344614:t_test
1593152436329:t_test(as.formula(paste(dv, '~', iv)), data = dat, alternative = "two.sided", detailed = T)
1593152521631:iv = ivs
1593152524513:t_test <- t_test(as.formula(paste(dv, '~', iv))
1593152524530:, data = dat, alternative = "two.sided", detailed = T)
1593152537189:t.test <- t_test(as.formula(paste(dv, '~', iv))
1593152537205:, data = dat, alternative = "two.sided", detailed = T)
1593152544409:iv
1593152549677:dat <- group_by(data, !!!syms(ivs))
1593152558482:?t_test
1593152637180:t.test <- t_test(as.formula(paste0(dv, '~', iv))
1593152637197:, data = dat, alternative = "two.sided", detailed = T)
1593152648844:rlang::last_error()
1593152703705:t.test <- t_test(as.formula(paste0(as.character(dv), '~', as.character(iv)))
1593152703722:, data = dat, alternative = "two.sided", detailed = T)
1593152716189:dat
1593152766836:t.test <- t_test(media ~ cenario
1593152766851:, data = dat, alternative = "two.sided", detailed = T)
1593152774847:t.test <- t_test(media ~ cenario, data = dat, alternative = "two.sided", detailed = T)
1593152795676:t.test <- t_test(media ~ cenario, data = group_by(dat, cenario), alternative = "two.sided", detailed = T)
1593152845002:t.test <- t_test(media ~ !!!syms(cenario), data = group_by(dat, cenario), alternative = "two.sided", detailed = T)
1593152858807:library(rstatix)
1593152860792:dat <- group_by(data, !!!syms(ivs))
1593152864972:t.test <- t_test(as.formula(paste(as.character(dv), '~', as.character(iv)))
1593152864989:, data = dat, alternative = "two.sided", detailed = T)
1593152934414:iv
1593152939275:t.test <- t_test(as.formula(paste(dv, '~', iv))
1593152939296:, data = dat, alternative = "two.sided", detailed = T)
1593152964339:t.test <- t_test(media ~ cenario #as.formula(paste(dv, '~', iv))
1593152964355:, data = dat, alternative = "two.sided", detailed = T)
1593153011348:colnames(data)
1593153021246:data
1593153032709:dat <- group_by(data, !!!syms(ivs))
1593153034442:dat
1593153057754:t.test <- t_test(media ~ cenario #as.formula(paste(dv, '~', iv))
1593153057771:, data = dat, alternative = "two.sided", detailed = T)
1593153079836:t.test <- t_test(media ~ cenario #as.formula(paste(dv, '~', iv))
1593153079851:, data = as.data.frame(dat), alternative = "two.sided", detailed = T)
1593153165775:source(paste0(getwd(),'/common/df2DT.R'))
1593153165802:getTTest <- function (data, dvs, ivs) {
1593153165817:library(rstatix)
1593153165831:dat <- group_by(data, !!!syms(ivs))
1593153165845:return(
1593153165860:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593153165874:do.call(rbind, lapply(ivs, function(iv) {
1593153165888:t.test <- t_test(as.formula(paste(dv, '~', iv)), data = as.data.frame(dat)
1593153165904:, alternative = "two.sided", detailed = T)
1593153165920:if (nrow(shapiro) > 0){
1593153165935:return(cbind(variable = dv, shapiro))
1593153165956:}
1593153165975:}))
1593153165990:}))
1593153166006:)
1593153166025:}
1593153166046:getTTestUI <- function(id) {
1593153166072:ns <- NS(id)
1593153166095:DT::DTOutput(ns("tTestDT"))
1593153166112:}
1593153166135:getTTestMD <- function(input, output, session, data = NULL, dvs = NULL, ivs = NULL, t.test = NULL) {
1593153166153:output$tTestDT <- DT::renderDataTable({
1593153166169:if (is.null(t.test)) t.test <- getShapiroTest(data, dvs, ivs)
1593153166189:df2DT(t.test)
1593153166205:})
1593153166221:}
1593153173889:(tt <- t_test(media ~ cenario, data = media_dat))
1593153175167:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater", detailed = T))
1593153200577:source('modules/getTTest.R')
1593153220359:t.test <- getTTest(headache, dvs, ivs = "cenario")
1593153279816:source(paste0(getwd(),'/common/df2DT.R'))
1593153279841:getTTest <- function (data, dvs, ivs) {
1593153279858:library(rstatix)
1593153279874:dat <- group_by(data, !!!syms(ivs))
1593153279890:return(
1593153279904:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593153279919:do.call(rbind, lapply(ivs, function(iv) {
1593153279933:t.test <- t_test(as.formula(paste(dv, '~', iv)), data = as.data.frame(dat)
1593153279949:, alternative = "two.sided", detailed = T)
1593153279964:if (nrow(t.test) > 0){
1593153279978:return(cbind(variable = dv, fator = iv, t.test))
1593153279992:}
1593153280007:}))
1593153280024:}))
1593153280041:)
1593153280057:}
1593153280077:getTTestUI <- function(id) {
1593153280092:ns <- NS(id)
1593153280109:DT::DTOutput(ns("tTestDT"))
1593153280123:}
1593153280144:getTTestMD <- function(input, output, session, data = NULL, dvs = NULL, ivs = NULL, t.test = NULL) {
1593153280165:output$tTestDT <- DT::renderDataTable({
1593153280181:if (is.null(t.test)) t.test <- getTTest(data, dvs, ivs)
1593153280198:df2DT(t.test)
1593153280216:})
1593153280237:}
1593153285507:(tt <- t_test(media ~ cenario, data = media_dat))
1593153291424:levene.test <- getLeveneTest(headache, dvs, ivs = "cenario")
1593153293748:t.test <- getTTest(headache, dvs, ivs = "cenario")
1593153296055:t.test
1593153406468:headache <- read_csv("data/fss.csv")
1593153406756:headache <- merge(read_csv("data/participants.csv"), headache)
1593153407006:dvs <- c('media','dimensao1','dimensao2','dimensao3','dimensao4'
1593153407026:,'dimensao5','dimensao6','dimensao7','dimensao8','dimensao9')
1593153421835:outliers <- getOutliers(headache, dvs, ivs = "cenario")
1593153422169:shapiro.test <- getShapiroTest(headache, dvs, ivs = "cenario")
1593153423530:levene.test <- getLeveneTest(headache, dvs, ivs = "cenario")
1593153425211:t.test <- getTTest(headache, dvs, ivs = "cenario")
1593153437029:t.test
1593154518096:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593154632197:dat <- as.data.frame(group_by(data, !!!syms(ivs)))
1593154636141:dat
1593154679198:dat <- as.data.frame(group_by(data, !!!syms(ivs)))
1593154769280:source(paste0(getwd(),'/common/df2DT.R'))
1593154769455:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593154769612:source(paste0(getwd(),'modules/getOutliers.R'))
1593154772706:source(paste0(getwd(),'/common/df2DT.R'))
1593154772933:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593154773402:source(paste0(getwd(),'modules/getOutliers.R'))
1593154774783:source(paste0(getwd(),'modules/getShapiroTest.R'))
1593154782462:source(paste0(getwd(),'/modules/getOutliers.R'))
1593154782642:source(paste0(getwd(),'/modules/getShapiroTest.R'))
1593154811932:getOutliers(data = dat, dvs, ivs)
1593155044092:dv
1593155048698:outliers$variable == dv
1593155095662:outliers[which(outliers$variable == dv), ]
1593155125967:outliers[which(outliers$variable == dv), ]
1593155304647:dv_outliers <- outliers[which(outliers$variable == dv), ]
1593155329855:dv_outliers[[dv]]
1593155339607:wid
1593155343531:wid = "UserID"
1593155360926:id = "UserID"
1593155366860:dv_outliers[[id]]
1593155417884:dv_outliers[[id]]
1593155423253:dv_outliers[[id]]
1593155450238:dat[[id]]
1593155456759:dat[!dat[[id]] %in% dv_outliers[[id]],]
1593155572177:shapiro.test <- getShapiroTest(data = dat, dvs, ivs)
1593155593407:shapiro.test <- getShapiroTest(data = dat, dvs, ivs)
1593155596876:shapiro.test
1593155620643:dvs
1593155623314:ivs
1593155627815:shapiro.test <- getShapiroTest(data = dat, dvs, ivs)
1593155629803:shapiro.test
1593155638788:ivs
1593155644252:dat
1593155676895:dat <- as.data.frame(group_by(data, !!!syms(ivs)))
1593155680795:shapiro <- shapiro_test(dat, vars=dv)
1593155684825:shapiro
1593155709384:dat <- group_by(data, !!!syms(ivs))
1593155714741:shapiro <- shapiro_test(dat, vars=dv)
1593155717246:shapiro
1593155760500:dat <- group_by(data, !!!syms(ivs))
1593155765401:getOutliers <- function (data, dvs, ivs) {
1593155765418:dat <- group_by(data, !!!syms(ivs))
1593155765433:return(
1593155765448:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593155765463:(outliers <- identify_outliers(dat, variable=dv))
1593155765478:if (nrow(outliers) > 0){
1593155765492:return(cbind(variable = dv, outliers))
1593155765505:}
1593155765522:}))
1593155765536:)
1593155765552:}
1593155791485:dat <- group_by(data, !!!syms(ivs))
1593155795186:outliers <- getOutliers(data = dat, dvs, ivs)
1593155796237:shapiro.test <- getShapiroTest(data = dat, dvs, ivs)
1593155799269:shapiro.test
1593155805763:dat <- group_by(data, !!!syms(ivs))
1593155806087:outliers <- getOutliers(data = dat, dvs, ivs)
1593155807671:shapiro.test <- getShapiroTest(data = dat, dvs, ivs)
1593155814324:getOutliers <- function (data, dvs, ivs) {
1593155814345:dat <- group_by(data, !!!syms(ivs))
1593155814358:return(
1593155814373:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593155814387:(outliers <- identify_outliers(dat, variable=dv))
1593155814401:if (nrow(outliers) > 0){
1593155814416:return(cbind(variable = dv, outliers))
1593155814450:}
1593155814467:}))
1593155814480:)
1593155814498:}
1593155818142:outliers <- getOutliers(data = dat, dvs, ivs)
1593155819897:outliers
1593155821733:dat <- group_by(data, !!!syms(ivs))
1593155823807:outliers <- getOutliers(data = dat, dvs, ivs)
1593155826049:outliers
1593155844821:shapiro.test <- getShapiroTest(data = dat, dvs, ivs)
1593155847644:shapiro.test
1593155854026:dv_outliers <- outliers[which(outliers$variable == dv), ]
1593155856539:dv_outliers
1593155932631:identify_nonnormal <- function(data, dv, wid = "UserID", step = 2, to_remove = c(), plot = T, as.list = F) {
1593155932648:library(plotly)
1593155932668:pre_plot <- NULL
1593155932682:repeat {
1593155932698:idx <- which(!data[[wid]] %in% to_remove)
1593155932718:pdv <- data[idx,][[dv]]
1593155932731:names(pdv) <- data[idx,][[wid]]
1593155932750:if (shapiro_test(pdv)$p.value < 0.05) {
1593155932765:pdv <- sort(pdv)
1593155932781:x.norm <- qnorm(((1:length(pdv)) - 0.5)/length(pdv))
1593155932801:slope <- diff(quantile(pdv, c(0.25, 0.75), type = 5)) / diff(qnorm(c(0.25, 0.75)))
1593155932819:int   <- quantile(pdv, c(0.25, 0.75), type = 5)[1] - slope * qnorm(c(0.25, 0.75))[1]
1593155932840:df <- data.frame(wid=names(pdv), x=x.norm, y=pdv, expected.y=int+(slope*x.norm))
1593155932854:df$diff2 <- abs(df$y - df$expected.y)^2
1593155932868:df <- df[order(df$diff2, decreasing = T),]
1593155932893:if (is.null(pre_plot)) {
1593155932906:pre_plot <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593155932920:pre_plot <- add_text(pre_plot, textfont=list(family="sans serif", size=8),  textposition="top")
1593155932933:pre_plot <- layout(
1593155932948:pre_plot, shapes=list(list(type = "line", line = list(width = 0.5)
1593155932965:, xref = "x", x0 = df$x[1], x1 = df$x[2]
1593155932982:, yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593155933002:)), showlegend = F
1593155933019:, xaxis = list(zeroline = F, showline = F, title = 'theoretical')
1593155933037:, yaxis = list(zeroline = F, showline = F, title = dv))
1593155933052:if (plot) { print(pre_plot) }
1593155933070:}
1593155933095:to_remove <- c(as.character(df$wid[1:step]), to_remove)
1593155933111:} else {
1593155933128:post_plot <- plot_ly(data = df, x=~x, y=~y, type = "scatter", mode = 'markers', text =~wid)
1593155933144:post_plot <- add_text(post_plot, textfont=list(family="sans serif", size=8),  textposition="top")
1593155933161:post_plot <- layout(
1593155933182:post_plot, shapes=list(list(type = "line", line = list(width = 0.5)
1593155933199:, xref = "x", x0 = df$x[1], x1 = df$x[2]
1593155933211:, yref = "y", y0 = int+(slope*df$x[1]), y1 = int+(slope*df$x[2])
1593155933224:)), showlegend =F
1593155933240:, xaxis = list(zeroline = F, showline = F, title = 'theoretical')
1593155933256:, yaxis = list(zeroline = F, showline = F, title = 'sample'))
1593155933287:if (plot) { print(post_plot) }
1593155933308:break()
1593155933326:}
1593155933339:}
1593155933354:if (as.list) return(list(remove=to_remove, pre.plot= pre_plot, post.plot=post_plot))
1593155933371:return(to_remove)
1593155933387:}
1593155974139:dv_outliers <- outliers[which(outliers$variable == dv), ]
1593155975215:dv_dat <- dat[!dat[[id]] %in% dv_outliers[[id]],]
1593156006114:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593156008222:shapiro.test
1593156020972:dv_dat
1593156057290:getShapiroTest <- function (data, dvs, ivs) {
1593156057310:dat <- group_by(data, !!!syms(ivs))
1593156057324:return(
1593156057340:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593156057355:shapiro <- shapiro_test(dat, vars=dv)
1593156057368:if (nrow(shapiro) > 0){
1593156057384:return(cbind(variable = dv, shapiro))
1593156057409:}
1593156057429:}))
1593156057443:)
1593156057460:}
1593156060730:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593156063844:shapiro.test
1593156162137:getShapiroTest <- function (data, dvs, ivs) {
1593156162156:dat <- group_by(data, !!!syms(ivs))
1593156162172:return(
1593156162185:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593156162203:shapiro <- shapiro_test(dat, vars=dv)
1593156162218:if (nrow(shapiro) > 0){
1593156162232:return(shapiro)
1593156162247:}
1593156162261:}))
1593156162274:)
1593156162289:}
1593156174687:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593156177754:shapiro.test
1593156432357:?car::qqPlot
1593156681148:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593156682868:identify_nonnormal(data = dv_dat, dv, wid = id, plot = F)
1593156690151:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593156696099:shapiro.test
1593156760475:shapiro.test$p
1593156797102:for (shapiro.t in shapiro.test) {
1593156797121:print(shapiro.t)
1593156797135:}
1593156840760:1:nrow(shapiro.test)
1593156863241:seq(1,nrow(shapiro.test))
1593157015021:shapiro.t[i,]
1593157019481:i=1
1593157031221:shapiro.t[i,]$p
1593157047160:shapiro.test[i,]$p
1593157503235:shapiro.test
1593157618133:shapiro.test[i,ivs]
1593157662978:dv_dat[[ivs]]
1593157691939:dv_dat[[ivs]] == shapiro.test[i,ivs]
1593157700951:shapiro.test[i,ivs]
1593157704446:dv_dat[[ivs]]
1593157722602:(dv_dat[[ivs]] == shapiro.test[i,ivs])
1593157730566:dv_dat[[ivs]]
1593157742063:(dv_dat[[ivs]] %in% shapiro.test[i,ivs])
1593157771384:dv_dat[(dv_dat[[ivs]] %in% shapiro.test[i,ivs]),]
1593157786710:subdat <- dv_dat[(dv_dat[[ivs]] %in% shapiro.test[i,ivs]),]
1593157788264:dv_non_normilty_ids <- identify_nonnormal(data = subdat, dv, wid = id, plot = F)
1593157791872:dv_non_normilty_ids
1593157944802:dv_dat[!dat[[id]] %in% dv_non_normilty_ids, ]
1593157949379:dv_outliers <- outliers[which(outliers$variable == dv), ]
1593157949700:dv_dat <- dat[!dat[[id]] %in% dv_outliers[[id]],]
1593157950186:dv_non_normilty_ids <- c()
1593157951015:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593157951743:for (i in seq(1,nrow(shapiro.test))) {
1593157951760:if (shapiro.test[i,]$p < 0.05) {
1593157951774:subdat <- dv_dat[(dv_dat[[ivs]] %in% shapiro.test[i,ivs]),]
1593157951790:dv_non_normilty_ids <- c(identify_nonnormal(data = subdat, dv, wid = id, plot = F), dv_non_normilty_ids)
1593157951802:}
1593157951815:}
1593157963610:dv_dat[!dat[[id]] %in% dv_non_normilty_ids, ]
1593157971137:dat[[id]]
1593157977015:dat[[id]] %in% dv_non_normilty_ids
1593157987107:dv_dat[!dat[[id]] %in% dv_non_normilty_ids, ]
1593157999918:dv_outliers <- outliers[which(outliers$variable == dv), ]
1593158000330:dv_dat <- dat[!dat[[id]] %in% dv_outliers[[id]],]
1593158000709:dv_non_normilty_ids <- c()
1593158001471:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593158001868:for (i in seq(1,nrow(shapiro.test))) {
1593158001886:if (shapiro.test[i,]$p < 0.05) {
1593158001900:subdat <- dv_dat[(dv_dat[[ivs]] %in% shapiro.test[i,ivs]),]
1593158001914:dv_non_normilty_ids <- c(identify_nonnormal(data = subdat, dv, wid = id, plot = F), dv_non_normilty_ids)
1593158001928:}
1593158001940:}
1593158002762:dv_dat <- dv_dat[!dv_dat[[id]] %in% dv_non_normilty_ids, ]
1593158004597:dv_dat
1593158136151:dv_non_normilty_ids
1593158161667:which(dv_non_normilty_ids)
1593158165715:dv_non_normilty_ids
1593158201785:dat[[dv]]
1593158210596:dat[[id]]
1593158217242:which(dat[[id]] %in% dv_non_normilty_ids)
1593158222121:dat[which(dat[[id]] %in% dv_non_normilty_ids),]
1593158289313:dat <- group_by(data, !!!syms(ivs))
1593158289839:outliers <- getOutliers(data = dat, dvs, ivs)
1593158290681:lapply(dvs, FUN = function(dv) {
1593158290705:dv_outliers <- outliers[which(outliers$variable == dv), ]
1593158290719:dv_dat <- dat[!dat[[id]] %in% dv_outliers[[id]],]
1593158290737:dv_non_normilty_ids <- c()
1593158290749:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593158290762:for (i in seq(1,nrow(shapiro.test))) {
1593158290777:if (shapiro.test[i,]$p < 0.05) {
1593158290790:subdat <- dv_dat[(dv_dat[[ivs]] %in% shapiro.test[i,ivs]),]
1593158290803:dv_non_normilty_ids <- c(identify_nonnormal(data = subdat, dv, wid = id, plot = F), dv_non_normilty_ids)
1593158290815:}
1593158290829:}
1593158290845:dv_dat <- dv_dat[!dv_dat[[id]] %in% dv_non_normilty_ids, ]
1593158290863:list(data = dv_dat, raw_data = dat, outliers = dv_outliers
1593158290876:, non.normality = dat[which(dat[[id]] %in% dv_non_normilty_ids),])
1593158290889:})
1593158396648:dvs
1593158445975:list(dvs)
1593158454840:as.list(dvs)
1593158470890:names(as.list(dvs)) <- dvs
1593158524880:ldvs <- as.list(dvs)
1593158525491:names(ldvs) <- dvs
1593158527970:ldvs
1593169571648:?navbarMenu
1593169695443:?navbarMenu
1593169756413:runApp()
1593169781771:runApp()
1593169844429:?navbarPage
1593170077478:?tabPanelset
1593170080439:?tabPanelSet
1593170086942:?tabsetPanel()
1593170201563:?navbarPage
1593170265581:?tabsetPanel
1593171072082:?tabsetPanel
1593171502613:?tabPanel
1593171619457:?sidebarLayout
1593171781570:?tabsetPanel
1593171990777:runApp()
1593172003626:runApp()
1593172038144:runApp()
1593172075050:?sidebarLayout
1593172169998:runApp()
1593172505957:runApp()
1593173201892:?fileInput
1593173242830:?tabsetPanel
1593173708346:?verticalLayout
1593173937462:runApp()
1593174027412:runApp()
1593174090216:runApp()
1593174156789:runApp()
1593174337641:runApp()
1593174435627:runApp()
1593174507096:runApp()
1593174540961:runApp()
1593174651633:runApp()
1593174721636:runApp()
1593174769389:runApp()
1593174906935:runApp()
1593174954430:runApp()
1593175039413:runApp()
1593175069067:runApp()
1593175126428:runApp()
1593175200824:runApp()
1593175229367:runApp()
1593175251182:runApp()
1593175286207:runApp()
1593175394480:runApp()
1593175552790:runApp()
1593175582186:runApp()
1593175713044:?sidebarPanel
1593175828436:runApp()
1593175907488:runApp()
1593176012462:runApp()
1593176072723:runApp()
1593176118530:runApp()
1593176155014:runApp()
1593176191800:runApp()
1593176227303:runApp()
1593176257285:runApp()
1593176333903:runApp()
1593176355580:runApp()
1593176480685:runApp()
1593176513779:runApp()
1593176531725:runApp()
1593176584754:runApp()
1593176853336:runApp()
1593176911115:runApp()
1593176926936:runApp()
1593176988866:runApp()
1593177079746:runApp()
1593177219060:runApp()
1593177353399:runApp()
1593177392775:runApp()
1593177439425:runApp()
1593177515438:?navbarPage
1593177577526:runApp()
1593177684748:?fluidPage
1593177903211:source('common/df2DT.R')
1593178044721:runApp()
1593178066854:runApp()
1593178107579:runApp()
1593180093588:runApp()
1593181336144:runApp()
1593181369287:runApp()
1593181470873:runApp()
1593181529956:NS
1593181562702:runApp()
1593181731967:runApp()
1593181779256:runApp()
1593181865856:runApp()
1593181939089:runApp()
1593181957679:runApp()
1593181999009:runApp()
1593182024926:runApp()
1593182051758:runApp()
1593182199031:runApp()
1593182262239:runApp()
1593182296120:runApp()
1593182338561:runApp()
1593182365883:runApp()
1593182389283:runApp()
1593182462134:runApp()
1593182822788:runApp()
1593183093392:?t_test
1593183402183:runApp()
1593183521558:runApp()
1593183571466:runApp()
1593183846248:data <- read_csv('data/fss.csv')
1593183865315:is.numeric(colnames(data))
1593183882684:is.numeric(data$colnames(data))
1593183896760:is.numeric(data)
1593183907087:is.numeric(data$media)
1593183978299:sapply(colnames(data), FUN = function(x) is.numeric(data[[x]]))
1593184027595:sapply(colnames(data), FUN = function(x) ifelse(is.numeric(data[[x]]) x))
1593184034203:sapply(colnames(data), FUN = function(x) ifelse(is.numeric(data[[x]]), x))
1593184056983:sapply(colnames(data), FUN = function(x) ifelse(is.numeric(data[[x]]), x, NA))
1593184118391:sapply(colnames(data), FUN = function(x) is.numeric(data[[x]])))
1593184120385:sapply(colnames(data), FUN = function(x) is.numeric(data[[x]]))
1593184128446:sapply(colnames(data), FUN = is.numeric(data[[x]]))
1593184148907:colnames(data)[sapply(colnames(data), FUN = function(x) is.numeric(data[[x]]))]
1593184286651:runApp()
1593184387344:runApp()
1593184445684:runApp()
1593184498162:?verticalLayout
1593184907772:?selectInput
1593184997352:?diff
1593185010426:?setdiff
1593185207153:runApp()
1593185374164:wants <- c('plotly','dplyr','rstatix','readr')
1593185374377:has <- wants %in% rownames(installed.packages())
1593185374602:if (any(!has)) install.packages(wants[!has])
1593185375152:options(scipen = 999)
1593185375935:library(plotly)
1593185376146:library(readr)
1593185376376:library(dplyr)
1593185376766:library(rstatix)
1593185377163:fss <- read_csv("data/fss.csv")
1593185380248:participants <- read_csv("data/participants.csv")
1593185380785:dat <- merge(participants, fss, by="UserID")
1593185399650:write_csv(dat, 'data/fss.csv')
1593185417889:runApp()
1593185731941:?checkboxInput
1593185850111:runApp()
1593186137257:runApp()
1593186308201:?verticalLayout
1593186407287:runApp()
1593186726804:lapply(input$dvsInput, FUN = function(dv) {
1593186726819:dv
1593186726833:})
1593186740582:lapply(c("sd","dfd","dff"), FUN = function(dv) {
1593186740598:dv
1593186740611:})
1593186943841:runApp()
1593186992518:runApp()
1593187052510:runApp()
1593188007856:?tabPanel
1593188240340:runApp()
1593188982636:runApp()
1593189269650:source('common/df2DT.R')
1593189269819:source('modules/getTTest.R')
1593189269969:source('modules/getOutliers.R')
1593189494137:?renderDataTable
1593189618394:runApp()
1593189647702:runApp()
1593189706249:runApp()
1593189855431:?DT::datatable()
1593189898243:runApp()
1593189952225:runApp()
1593189986011:runApp()
1593190167033:runApp()
1593191190396:?levene.test
1593191271755:runApp()
1593191308558:runApp()
1593191616400:source('modules/getOutliers.R')
1593191702608:runApp()
1593194135524:runApp()
1593194196180:runApp()
1593194245971:runApp()
1593194470804:fss <- read_csv("data/fss.csv")
1593194471004:participants <- read_csv("data/participants.csv")
1593194471250:dat <- merge(participants, fss, by="UserID")
1593194471462:write_csv(dat, 'data/fss.csv')
1593194481909:fss <- read_csv("data/fss.csv")
1593194482163:participants <- read_csv("data/participants.csv")
1593194482406:dat <- merge(participants, fss, by="UserID")
1593194485005:dat$cenario <- factor(dat$cenario)
1593194524945:car::Boxplot(media~cenario, dat)
1593194568443:a <- car::Boxplot(media~cenario, dat)
1593194569268:a
1593194590852:car::Boxplot(media~cenario, dat)
1593194603333:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593194603351:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593194605055:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593194605669:print(p)
1593194791871:?ggplotly
1593195752503:print(p)
1593195756152:p <- ggplot(dat, aes(class, hwy))
1593195757454:print(p)
1593195779715:p <- ggplot(dat, aes("cenario", "media"))
1593195780395:print(p)
1593195801520:p <- ggplot(dat, aes(cenario, media))
1593195802317:print(p)
1593195847200:p <- ggplot(dat, aes(cenario, media))
1593195848048:p + geom_boxplot()
1593195858219:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot()
1593195859024:print(p)
1593195879461:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot()
1593195880185:ggplotly(p)
1593195891705:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot()
1593195897940:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot()
1593195898771:p
1593195901134:ggplotly(p)
1593195957132:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot(fill = "white", colour = "#3366FF")
1593195961141:print(p)
1593195967239:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot(fill = "white", colour = "#3366FF")
1593195967471:ggplotly(p)
1593196054431:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
1593196057137:ggplotly(p)
1593196116998:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot()
1593196117892:p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
1593196124446:ggplotly(p)
1593196132849:p <- ggplot(dat, aes(cenario, media)) + geom_boxplot()
1593196134276:p <- p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
1593196136276:ggplotly(p)
1593196161848:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196162748:p <- p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
1593196163414:ggplotly(p)
1593196174876:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196175159:p <- p + geom_boxplot(outlier.colour = "red", outlier.shape = 5)
1593196175557:ggplotly(p)
1593196249331:?rstatix::identify_outliers
1593196528864:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196529292:p <- p + geom_boxplot(outlier.colour = "red", outlier.shape = 5)
1593196529671:ggplotly(p)
1593196531932:print(p)
1593196542722:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196543288:p <- p + geom_boxplot(outlier.colour = "red", outlier.shape = 5)
1593196544609:print(p)
1593196546821:ggplotly(p)
1593196774476:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196774741:p <- p + geom_boxplot(outlier.colour = "red", outlier.shape = 5)
1593196775090:p <- p+geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
1593196776455:print(p)
1593196793414:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196793888:p <- p + geom_boxplot(outlier.colour = "red", outlier.shape = 5)
1593196795942:p <- p + geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)
1593196797788:print(p)
1593196816924:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196817149:p <- p + geom_boxplot(outlier.colour = "red", outlier.shape = 5)
1593196817383:p <- p + geom_text(aes(label = userID), na.rm = TRUE, hjust = -0.3)
1593196819580:print(p)
1593196829764:?ggplot
1593196873991:?geom_boxplot
1593196890732:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196891574:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 5)
1593196893223:print(p)
1593196896080:ggplotly(p)
1593196904776:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196905292:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593196906938:ggplotly(p)
1593196907191:print(p)
1593196916583:ggplotly(p)
1593196969329:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593196969677:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5, show.legend = T)
1593196971088:ggplotly(p)
1593196977812:print(p)
1593196990626:?geom_text
1593197082348:colnames(dat)
1593197088384:p <- ggplot(dat, aes(cenario, media))# + geom_boxplot()
1593197088729:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5, show.legend = T)
1593197089046:p <- p + geom_text(aes(label = UserID), na.rm = TRUE, hjust = -0.3)
1593197090133:print(p)
1593197097877:ggplotly(p)
1593197235392:p <- ggplot(dat, x="cenario", y="media"))# + geom_boxplot()
1593197236363:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593197241629:p <- ggplot(dat, x="cenario", y="media")# + geom_boxplot()
1593197246030:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593197249407:ggplotly(p)
1593197251714:print(p)
1593197256680:p <- ggplot(dat, x="cenario", y="media")# + geom_boxplot()
1593197267374:?ggplot2
1593197272213:p <- ggplot2(dat, x="cenario", y="media")# + geom_boxplot()
1593197494153:p <- ggplot2(dat)# + geom_boxplot()
1593197505741:p <- ggplot2(data = dat)# + geom_boxplot()
1593197510253:p <- ggplot(data = dat)# + geom_boxplot()
1593197512641:p <- p + geom_boxplot(x="cenario", y="media",outlier.colour = "red", outlier.size = 1.5)
1593197520866:ggplotly(p)
1593197599517:p <- ggplot(dat, aes(cenario, media))
1593197600462:p + geom_boxplot()
1593197615863:?aes
1593197638391:p <- ggplot(dat, aes(x = "cenario", y = "media"))
1593197638991:p <- p + geom_boxplot()
1593197641835:print(p)
1593197648362:p <- ggplot(dat, aes(x = "cenario", y = "media"))
1593197649191:p <- p + geom_boxplot()
1593197651375:p
1593197654868:ggplotly(p)
1593197697028:p <- ggplot(dat, aes(x = "cenario"))
1593197697979:p <- p + geom_boxplot()
1593197700354:p
1593197730412:p <- ggplot(dat, aes(cenario, media))
1593197731090:p <- p + geom_boxplot()
1593197733994:p
1593197750544:p <- ggplot(dat, aes(as.formula("cenario"), media))
1593197751659:p <- p + geom_boxplot()
1593197753602:p
1593197808830:p <- ggplot(dat, aes(!!!syms("cenario"), !!!syms("media")))
1593197813591:p <- ggplot(dat, aes(!!!syms("cenario"), !!!syms("media")))
1593197841125:x <- "cenario"
1593197841367:y <- "media"
1593197843216:p <- ggplot(dat, aes(!!!syms(x), !!!syms(y)))
1593197854636:x <- "cenario"
1593197854832:y <- "media"
1593197855458:p <- ggplot(dat, aes(syms(x), syms(y)))
1593197857195:p <- p + geom_boxplot()
1593197862558:p
1593197876188:p <- ggplot(dat, aes(!!!syms(x), !!!syms(y)))
1593197877585:p <- p + geom_boxplot()
1593197880610:p
1593197943882:p <- ggplot(dat, aes_string("cenario", "media"))
1593197944503:p <- p + geom_boxplot()
1593197946071:p
1593198002854:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198003377:p <- p + geom_boxplot()
1593198004858:p
1593198019314:ggplotly(p)
1593198049967:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198050479:p <- p + geom_boxplot(x="cenario", y="media",outlier.colour = "red", outlier.size = 1.5)
1593198051623:p <- p + geom_text(aes(label = UserID), na.rm = TRUE, hjust = -0.3)
1593198054958:print(p)
1593198070252:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198070896:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198072192:p
1593198089570:?geom_boxplot
1593198111392:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198112351:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5, show.legend=F)
1593198113785:p
1593198123651:ggplotly(p)
1593198134179:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198134556:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5, show.legend=F)
1593198137357:ggplotly(p)
1593198144042:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198144363:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5, show.legend=F)
1593198146108:ggplotly(p)
1593198147663:print(p)
1593198177601:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario", show.legend=F))
1593198178320:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198183463:print(p)
1593198186526:ggplotly(p)
1593198416133:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario", show.legend=F))
1593198416402:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198417159:p <- p + geom_label()
1593198420546:ggplotly(p)
1593198440335:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario", label="UserID"))
1593198440868:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198442259:p <- p + geom_label()
1593198444175:p
1593198450567:ggplotly(p)
1593198475019:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario", label="UserID"))
1593198475250:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198475483:p <- p + geom_text()
1593198477321:ggplotly(p)
1593198487958:print(p)
1593198516540:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198517013:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198517414:p <- p + geom_text()
1593198520039:print(p)
1593198531214:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario", label="UserID"))
1593198531469:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198531773:p <- p + geom_text()
1593198532967:ggplotly(p)
1593198534073:print(p)
1593198543362:ggplotly(p)
1593198567612:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario", label="UserID"))
1593198568171:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198570393:ggplotly(p)
1593198660054:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario", label="UserID"))
1593198660589:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198660843:p <- p + geom_text(position = "dodge")
1593198662103:print(p)
1593198667066:ggplotly(p)
1593198680809:ggplotly(p)
1593198953782:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198954113:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198954875:p <- p + geom_text(aes_string(label="UserId"), position = "dodge")
1593198957065:p
1593198964304:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1593198964491:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1593198965728:p <- p + geom_text(aes_string(label="UserID"), position = "dodge")
1593198967627:p
1593198973223:ggplotly(p)
1593198992833:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1593198992860:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593198993916:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593198997813:print(p)
1593199009461:p <- plot_ly(data=dat, type = "box", boxpoints = "all"#, jitter = 0.3
1593199009479:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593199010044:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593199010594:print(p)
1593199026783:p <- plot_ly(data=dat, type = "box", boxpoints = "outliers"#, jitter = 0.3
1593199026797:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1593199027530:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593199027972:print(p)
1593199058514:p <- plot_ly(data=dat, type = "box", boxpoints = "outliers"#, jitter = 0.3
1593199058533:, x="cenario", y=~media, color=~cenario, text=~UserID)
1593199059917:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593199060403:print(p)
1593199082178:p <- plot_ly(data=dat, type = "box", boxpoints = "outliers"#, jitter = 0.3
1593199082225:, x=as.formula("~cenario"), y=~media, color=~cenario, text=~UserID)
1593199082523:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1593199083090:print(p)
1593199465316:runApp()
1593199515808:runApp()
1593199642090:runApp()
1593200873947:?observeEvent
1593201765829:?choices
1593201775673:?selectInput
1593202097260:as.list("a","b","c")
1593202106435:as.list(c("a","b","c"))
1593202136085:names(as.list(c("a","b","c"))) <- c("a","b","c")
1593202152291:names(as.list(c("a","b","c"))) -> a
1593202153641:a
1593202176146:(a <- as.list(c("a","b","c")))
1593202182935:names(a <- as.list(c("a","b","c")))
1593202196736:names(a <- as.list(c("a","b","c")))
1593202207993:names((a <- as.list(c("a","b","c"))))
1593202936373:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593202956352:initData <- read_csv("data/fss.csv")
1593202983304:values <- list(
1593202983325:initData = read_csv("data/fss.csv")
1593202983342:)
1593202987514:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203028365:input <- list(
1593203028383:dvsInput = c('media','dimension3')
1593203028403:)
1593203077356:input <- list(
1593203077374:dvsInput = c('media','dimension3')
1593203077387:, ivsInput = c('cenario')
1593203077400:)
1593203081427:values <- list(
1593203081446:initData = read_csv("data/fss.csv")
1593203081464:)
1593203087725:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203106709:colnames(values$initData)
1593203124718:fss <- read_csv("data/fss.csv")
1593203130451:participants <- read_csv("data/participants.csv")
1593203142318:dat <- merge(participants, fss, by="UserID")
1593203150145:dat <- merge(participants, fss)
1593203154482:colnames(dat)
1593203174077:write(dat, 'data/fss.csv')
1593203187421:write_csv(dat, 'data/fss.csv')
1593203198545:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203204815:values <- list(
1593203204832:initData = read_csv("data/fss.csv")
1593203204846:)
1593203205198:input <- list(
1593203205215:dvsInput = c('media','dimension3')
1593203205232:, ivsInput = c('cenario')
1593203205246:)
1593203216866:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203231662:colnames(dat)
1593203253802:colnames(values$initData)
1593203269204:wrkt
1593203289678:View(values$initData)
1593203306798:source('modules/getOutliers.R')
1593203313437:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203336748:colnames(values$initData)
1593203348177:input <- list(
1593203348195:dvsInput = c('media','dimensao3')
1593203348212:, ivsInput = c('cenario')
1593203348230:)
1593203355972:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203357877:values$outliers
1593203361212:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203370429:outliers
1593203457862:write_csv(select(values$initData, -ends_with('.x'), -ends_with('.y')), 'data/fss.csv')
1593203487516:input <- list(
1593203487532:dvsInput = c('media','dimensao3')
1593203487546:, ivsInput = c('cenario')
1593203487561:)
1593203490685:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203492644:outliers
1593203819925:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203821974:outliers
1593203830391:values <- list(
1593203830410:initData = read_csv("data/fss.csv")
1593203830425:)
1593203831762:input <- list(
1593203831783:dvsInput = c('media','dimensao3')
1593203831798:, ivsInput = c('cenario')
1593203831810:)
1593203836538:outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593203838926:outliers
1593204294189:length(c(12,323))
1593204372249:input <- list(
1593204372266:idInput = c("UserID")
1593204372282:dvsInput = c('media','dimensao3')
1593204372295:, ivsInput = c('cenario')
1593204372306:)
1593204377073:input <- list(
1593204377090:idInput = c("UserID")
1593204377104:,dvsInput = c('media','dimensao3')
1593204377119:, ivsInput = c('cenario')
1593204377132:)
1593204391821:values$initData[[input$idInput]]
1593204434070:outlierIds <- input[[paste0('outliers',dv,'Input')]]
1593204456460:outlierIds = c("f46ef02e")
1593206016571:outlierIds
1593206023427:values$initData[[input$idInput]] %in% outlierIds
1593206069419:values$initData[values$initData[[input$idInput]] %in% outlierIds,]
1593206102685:values$outliers <- do.call(rbind, lapply(input$dvsInput, FUN = function(dv) {
1593206102703:outlierIds <- input[[paste0('outliers',dv,'Input')]]
1593206102718:if (length(outlierIds) > 0) {
1593206102734:return(
1593206102747:cbind(var = dv
1593206102761:, values$initData[values$initData[[input$idInput]] %in% outlierIds,]
1593206102773:, ))
1593206102786:}
1593206102800:}))
1593206107665:values$outliers <- getOutliers(values$initData, input$dvsInput, input$ivsInput)
1593206115671:values$outliers
1593206205721:cbind(var = dv
1593206205736:, values$initData[values$initData[[input$idInput]] %in% outlierIds,]
1593206205752:, is.oulier = NA, is.extreme = NA, obs = 'manual')
1593206216173:dv = 'media'
1593206217730:cbind(var = dv
1593206217745:, values$initData[values$initData[[input$idInput]] %in% outlierIds,]
1593206217758:, is.oulier = NA, is.extreme = NA, obs = 'manual')
1593207085262:values$outliers$var == dv
1593207091006:values$outliers
1593207103844:which(values$outliers$var == dv)
1593207136307:outliers[[input$idInput]]
1593207147902:outliers[[input$idInput]][which(values$outliers$var == dv)]
1593207149167:outlierIds <- outliers[[input$idInput]][which(values$outliers$var == dv)]
1593207356514:source('modules/getNormalityCondition.R')
1593208109127:dat <- values$initData
1593209337513:values$outliers$var
1593209341410:values$outliers
1593209364317:values$outliers
1593209368249:values$outliers[[input$idInput]]
1593209384573:values$outliers[[input$idInput]][which(values$outliers$var == dv)]
1593209519689:input$idInput
1593209524565:values$initData[[input$idInput]]
1593210389258:dat
1593210398348:dv
1593210400836:wid
1593210418200:wid = "UserID"
1593210481609:identify_nonnormal(dat, dv, wid, to_remove = c(), plot = F)
1593214842400:identify_nonnormal(dat, dv, wid, to_remove = c(), plot = F)
1593215307138:dvs
1593215380768:outliers[[wid]]
1593215391116:outliers[[wid]][which(outliers$var == dv)]
1593215407071:identify_nonnormal(dat, dv, wid, to_remove = outlierIds, plot = F)
1593215460400:dat[[wid]]
1593215478199:dat[[wid]] %in% nonNormalityIds
1593215483155:nonNormalityIds <- identify_nonnormal(dat, dv, wid, to_remove = outlierIds, plot = F)
1593215487151:dat[[wid]] %in% nonNormalityIds
1593215496878:dat[dat[[wid]] %in% nonNormalityIds,]
1593215504413:nonNormalityIds <- identify_nonnormal(dat, dv, wid, to_remove = outlierIds, plot = F)
1593215513548:nonNormalityIds
1593216219568:outliers
1593216249312:dat[dat[[wid]] %in% nonNormalityIds,]
1593216268631:outliers
1593216448382:pdat <- dat[dat[[wid]] %in% nonNormalityIds,]
1593216450213:pdat
1593216485561:mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds  )
1593216509330:mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds  )
1593216540128:View(mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds))
1593216615003:mutate(pdat, var = dv, is.outlier = pdat[[wid]] %in% outlierIds)
1593216664045:mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds)
1593216673036:cbind(var = dv, mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds))
1593216744868:library(readr)
1593216745047:library(shiny)
1593216745225:library(plotly)
1593216745443:library(rstatix)
1593216745579:options(scipen = 999)
1593216745728:options(stringsAsFactors=F)
1593216745863:source('common/df2DT.R')
1593216746009:source('modules/getTTest.R')
1593216746413:source('modules/getOutliers.R')
1593216746839:source('modules/getNormalityCondition.R')
1593216756073:#.. update non normality data
1593216756091:values$nonNormality <- getNonNormality(dat, dvs, ivs, values$outliers)
1593216760087:dat <- values$initData
1593216760329:dvs <- input$dvsInput
1593216760539:wid <- input$idInput
1593216761564:ivs <- input$ivsInput
1593216768296:values$outliers <- getOutliers(dat, dvs, ivs)
1593216768608:#.. update outliers
1593216768623:if (input$checkOutliers) {
1593216768636:values$outliers <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593216768654:outlierIds <- input[[paste0('outliers',dv,'Input')]]
1593216768668:if (length(outlierIds) > 0) {
1593216768685:return(cbind(var = dv, dat[dat[[wid]] %in% outlierIds,]
1593216768698:, is.oulier = NA, is.extreme = NA, obs = 'manual'))
1593216768716:}
1593216768731:}))
1593216768747:}
1593216769759:#.. update non normality data
1593216769777:values$nonNormality <- getNonNormality(dat, dvs, ivs, values$outliers)
1593216780241:values$outliers <- getOutliers(dat, dvs, ivs)
1593216781886:#.. update outliers
1593216781905:if (input$checkOutliers) {
1593216781920:values$outliers <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593216781937:outlierIds <- input[[paste0('outliers',dv,'Input')]]
1593216781955:if (length(outlierIds) > 0) {
1593216781968:return(cbind(var = dv, dat[dat[[wid]] %in% outlierIds,]
1593216781982:, is.oulier = NA, is.extreme = NA, obs = 'manual'))
1593216781997:}
1593216782014:}))
1593216782029:}
1593216787409:values$outliers <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593216787428:outlierIds <- input[[paste0('outliers',dv,'Input')]]
1593216787445:if (length(outlierIds) > 0) {
1593216787460:return(cbind(var = dv, dat[dat[[wid]] %in% outlierIds,]
1593216787474:, is.oulier = NA, is.extreme = NA, obs = 'manual'))
1593216787486:}
1593216787502:}))
1593216795863:#.. update non normality data
1593216795884:values$nonNormality <- getNonNormality(dat, dvs, ivs, values$outliers)
1593216809088:#.. update non normality data
1593216809101:values$nonNormality <- getNonNormality(dat, dvs, ivs, wid, values$outliers)
1593216825319:values$nonNormality
1593217229831:source(paste0(getwd(),'/modules/getShapiroTest.R'))
1593217266044:shapiro.test <- getShapiroTest(data = dv_dat, dv, ivs)
1593217346583:dv
1593217353132:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593217353362:nonNormalityIds <- identify_nonnormal(dat, dv, wid, to_remove = outlierIds, plot = F)
1593217354577:pdat <- dat[dat[[wid]] %in% nonNormalityIds,]
1593217356683:pdat
1593217386467:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593217443847:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593217446381:outlierIds
1593217479568:dat[[wid]] %in% outlierIds
1593217494069:dat[!dat[[wid]] %in% outlierIds,]
1593217498236:dat
1593217508816:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593217509682:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593217539686:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593217540146:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593217540820:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593217542518:shapiro.test
1593217723666:c(outlierIds)
1593218435195:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593218435794:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593218436429:nonNormalityIds <- outlierIds
1593218438086:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593218442536:shapiro.test
1593218445030:for (i in seq(1,nrow(shapiro.test))) {
1593218445053:if (shapiro.test[i,]$p < 0.05) {
1593218445070:subdat <- pdat[(pdat[[ivs]] %in% shapiro.test[i,ivs]),]
1593218445084:nonNormalityIds <- c(identify_nonnormal(subdat, dv, wid, to_remove = outlierIds, plot = F), nonNormalityIds)
1593218445098:}
1593218445114:}
1593218448779:nonNormalityIds
1593218473076:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593218473318:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593218473867:nonNormalityIds <- outlierIds
1593218474493:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593218474996:for (i in seq(1,nrow(shapiro.test))) {
1593218475015:if (shapiro.test[i,]$p < 0.05) {
1593218475033:subdat <- pdat[(pdat[[ivs]] %in% shapiro.test[i,ivs]),]
1593218475051:nonNormalityIds <- c(identify_nonnormal(subdat, dv, wid, to_remove = outlierIds, plot = F), nonNormalityIds)
1593218475070:}
1593218475085:}
1593218490543:nonNormalityIds
1593218493198:pdat <- dat[dat[[wid]] %in% nonNormalityIds,]
1593218497071:cbind(var = dv, mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds))
1593218507075:pdat <- dat[dat[[wid]] %in% nonNormalityIds,]
1593218507778:cbind(var = dv, mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds))
1593218552348:getNonNormality <- function(dat, dvs, ivs, wid, outliers) {
1593218552375:return(do.call(rbind, lapply(dvs, FUN = function(dv) {
1593218552393:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593218552412:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593218552432:nonNormalityIds <- outlierIds
1593218552446:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593218552460:for (i in seq(1,nrow(shapiro.test))) {
1593218552479:if (shapiro.test[i,]$p < 0.05) {
1593218552492:subdat <- pdat[(pdat[[ivs]] %in% shapiro.test[i,ivs]),]
1593218552506:nonNormalityIds <- c(identify_nonnormal(subdat, dv, wid, to_remove = outlierIds, plot = F), nonNormalityIds)
1593218552521:}
1593218552537:}
1593218552558:pdat <- dat[dat[[wid]] %in% nonNormalityIds,]
1593218552574:cbind(var = dv, mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds))
1593218552589:})))
1593218552603:}
1593218559921:#.. update non normality data
1593218559943:values$nonNormality <- getNonNormality(dat, dvs, ivs, wid, values$outliers)
1593218572666:View(values$nonNormality)
1593218593507:values$outliers <- getOutliers(dat, dvs, ivs)
1593218599570:#.. update non normality data
1593218599588:values$nonNormality <- getNonNormality(dat, dvs, ivs, wid, values$outliers)
1593218603848:View(values$nonNormality)
1593218691705:#.. update datas
1593218691726:lsdvs <- as.list(dvs); names(lsdvs) <- dvs
1593218692581:values$data <- lapply(lsdvs, FUN = function(dv) {
1593218692600:outlierIds <- values$outliers[[wid]][which(values$outliers$var == dv)]
1593218692620:nonNormalityIds <- values$nonNormality[[wid]][which(values$nonNormality$var == dv)]
1593218692636:return(dat[!dat[[wid]] %in% c(outlierIds, nonNormalityIds),])
1593218692651:})
1593218711146:View(values$data$media)
1593218723831:View(values$data$dimensao3)
1593218731411:View(values$data$media)
1593251835489:runApp()
1593251882806:runApp()
1593252195695:runApp()
1593252340616:runApp()
1593252564907:runApp()
1593252855739:runApp()
1593253163159:runApp()
1593253958650:runApp()
1593254081380:runApp()
1593254187197:runApp()
1593267927782:options(stringsAsFactors=F)
1593267935584:options(scipen = 999)
1593267935788:options(stringsAsFactors=F)
1593267935966:source('common/df2DT.R')
1593267936112:source('modules/outliers.R')
1593267936416:source('modules/getTTest.R')
1593267936976:source('modules/getNormalityCondition.R')
1593267941077:source('modules/getTTest.R')
1593267943582:source('modules/outliers.R')
1593267945097:source('modules/getTTest.R')
1593267945680:source('modules/getNormalityCondition.R')
1593267963715:source('modules/getNormalityCondition.R')
1593267980925:options(scipen = 999)
1593267981129:options(stringsAsFactors=F)
1593267981293:source('common/df2DT.R')
1593267981455:source('modules/outliers.R')
1593267981605:source('modules/getTTest.R')
1593267981953:source('modules/getNormalityCondition.R')
1593268760929:runApp()
1593269057866:runApp()
1593269303950:runApp()
1593269356312:runApp()
1593269471699:runApp()
1593269755160:runApp()
1593269792267:all(T, T)
1593271395682:runApp()
1593271445563:runApp()
1593271463307:runApp()
1593271488253:runApp()
1593271514163:runApp()
1593272121453:?navbarPage
1593272189763:?tabPanel
1593285676097:?k
1593285680384:?l []
1593285686036:?observe
1593289757928:runApp()
1593291947893:runApp()
1593292132515:runApp()
1593292209341:runApp()
1593292578233:runApp()
1593292638064:runApp()
1593292809446:runApp()
1593293092452:runApp()
1593293197681:runApp()
1593294776553:runApp()
1593296626558:runApp()
1593296710405:runApp()
1593296840228:runApp()
1593296984439:runApp()
1593297037978:runApp()
1593297205653:runApp()
1593297277905:runApp()
1593297357400:runApp()
1593297458439:runApp()
1593297534513:runApp()
1593297622154:runApp()
1593299276345:runApp()
1593299627126:summary(warnings())
1593299634628:warnings()
1593299694154:warnings()
1593299807790:?verbatimTextOutput
1593299906671:?warnings
1593299990708:runApp()
1593300017714:?warnings
1593300022845:warnings()
1593300031025:a <- warnings()
1593300045273:a$`cannot open file '/home/gcc/modules/getOutliers.R': No such file or directory`$``
1593300063989:a <- summary(warnings())
1593300066474:a
1593300073087:a$`cannot open file '/home/gcc/modules/getOutliers.R': No such file or directory`$encoding
1593300108138:last.warning
1593300125869:warnings()
1593300144964:as.character(warnings())
1593300160065:as.character(summary(warnings()))
1593300238960:tail(warnings())
1593300247130:tail(warnings(), 1)
1593300249105:tail(warnings(), 1)
1593300255488:a <- tail(warnings(), 1)
1593300258625:a$`cannot open file '/home/gcc/modules/getOutliers.R': No such file or directory`
1593300281109:a <- summary(warnings(), 1)
1593300282184:a
1593300289039:a$`cannot open file '/home/gcc/modules/getOutliers.R': No such file or directory`
1593300313288:as.character(warnings())
1593300569126:runApp()
1593300731944:runApp()
1593301600679:c(list(1), list(1,2,3))
1593301744490:c(NULL, list(12))
1593301876217:runApp()
1593302279911:runApp()
1593302383656:runApp()
1593302479421:runApp()
1593302592495:runApp()
1593302849321:runApp()
1593302887537:runApp()
1593303020652:runApp()
1593303071381:runApp()
1593303125868:runApp()
1593303324512:runApp()
1593303999184:count()
1593304006643:?findUnique
1593304041977:unique()
1593304045312:?unique
1593304133858:dat <- read_csv('data/fss.csv')
1593304154526:unique.data.frame(dat)
1593304233408:anyDuplicated(dat$UserID)
1593304239157:anyDuplicated(dat$cenario)
1593304323754:anyDuplicated(dat$cenario)
1593304352782:anyDuplicated(dat$media)
1593304360283:anyDuplicated(dat$dimensao9)
1593304582476:runApp()
1593305910301:initData <- dat
1593305949985:library(dplyr)
1593306071622:sapply(colnames(initData), function (x) anyDuplicated(initData[[x]]))
1593306086946:sapply(colnames(initData), function (x) anyDuplicated(initData[[x]]) == 0)
1593306123094:colnames(initData)[sapply(colnames(initData), function (x) anyDuplicated(initData[[x]]) == 0)]
1593306155801:sapply(colnames(initData), function (x) anyDuplicated(initData[[x]]) == 0)
1593306180650:choices <- colnames(initData)[sapply(colnames(initData), anyDuplicated(initData[[x]]) == 0)]
1593306240862:colnames(initData)[sapply(colnames(initData), function (x) anyDuplicated(initData[[x]]) == 2)]
1593306267328:unique(initDat$dimensao2)
1593306271067:unique(initData$dimensao2)
1593306317731:choices <- colnames(initData)[sapply(colnames(initData), function (x) length(unique(initData[[x]])) == 2)]
1593306319317:choices
1593306354769:runApp()
1593306799094:runApp()
1593307340656:library(rstatix)
1593307954334:?subset
1593309176509:library(DT)
1593309713155:runApp()
1593309718923:runApp()
1593309731247:runApp()
1593309828977:runApp()
1593309900228:runApp()
1593310260196:runApp()
1593310549868:?cohens_d
1593311304734:?t_test
1593311787887:?cohens_d
1593311954937:runApp()
1593312052427:runApp()
1593312256949:runApp()
1593312300420:?t_test
1593312353355:runApp()
1593312475862:runApp()
1593312536896:runApp()
1593312602033:runApp()
1593312836695:?t_test
1593312988361:runApp()
1593313052373:runApp()
1593313172853:as.logical(T)
1593313184978:as.logical("FALse")
1593313188915:as.logical("FALSE")
1593313280384:runApp()
1593313535405:?radioButtons
1593313645631:runApp()
1593313705412:?verticalLayout
1593313791158:runApp()
1593313967032:runApp()
1593314152389:runApp()
1593314238332:?selectInput
1593314272638:runApp()
1593314324595:?flowLayout
1593314428602:runApp()
1593314948808:runApp()
1593316188808:runApp()
1593317573601:runApp()
1593318036632:runApp()
1593318750276:runApp()
1593318800924:?fixedRow
1593318812195:?verticalLayout
1593318832666:?fixedRow
1593318908408:runApp()
1593318944620:?fixedRow
1593318983090:runApp()
1593319164829:runApp()
1593319168723:runApp()
1593319185909:runApp()
1593319297515:runApp()
1593319392990:round(12.12312, digits = -1)
1593319398014:round(12.12312, digits = 1)
1593319441376:runApp()
1593319672319:runApp()
1593319966173:runApp()
1593320209785:runApp()
1593320272572:runApp()
1593321154832:?numericInput()
1593321339351:runApp()
1593321636243:runApp()
1593321691266:runApp()
1593321835642:runApp()
1593321942478:#dat <- round(dat, digits = input$digits)
1593321942498:is.numeric(dat)
1593321942567:if (input$digits >= 0) {
1593321942586:#dat <- round(dat, digits = input$digits)
1593321942603:is.numeric(dat)
1593321942623:}
1593321949613:#dat <- round(dat, digits = input$digits)
1593321949635:is.numeric(dat$cenario
1593321949655:)
1593321982990:colnames(dat)
1593322017791:#dat <- round(dat, digits = input$digits)
1593322017810:sapply(colnames(dat), function(x) is.numeric(dat[[x]]) )
1593322044769:#dat <- round(dat, digits = input$digits)
1593322044788:colnames(dat)[sapply(colnames(dat), function(x) is.numeric(dat[[x]]) )]
1593322132324:runApp()
1593322311155:runApp()
1593322835068:runApp()
1593323600276:?tabsetPanel
1593323763978:runApp()
1593340427208:runApp()
1593340507906:runApp()
1593340532341:runApp()
1593340612437:runApp()
1593341030689:?splitLayout
1593341247437:?plotlyOutput
1593341465010:runApp()
1593341553201:runApp()
1593341613571:runApp()
1593342347156:runApp()
1593342625122:runApp()
1593343473124:runApp()
1593343732140:runApp()
1593344789724:?tabPanel
1593344912290:?radioButtons
1593345308136:runApp()
1593345639950:runApp()
1593350877152:runApp()
1593350880136:runApp()
1593350917161:runApp()
1593351029318:runApp()
1593351223369:runApp()
1593351780526:?tabsetPanel
1593351910971:runApp()
1593352411992:runApp()
1593353035049:?layout
1593353251524:runApp()
1593353489743:runApp()
1593353547876:runApp()
1593354018285:runApp()
1593357349147:?shapiro_test
1593362630789:runApp()
1593362643004:runApp()
1593362688468:runApp()
1593362882061:runApp()
1593363049385:runApp()
1593363140133:runApp()
1593367409717:?shapiro_test
1593367597746:runApp()
1593367705354:runApp()
1593370378024:runApp()
1593373629174:?car::qqPlot
1593373884138:dat
1593373912485:dat <- read_csv('data/fss.csv')
1593373941889:car::qqPlot(media~cenario, dat)
1593375189742:runApp()
1593375298832:runApp()
1593375358567:car::qqPlot()
1593375360685:car::qqPlot
1593375363587:?car::qqPlot
1593375667044:runApp()
1593377005060:runApp()
1593377217156:runApp()
1593377760844:runApp()
1593377832144:?shapiro_test
1593377930600:?qqPlot
1593378215767:runApp()
1593378270149:runApp()
1593378325147:pre_dat <- da
1593378326602:pre_dat <- dat
1593378347059:rownames(pre_dat) <- pre_dat$UserID
1593378351859:pre_dat
1593378370309:pre_dat <- as.data.frame(initData)
1593378376094:pre_dat <- as.data.frame(dat)
1593378397794:rownames(pre_dat) <- pre_dat$UserID
1593378400914:pre_dat
1593378407726:sformula <- paste(dv ,'~', paste0(ivs, collapse = "+"))
1593378418220:dv='media'
1593378427255:ivs =c('cenario')
1593378429432:sformula <- paste(dv ,'~', paste0(ivs, collapse = "+"))
1593378434012:car::qqPlot(as.formula(sformula), pre_dat)
1593378459997:runApp()
1593378542278:runApp()
1593379257327:?freq_table
1593379297698:runApp()
1593379423468:runApp()
1593379517805:dat
1593379543947:pre_dat
1593379610793:freq_table(pre_dat, vars = "cenario")
1593379633105:add_significance(shapiro_test(group_by(pre_dat, !!!syms(ivs)), vars=dv))
1593380100410:freq_table(pre_dat, cenario, UserID)
1593380313053:do.call(freq_table, list(pre_dat, "cenario", "UserID"))
1593380380058:as.list(c("aa", "dff"))
1593380607607:runApp()
1593381643228:!!!syms(ivs)
1593381656438:!!!syms("ivs")
1593381704772:?group_by
1593382099014:shapiro_test2 <- function(dat, dv, ivs) {
1593382099050:library(rstatix)
1593382099073:gdat <- do.call(group_by, c(list(dat), lapply(ivs, FUN = function(iv) !!!syms(iv))))
1593382099098:sdt <- add_significance(shapiro_test(gdat, vars=dv))
1593382099127:sdt <- merge(do.call(freq_table, c(list(dat), as.list(ivs))), sdt)
1593382099156:return(sdt)
1593382099181:}
1593382118366:shapiro_test2(dat, "media", c("cenario"))
1593382151659:dv
1593382156067:ivs
1593382162776:library(rstatix)
1593382163427:gdat <- do.call(group_by, c(list(dat), lapply(ivs, FUN = function(iv) !!!syms(iv))))
1593382171926:ivs
1593382182654:lapply(ivs, FUN = function(iv) !!!syms(iv))
1593382358043:gdat <- do.call(group_by, c(list(dat), list(!!!syms(ivs))))
1593382363154:gdat <- do.call(group_by, c(list(dat), list(!!syms(ivs))))
1593382369954:gdat <- do.call(group_by, c(list(dat), list(!!!syms(ivs))))
1593382376659:gdat <- do.call(group_by, c(list(dat), list(syms(ivs))))
1593382404535:?syms
1593382427646:?!!!
1593382432406:1
1593382661199:gdat <- group_by(dat, !!!syms(ivs))
1593382682965:library(rstatix)
1593382683283:gdat <- group_by(dat, !!!syms(ivs))
1593382683531:sdt <- add_significance(shapiro_test(gdat, vars=dv))
1593382684405:sdt <- merge(do.call(freq_table, c(list(dat), as.list(ivs))), sdt)
1593382692892:sdt
1593382918867:shapiro_test2 <- function(dat, dv, ivs) {
1593382918902:library(rstatix)
1593382918939:gdat <- group_by(dat, !!!syms(ivs))
1593382918970:sdt <- add_significance(shapiro_test(gdat, vars=dv))
1593382918996:sdt <- merge(do.call(freq_table, c(list(dat), as.list(ivs))), sdt)
1593382919019:return(sdt)
1593382919042:}
1593383024373:shapiro_test2 <- function(dat, dv, ivs) {
1593383024413:library(rstatix)
1593383024443:gdat <- group_by(dat, !!!syms(ivs))
1593383024472:sdt <- add_significance(shapiro_test(gdat, vars=dv))
1593383024502:sdt <- merge(do.call(freq_table, c(list(dat), as.list(ivs))), sdt)
1593383024533:return(sdt)
1593383024564:}
1593383142368:runApp()
1593387933786:library(DT)
1593387934008:library(plotly)
1593387934241:library(rstatix)
1593388035183:?levene_test
1593388104744:?subset
1593388244003:?levene_test
1593388305769:dv
1593388337559:ivs
1593388340663:levene_test(dat, as.formula(paste(dv, "~", paste0(ivs, collapse = "+"))))
1593388467074:leveneDat <- do.call(dvs, lapply(dvs, FUN = function(dv) {
1593388467092:dat <- subset(data, var == dv)
1593388467116:cbind(var = dv, levene_test(dat, as.formula(paste(dv, "~", paste0(ivs, collapse = "+")))))
1593388467135:}))
1593388502652:dvs = c("media","dimensao1","dimensao2")
1593388504503:leveneDat <- do.call(dvs, lapply(dvs, FUN = function(dv) {
1593388504523:dat <- subset(data, var == dv)
1593388504545:cbind(var = dv, levene_test(dat, as.formula(paste(dv, "~", paste0(ivs, collapse = "+")))))
1593388504567:}))
1593388532619:colnames(dat)
1593388546472:data <- dat
1593388549080:leveneDat <- do.call(dvs, lapply(dvs, FUN = function(dv) {
1593388549099:dat <- subset(data, var == dv)
1593388549115:cbind(var = dv, levene_test(dat, as.formula(paste(dv, "~", paste0(ivs, collapse = "+")))))
1593388549129:}))
1593389220228:runApp()
1593389334010:runApp()
1593389546483:runApp()
1593390161475:?get_summary_stats
1593390217556:get_summary_stats(group_by(dat, cenario))
1593390299671:get_summary_stats(group_by(dat[,c("cenario","media","UserID")], cenario))
1593390525810:?group_by_at
1593390610233:group_by_at(dat, vars(c("cenario", "UserID")))
1593390838944:runApp()
1593391409898:runApp()
1593391588240:?navbarMenu
1593392147104:runApp()
1593392451732:runApp()
1593392615884:runApp()
1593392971433:runApp()
1593393128434:?t.test()
1593393214124:runApp()
1593393332328:?navbarMenu
1593393555734:runApp()
1593393653176:runApp()
1593393729710:runApp()
1593394720304:?stat_pvalue_manual
1593395212897:library(DT)
1593395287390:?verticalLayout
1593395877003:runApp()
1593396642256:library(dplyr)
1593396643066:source(paste0(getwd(),'/common/df2DT.R'))
1593396706635:source(paste0(getwd(),'/modules/descriptiveStatistics.R'))
1593402952555:runApp()
1593403113497:runApp()
1593403345360:runApp()
1593403450246:runApp()
1593403536088:runApp()
1593405803211:?renderDataTable
1593407097417:runApp()
1593407115782:runApp()
1593407213905:runApp()
1593407324492:runApp()
1593407328331:runApp()
1593407431668:runApp()
1593407495683:source(paste0(getwd(),'/modules/df2Table.R'))
1593408191638:runApp()
1593408532269:runApp()
1593409011713:runApp()
1593409152479:runApp()
1593409417450:runApp()
1593409980793:runApp()
1593410845386:runApp()
1593410941208:?actionButton
1593410983014:runApp()
1593411147362:runApp()
1593411319515:runApp()
1593412121491:?selectInput
1593415353174:runApp()
1593415499307:runApp()
1593415667766:runApp()
1593417245732:runApp()
1593417360845:runApp()
1593417449772:runApp()
1593417619019:?actionButton
1593417650348:runApp()
1593417877687:runApp()
1593418039401:runApp()
1593418239112:runApp()
1593418500010:runApp()
1593418964705:runApp()
1593419138715:runApp()
1593419315842:runApp()
1593419633307:runApp()
1593419749887:hhj
1593419749912:xx
1593419749934:x
1593419749949:x
1593419749965:x
1593419749990:x
1593419750009:x
1593419823879:runApp()
1593420711628:?observe()
1593420777857:runApp()
1593420953182:c(T, T, F)
1593420963296:length(c(T, T, F))
1593421121774:runApp()
1593430532732:library(DT)
1593430532957:library(rstatix)
1593430533607:source(paste0(getwd(),'/modules/df2Table.R'))
1593431055026:runApp()
1593431855774:runApp()
1593432212143:runApp()
1593432854223:runApp()
1593433028773:?group_by_at
1593433342810:runApp()
1593434490782:runApp()
1593435504709:runApp()
1593435666602:runApp()
1593435787974:?checkboxInput
1593435934000:runApp()
1593440445058:runApp()
1593440880979:?ggplot2
1593440987197:?group_by_at
1593442304767:runApp()
1593442503164:runApp()
1593443083937:?checkboxInput
1593444252713:runApp()
1593444303273:data
1593444319650:df <- read_csv('data/fss.csv')
1593444323717:df
1593444366793:tt <- t_test(dat, sformula, alternative = input$alternative
1593444366812:, var.equal = as.logical(input$varequal), detailed = T)
1593444397281:tt <- t_test(data = df, media ~ cenario, detailed = T)
1593444403165:ez <- cohens_d(dat, sformula, var.equal = as.logical(input$varequal)
1593444403185:, hedges.correction = as.logical(input$hedgescorrection))
1593444428380:ez <- cohens_d(df, media ~ cenario, var.equal = F)
1593444434889:add_significance(merge(tt, ez))
1593444463549:values <- list(t.test = add_significance(merge(tt, ez)))
1593444472194:p <- ggboxplot(
1593444472213:df, x = "supp", y = "len", color = "supp", palette = "jco"
1593444472227:)
1593444504092:p <- ggboxplot(
1593444504111:df, x = "cenario", y = "media", color = "cenario", palette = "jco"
1593444504127:)
1593444509721:p + stat_pvalue_manual(values$t.test, label = "p", y.position = 35)
1593444512377:p
1593444540401:p <- ggboxplot(
1593444540418:df, x = "cenario", y = "media", color = "cenario", palette = "jco"
1593444540436:)
1593444542928:p
1593444568209:p <- ggboxplot(
1593444568227:df, x = "cenario", y = "media", color = "cenario", palette = "jco"
1593444568241:) + stat_pvalue_manual(values$t.test, label = "p", y.position = 35)
1593444568723:p
1593444585152:p <- ggboxplot(
1593444585172:df, x = "cenario", y = "media", color = "cenario", palette = "jco"
1593444585189:) + stat_pvalue_manual(values$t.test, label = "p")
1593444588028:p
1593444609558:p <- ggboxplot(
1593444609577:df, x = "cenario", y = "media", color = "cenario", palette = "jco"
1593444609594:) + stat_pvalue_manual(values$t.test, label = "p", y.position = max(df$media))
1593444610200:p
1593444947134:p <- ggboxplot(
1593444947151:df, x = "cenario", y = "media", color = "cenario", palette = "jco"
1593444947169:)
1593444947805:+ stat_pvalue_manual(values$t.test, tip.length = 0, label = "p", y.position = max(df$media))
1593444965273:p <- ggboxplot(
1593444965289:df, x = "cenario", y = "media", color = "cenario", palette = "jco"
1593444965303:)
1593444965934:p <- p + stat_pvalue_manual(values$t.test, tip.length = 0, label = "p", y.position = max(df$media))
1593444966570:p <- p + labs(subtitle = get_test_label(values$t.test, detailed = TRUE))
1593444967827:p
1593445004195:?get_test_label
1593445034542:p <- ggboxplot(
1593445034563:df, x = "cenario", y = "media", color = "cenario", palette = "jco"
1593445034581:)
1593445035075:p <- p + stat_pvalue_manual(values$t.test, tip.length = 0, label = "p", y.position = max(df$media))
1593445035328:p <- p + labs(subtitle = get_test_label(values$t.test))
1593445036152:p
1593445272872:bxp <- ggboxplot(
1593445272911:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("mean", "jitter")
1593445272927:)
1593445273580:bxp
1593445315483:bxp <- ggboxplot(
1593445315508:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("mean", "jitter")
1593445315526:, palette = "jco"
1593445315544:)
1593445316285:bxp
1593445442960:bxp <- ggboxplot(
1593445443016:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("jitter")
1593445443034:, palette = "jco"
1593445443046:)
1593445444420:bxp <- bxp + stat_pvalue_manual(values$t.test, tip.length = 0)
1593445466862:bxp <- ggboxplot(
1593445466881:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("jitter")
1593445466898:, palette = "jco"
1593445466912:)
1593445473685:bxp <- bxp + stat_pvalue_manual(values$t.test, tip.length = 0)
1593445478910:bxp
1593445553641:stat.test <- values$t.test %>% add_xy_position(x = "cenario")
1593445577652:?add_xy_position
1593445614284:stat.test <- add_xy_position(values$t.test, x = "cenario")
1593445652934:stat.test <- add_xy_position(values$t.test, x = "cenario")
1593445673968:stat.test <- add_xy_position(values$t.test, x = "cenario")
1593445803053:stat.test <- add_xy_position(values$t.test, x = "cenario")
1593445806849:stat.test <- add_xy_position(values$t.test, x = "group")
1593445814811:stat.test <- add_xy_position(values$t.test, x = "cenario")
1593445844801:stat.test <- add_xy_position(values$t.test, x = "cenario", formula = media~cenario)
1593445871315:stat.test <- add_xy_position(data=df, values$t.test, x = "cenario", formula = media~cenario)
1593445874224:stat.test
1593445901603:stat.test <- add_xy_position(data=df, values$t.test, x = "cenario", formula = media~cenario)
1593445904301:bxp <- ggboxplot(
1593445904318:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("jitter")
1593445904334:, palette = "jco"
1593445904351:)
1593445905461:bxp <- bxp + stat_pvalue_manual(values$t.test, tip.length = 0)
1593445916835:stat.test
1593445959704:stat.test <- add_xy_position(data=df, values$t.test, x = "cenario", formula = media~cenario)
1593445960259:bxp <- ggboxplot(
1593445960278:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("jitter")
1593445960294:, palette = "jco"
1593445960309:)
1593445960985:bxp <- bxp + stat_pvalue_manual(values$t.test, tip.length = 0)
1593445961966:bxp
1593445976294:stat.test <- add_xy_position(data=df, values$t.test, x = "cenario", formula = media~cenario)
1593445976773:bxp <- ggboxplot(
1593445976792:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("jitter")
1593445976815:, palette = "jco"
1593445976829:)
1593445977532:bxp <- bxp + stat_pvalue_manual(values$t.test, tip.length = 0, y.position = max(df$media))
1593445978193:bxp
1593446060200:stat.test <- add_xy_position(data=df, values$t.test, x = "cenario", formula = media~cenario)
1593446060504:bxp <- ggboxplot(
1593446060525:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("jitter")
1593446060541:, palette = "jco"
1593446060560:)
1593446061469:bxp <- bxp + stat_pvalue_manual(values$t.test, tip.length = 0, label = "p", y.position = max(df$media))
1593446070966:bxp <- bxp + labs(subtitle = get_test_label(stat.test , detailed = T))
1593446072068:bxp
1593446097477:p <- ggboxplot(
1593446097496:df, x = "cenario", y = "media", color = "cenario"
1593446097520:)
1593446098304:p <- p + stat_pvalue_manual(values$t.test, tip.length = 0, label = "p", y.position = max(df$media))
1593446098692:p <- p + labs(subtitle = get_test_label(values$t.test , detailed = T))
1593446101159:p
1593446116144:stat.test <- add_xy_position(data=df, values$t.test, x = "cenario", formula = media~cenario)
1593446116748:bxp <- ggboxplot(
1593446116770:df, x = "cenario", y="media", color="cenario", width = 0.5, add = c("jitter")
1593446116794:, palette = "jco"
1593446116816:)
1593446117110:bxp <- bxp + stat_pvalue_manual(values$t.test, tip.length = 0, label = "p", y.position = max(df$media))
1593446117714:bxp <- bxp + labs(subtitle = get_test_label(stat.test , detailed = T))
1593446118576:bxp
1593446423095:values <- list(tt=list("media" = t_test(df, media~cenario)))
1593446430621:values$tt$media
1593446516997:stat.test <- values$tt$media
1593446564439:stat.test <- add_significance(values$tt$media)
1593446565894:stat.test
1593446613454:stat.test <- add_significance(values$tt$media)
1593446614658:stat.test <- add_xy_position(stat.test, x = "group")
1593446616163:stat.test
1593446627597:stat.test <- add_significance(values$tt$media)
1593446628012:stat.test <- add_xy_position(stat.test, x = "cenario")
1593446629707:stat.test
1593446744762:stat.test <- add_significance(values$tt$media)
1593446745189:stat.test <- add_xy_position(stat.test, x = "cenario")
1593446746055:bxp <- ggboxplot(
1593446746079:df, x = "cenario", y = "media", color="cenario", width = 0.5, add = c("jitter")
1593446746097:)
1593446746922:bxp
1593446761695:stat.test <- add_significance(values$tt$media)
1593446761933:stat.test <- add_xy_position(stat.test, x = "cenario")
1593446762418:bxp <- ggboxplot(
1593446762437:df, x = "cenario", y = "media", color="cenario", width = 0.5, add = c("jitter"), palette = "jco"
1593446762455:)
1593446763026:bxp
1593446858635:stat.test <- add_significance(values$tt$media)
1593446858898:stat.test <- add_xy_position(stat.test, x = "cenario")
1593446859106:bxp <- ggboxplot(
1593446859127:df, x = "cenario", y = "media", color="cenario", width=0.5, add="jitter", palette="jco"
1593446859143:)
1593446859791:bxp <- bxp + stat_pvalue_manual(stat.test, tip.length = 0)
1593446860299:bxp
1593446897634:stat.test <- add_significance(values$tt$media)
1593446897916:stat.test <- add_xy_position(stat.test, x = "cenario")
1593446898275:bxp <- ggboxplot(
1593446898292:df, x = "cenario", y = "media", color="cenario", width=0.5, add="jitter", palette="jco"
1593446898309:)
1593446898983:bxp <- bxp + stat_pvalue_manual(stat.test, tip.length = 0)
1593446899218:bxp <- bxp + labs(subtitle = get_test_label(stat.test, detailed=T))
1593446899820:bxp
1593447455193:runApp()
1593447557324:runApp()
1593447692132:?renderPlot
1593447832210:?numericInput
1593447896396:runApp()
1593448051201:?stat_pvalue_manual
1593448069055:stat.test <- add_xy_position(add_significance(values$tt$media), x=iv)
1593448074759:iv="cenario"
1593448077537:stat.test <- add_xy_position(add_significance(values$tt$media), x=iv)
1593448080046:stat.test
1593448148348:runApp()
1593448235387:?ggboxplot
1593448729126:runApp()
1593449065731:stat.test
1593449187693:stat.test$group1
1593449230423:View(stat.test)
1593449360346:get_summary_stats(df)
1593449405396:get_summary_stats(group_by_at(df, vars("media")))
1593449430447:View(get_summary_stats(group_by_at(df, vars("media"))))
1593449467235:stat.test$group1
1593449483366:df
1593449551467:df[[dv]]
1593449557912:dv="media"
1593449563154:df[[dv]]
1593449611522:subset(df[[dv]], "cenario" = "gamificado")
1593449652433:df[[dv]][which(df[[iv]] == dv)]
1593449656848:dv
1593449679988:df[[dv]][which(df[[iv]] == stat.test$group1)]
1593449690191:mean(df[[dv]][which(df[[iv]] == stat.test$group1)])
1593449723674:stat.test
1593449815101:stat.test$group2
1593449845816:mean(df[[dv]][which(df[[iv]] == stat.test$group2)])
1593450063251:stat.test$p < 0.05
1593450492575:values$ez[[dv]]
1593450510625:ez <- cohens_d(dat, sformula, var.equal = as.logical(input$varequal)
1593450510645:, hedges.correction = as.logical(input$hedgescorrection))
1593450535483:ez <- cohens_d(dat, media ~ cenario, var.equal = F)
1593450540393:ez <- cohens_d(df, media ~ cenario, var.equal = F)
1593450546292:values$ez[[dv]] <- ez
1593450555576:values$ez[[dv]]
1593450612010:runApp()
1593450794680:runApp()
1593450836297:?round
1593450893072:runApp()
1593450975804:runApp()
1593451072934:runApp()
1593451275869:?renderPlotly
1593451331771:runApp()
1593451458630:?ggplotly
1593451495167:bxp
1593451500835:ggplotly(bxp)
1593451554198:runApp()
1593451625345:?renderPlotly()
1593451651851:runApp()
1593451703953:runApp()
1593451819364:?renderPlotly
1593451839709:?fixedPanel
1593451895150:runApp()
1593451967866:?ggplotly
1593452037020:?tabsetPanel
1593452068372:?ggplot
1593452199375:?renderPlot
1593452254580:?tabPanel
1593452263077:runApp()
1593452372262:runApp()
1593454011074:dat <- read_csv('data/fss.csv')
1593454131402:survey <- read_csv('raw-data/survey-0-fss.csv')
1593454141363:colnames(dat)
1593454147603:colnames(survey)
1593454200272:participants <- read_csv('raw-data/participants.csv')
1593454243020:mparticipants <- read_csv('data/participants.csv')
1593454257290:participants
1593454260827:mparticipants
1593454329525:fss <- read_csv("data/fss.csv")
1593454331512:fss
1593454375253:fss <- read_csv("data/fss.csv")
1593454375507:survey_fss <- read_csv("data/survey-fss.csv")
1593454376947:survey_fss
1593454401576:survey <- read_csv('raw-data/survey-0-fss.csv')
1593454403869:survey
1593454411695:participants <- read_csv('raw-data/participants.csv')
1593454413780:participants
1593454425046:mparticipants <- read_csv('data/participants.csv')
1593454427920:mparticipants
1593454479784:survey_fss <- read_csv("data/survey-fss.csv")
1593454481820:survey_fss
1593454491868:survey <- read_csv('raw-data/survey-0-fss.csv')
1593454499473:fss <- read_csv("data/fss.csv")
1593454500034:survey_fss <- read_csv("data/survey-fss.csv")
1593454508319:colnames(fss)
1593454513634:colnames(survey_fss)
1593454633176:fss <- read_csv("data/fss.csv")
1593454633452:survey_fss <- read_csv("data/survey-fss.csv")
1593454634019:qpj <- read_csv("data/qpj.csv")
1593454641274:View(qpj)
1593454645984:View(fss)
1593454788887:dat(merge(fss,qpj))
1593454801884:dat<- merge(fss,qpj)
1593454809134:View(dat)
1593454842936:dat <- merge(fss, qpj)
1593454899421:pdat <- select(dat, starts_with("UserID"), starts_with("realizacao"))
1593454901144:pdat
1593454907482:colnames(dat)
1593454958554:pdat <- select(dat, starts_with("UserID")
1593454958574:, starts_with("realizacao"),starts_with("social"),starts_with("imersao")
1593454958592:, starts_with("cenario"))
1593454961449:pdat
1593455008676:dat <- merge(fss, qpj)
1593455009206:pdat <- select(dat, starts_with("UserID")
1593455009224:, starts_with("realizacao"),starts_with("social"),starts_with("imersao")
1593455009240:, starts_with("cenario"), starts_with("media"), starts_with("dimensao")  )
1593455014023:pdat
1593455068845:write_csv(pdat, "data/fss-qpj.csv")
1593455102545:runApp()
1593456558105:?selectInput
1593456921850:anyDuplicated(c(1,2,3,4,5))
1593456924867:anyDuplicated(c(1,2,3,4,5,5))
1593456937336:anyDuplicated(c(1,1,2,3,4,5))
1593456949242:anyDuplicated(c(1,1,2,3,4,5,5,6,7,8,8,9))
1593457065193:runApp()
1593457211259:runApp()
1593457214586:runApp()
1593457249360:runApp()
1593457315768:?selectInput
1593457509501:length(c(1,2,3,4))
1593457565016:updateSelectInput()
1593457567998:?updateSelectInput()
1593457636842:c(1,2,3,4,5,6,7,8,9,10)[1:3]
1593457653151:runApp()
1593458064963:input = list(idInput = "row.pos", dvsInput=c("media","dimensao1","dimensao2"), ivsInput=c("realizacao","social","cenario"))
1593458078371:values$outliers <- getOutliers(initData, input$dvsInput, input$ivsInput)
1593458101706:values <- list(outliers = NULL)
1593458105190:values$outliers <- getOutliers(initData, input$dvsInput, input$ivsInput)
1593458141178:initData <- read_csv("data/fss-qpj.csv")
1593458144453:values$outliers <- getOutliers(initData, input$dvsInput, input$ivsInput)
1593458191276:source(paste0(getwd(),'/modules/df2Table.R'))
1593458191465:source(paste0(getwd(),'/modules/outliers.R'))
1593458191611:source(paste0(getwd(),'/modules/nonNormality.R'))
1593458191782:source(paste0(getwd(),'/modules/homogeneity.R'))
1593458206001:values$outliers <- getOutliers(initData, input$dvsInput, input$ivsInput)
1593458215418:View(values$outliers)
1593458229799:initData
1593458260932:data <- initData
1593458275199:dvs <- input$dvsInput
1593458282470:ivs <- input$ivsInput
1593458287041:dat <- group_by_at(data, vars(ivs))
1593458294305:dat
1593458308594:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593458308613:(outliers <- identify_outliers(dat, variable=dv))
1593458308633:if (nrow(outliers) > 0){
1593458308649:return(cbind(var = dv, outliers))
1593458308667:}
1593458308684:}))
1593458313514:dvs
1593458344933:identify_outliers(dat, variable = "media")
1593458367049:?identify_outliers
1593458381899:identify_outliers(dat)
1593458386974:identify_outliers(initData)
1593458405137:identify_outliers(initData,"dimension1")
1593458409840:identify_outliers(initData,"dimensao1")
1593458412917:identify_outliers(initData,"dimensao2")
1593458415610:identify_outliers(initData,"dimensao3")
1593458418947:identify_outliers(initData,"dimensao4")
1593458421038:identify_outliers(initData,"dimensao5")
1593458423306:identify_outliers(initData,"dimensao6")
1593458425707:identify_outliers(initData,"dimensao7")
1593458430358:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593458430376:(outliers <- identify_outliers(dat, variable=dv))
1593458430394:if (nrow(outliers) > 0){
1593458430412:return(cbind(var = dv, outliers))
1593458430428:}
1593458430445:}))
1593458508015:values$outliers <- c()# getOutliers(initData, input$dvsInput, input$ivsInput)
1593458508830:for (dv in input$dvsInput) {
1593458508847:selected <- values$outliers[[wid]][which(values$outliers$var == dv)]
1593458508863:updateSelectInput(session, paste0('outliers', dv, 'Input'), selected=selected)
1593458508880:}
1593458521410:wid="row.pos"
1593458523603:for (dv in input$dvsInput) {
1593458523622:selected <- values$outliers[[wid]][which(values$outliers$var == dv)]
1593458523638:updateSelectInput(session, paste0('outliers', dv, 'Input'), selected=selected)
1593458523655:}
1593458530728:selected <- values$outliers[[wid]][which(values$outliers$var == dv)]
1593458535917:dv
1593458542559:selected
1593458599032:values$nonNormality <- getNonNormality(initData, input$dvsInput, input$ivsInput, wid, values$outliers)
1593458606729:input$dvsInput
1593458610858:input$ivsInput
1593458613837:wid
1593458617294:values$outliers
1593458622501:values$nonNormality <- getNonNormality(initData, input$dvsInput, input$ivsInput, wid, values$outliers)
1593458632910:initData
1593458658212:shapiro_test2 <- function(dat, dv, ivs) {
1593458658231:gdat <- group_by_at(dat, vars(ivs))
1593458658250:sdt <- add_significance(shapiro_test(gdat, vars=dv))
1593458658270:sdt <- merge(do.call(freq_table, c(list(dat), as.list(ivs))), sdt)
1593458658286:return(sdt)
1593458658303:}
1593458660743:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593458662514:source(paste0(getwd(),'/modules/df2Table.R'))
1593458664384:normalityTestText <- "
1593458664404:<p><b>Teste de normalidade</b>:
1593458664470:Para efetuar teste paramétricos, se a amostra é suficientemente grande (pelo menos 30 observações),
1593458664488:a distribuição da média precissa apenas ter uma distribuição <i>aproximadamente</i> normal, não
1593458664507:necessáriamente estritamente normal. Em amostras de tamanho pequeno, a abordagem para seleção de dados
1593458664526:deve ser proveniente de uma distribuição normal através de um gráfico Q-Q.
1593458664546:</p>
1593458664568:<ul>
1593458664585:<li> Hipótese nula
1593458664603:(<img src=\"https://latex.codecogs.com/png.latex?\\dpi{100}&space;H_{null}\" title=\"H_{null}\" />):
1593458664620:Os dados são provenientes de uma distribuição normal.
1593458664638:</li>
1593458664656:<li> Hipótese alternativa
1593458664676:(<img src=\"https://latex.codecogs.com/png.latex?\\dpi{100}&space;H_{alt}\" title=\"H_{alt}\" />):
1593458664694:Os dados são provenientes de uma distribuição não normal.
1593458664729:</li>
1593458664762:</ul>
1593458664789:"
1593458665642:shapiro_test2 <- function(dat, dv, ivs) {
1593458665665:gdat <- group_by_at(dat, vars(ivs))
1593458665686:sdt <- add_significance(shapiro_test(gdat, vars=dv))
1593458665705:sdt <- merge(do.call(freq_table, c(list(dat), as.list(ivs))), sdt)
1593458665722:return(sdt)
1593458665742:}
1593458665997:getShapiroTest <- function(data, dvs, ivs) {
1593458666023:dat <- group_by_at(data, vars(ivs))
1593458666046:return(
1593458666066:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593458666084:shapiro <- shapiro_test(dat, vars=dv)
1593458666103:if (nrow(shapiro) > 0) return(shapiro)
1593458666121:}))
1593458666157:)
1593458666178:}
1593458675639:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593458689686:outliers = NULL
1593458691860:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593458694422:outlierIds
1593458696261:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593458710106:dat <- initData
1593458712745:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593458713330:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593458715713:pdat
1593458724475:dat[[wid]] %in% outlierIds
1593458726651:!dat[[wid]] %in% outlierIds
1593458731633:dat[[wid]]
1593458736407:dat
1593458739742:wid
1593458749413:wid="UserID"
1593458751990:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593458753132:nonNormalityIds <- outlierIds
1593458757290:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593458788918:pdat
1593458796588:data=pdat
1593458797858:dv
1593458799846:ivs
1593458815816:dat <- group_by_at(data, vars(ivs))
1593458818189:dat
1593458833616:shapiro <- shapiro_test(dat, vars=dv)
1593458838233:dv
1593458842579:dat
1593458877109:?shapiro.test()
1593458925101:?shapiro_test
1593459033656:shapiro <- shapiro_test(dat, vars=dv)
1593459212507:runApp()
1593459285371:runApp()
1593459367897:?anova_test
1593459430450:anova_test(initData, as.formula("media ~ realizacao+social+cenario"))
1593459648124:anova_test(initData, as.formula("media ~ realizacao+social+cenario"), detailed = T)
1593459687106:anova_test(initData, as.formula("media ~ realizacao+social+cenario"), detailed = T, type = 3)
1593459694661:anova_test(initData, as.formula("media ~ realizacao+social+cenario"), detailed = T, type = 2)
1593459848819:anova_test(initData, as.formula("media ~ realizacao+social+cenario"), detailed = T, type = 3)
1593460031229:runApp()
1593460404692:runApp()
1593460454152:runApp()
1593460555457:runApp()
1593460967015:?anova_test
1593461438618:anova_test()
1593461442501:?anova_test
1593461561312:runApp()
1593461714263:runApp()
1593461835191:runApp()
1593463308174:runApp()
1593463381078:?anova_test
1593464017725:runApp()
1593464148284:runApp()
1593464201862:runApp()
1593464305077:runApp()
1593464514320:runApp()
1593464604219:runApp()
1593466070147:library(DT)
1593466070398:library(plotly)
1593466070637:library(rstatix)
1593466071200:library(emmeans)
1593466937690:runApp()
1593467747456:df
1593467753938:source('~/modules/hypothesisAnova.R', echo=TRUE)
1593467756014:dat
1593467780261:data <- as.data.frame(dat)
1593467782887:data
1593467934489:dat <- group_by_at(data, vars(c("social","realizacao")))
1593467959218:pwc <- emmeans_test(dat, media ~ cenario, p.adjust.method = "bonferroni")
1593467961671:pwc
1593467983209:pwc <- emmeans_test(dat, media ~ cenario, p.adjust.method = "bonferroni", detailed = T)
1593467985697:pwc
1593468118710:?emmeans_test
1593469602089:?selectInput
1593470514833:?quarters
1593470528042:?quantile
1593470579979:quantile(dat$imersao)
1593470588367:quantile(dat$social)
1593470646901:boxplot(dat$social)
1593470712118:quantile(dat$realizacao)
1593470721364:quantile(dat$realizacao)[2]
1593470747708:dat$realizacao < quantile(dat$realizacao)[1]
1593470759851:dat$realizacao[dat$realizacao < quantile(dat$realizacao)[1]]
1593470762077:dat$realizacao[dat$realizacao < quantile(dat$realizacao)[2]]
1593470767263:dat$realizacao[dat$realizacao < quantile(dat$realizacao)[3]]
1593470776692:dat$realizacao[dat$realizacao < quantile(dat$realizacao)[4]]
1593470780166:dat$realizacao[dat$realizacao < quantile(dat$realizacao)[5]]
1593470858044:dat$realizacao[dat$realizacao > quantile(dat$realizacao)[''] && dat$realizacao < quantile(dat$realizacao)[2]]
1593470862853:dat$realizacao[dat$realizacao > quantile(dat$realizacao)[1] && dat$realizacao < quantile(dat$realizacao)[2]]
1593470873363:dat$realizacao[dat$realizacao > quantile(dat$realizacao)[1] & dat$realizacao < quantile(dat$realizacao)[2]]
1593470883747:dat$realizacao[dat$realizacao > quantile(dat$realizacao)[2] & dat$realizacao < quantile(dat$realizacao)[3]]
1593470903880:dat$realizacao[dat$realizacao > quantile(dat$realizacao)[3] & dat$realizacao < quantile(dat$realizacao)[4]]
1593470914778:dat$realizacao[dat$realizacao > quantile(dat$realizacao)[4] & dat$realizacao < quantile(dat$realizacao)[5]]
1593470930303:dat$realizacao[dat$realizacao > quantile(dat$realizacao)[5] & dat$realizacao < quantile(dat$realizacao)[6]]
1593470943466:dat$realizacao[dat$realizacao >= quantile(dat$realizacao)[1] & dat$realizacao < quantile(dat$realizacao)[2]]
1593470954494:dat$realizacao[dat$realizacao >= quantile(dat$realizacao)[2] & dat$realizacao < quantile(dat$realizacao)[3]]
1593470964363:dat$realizacao[dat$realizacao >= quantile(dat$realizacao)[3] & dat$realizacao < quantile(dat$realizacao)[4]]
1593470984108:dat$realizacao[dat$realizacao >= quantile(dat$realizacao)[4] & dat$realizacao <= quantile(dat$realizacao)[5]]
1593471270027:boxplot(dat$realizacao)
1593471288723:bx <- boxplot(dat$realizacao)
1593471294107:bx$group
1593471298351:bx$stats
1593471308682:bx$conf
1593471314163:bx$names
1593471339159:quantile(dat$realizacao)
1593471493744:2 < quantile(dat$realizacao)[2]
1593471504090:2 > quantile(dat$realizacao)[2]
1593471846314:iv
1593471962557:iv = "realizacao"
1593471969485:is.numeric(dat[[iv]])
1593472012724:quantile(dat[[iv]])
1593472079157:quantiles <- quantile(dat[[iv]])
1593472305464:2 =< 2
1593472309922:(2 =< 2)
1593472316194:(2 <= 2)
1593472343694:quantiles[2]
1593472403633:quantiles[2]
1593472410539:quantiles[[2]]
1593472779897:?checkboxInput
1593472796570:runApp()
1593472965397:input$ivsInput
1593472969963:dat
1593472972857:# ..
1593472972875:for (iv in input$ivsInput) {
1593472972894:if (is.numeric(dat[[iv]])) {
1593472972911:if (input$ivsNumAsClass) {
1593472972927:quantiles <- quantile(dat[[iv]])
1593472972942:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593472972960:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593472972978:})
1593472972993:}
1593472973008:}
1593472973041:}
1593472992390:input$ivsNumAsClass = T
1593472995840:# ..
1593472995859:for (iv in input$ivsInput) {
1593472995876:if (is.numeric(dat[[iv]])) {
1593472995897:if (input$ivsNumAsClass) {
1593472995915:quantiles <- quantile(dat[[iv]])
1593472995942:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593472995957:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593472995973:})
1593472995988:}
1593472996003:}
1593472996025:}
1593473003300:dat
1593473032624:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593473034571:sformula
1593473038236:aov <- anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593473039915:aov
1593473042791:aov <- anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593473051400:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593473052861:aov <- anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593473059343:colnames(dat)
1593473064942:sformula
1593473082571:aov <- anova_test(dat, sformula, detailed=T)
1593473109812:dat <- as.data.frame(dat)
1593473112668:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593473114601:sformula
1593473124453:aov <- anova_test(dat, sformula)
1593473132162:aov <- anova_test(dat, sformula, detailed = T)
1593473133982:aov
1593473154497:dat <- group_by_at(data, vars(c("social","realizacao")))
1593473157545:pwc <- emmeans_test(dat, media ~ cenario, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593473168522:pwc <- emmeans_test(dat, media ~ cenario, detailed = T)
1593473170932:pwc
1593473201193:dat <- as.data.frame(subset(data, var == dv))
1593473211818:dat
1593473226263:dat<- as.data.frame(dat)
1593473228344:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593473235097:aov <- anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593473240338:aov
1593473268434:dat <- group_by_at(dat, vars(c("social","realizacao")))
1593473294758:pwc <- emmeans_test(dat, media ~ cenario, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593473298246:pwc
1593473382977:ivs
1593473401456:dat <- as.data.frame(dat)
1593473426766:gdat <- group_by_at(dat, vars(ivs))
1593473429126:gdat
1593473504413:input$indVariable = "cenario"
1593473516136:setdiff(ivs, input$indVariable)
1593473520391:gdat <- group_by_at(dat, vars(setdiff(ivs, input$indVariable)))
1593473527616:pwc <- emmeans_test(dat, media ~ cenario, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593473536776:dv
1593473549489:gdat
1593473704276:dv
1593473706323:sformula <- as.formula(paste(dv, "~", input$indVariable))
1593473715787:pwc <- emmeans_test(dat, sformula, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593473718313:pwc
1593473852570:get_emmeans(pwc)
1593473938323:?get_emmeans
1593473965151:pwc <- emmeans_test(dat, sformula, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593473966568:emm <- get_emmeans(pwc, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593473985084:input$pairwiseCompAdjustmethod
1593473997805:input$pairwiseCompAdjustmethod <- "bonferroni"
1593474000944:sformula <- as.formula(paste(dv, "~", input$indVariable))
1593474001286:pwc <- emmeans_test(dat, sformula, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593474001720:emm <- get_emmeans(pwc, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593474004800:pwc
1593474009794:input$pairwiseCompAdjustmethod
1593474035239:?get_emmeans
1593474066742:pwc <- emmeans_test(dat, sformula, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593474067159:emm <- get_emmeans(pwc)
1593474070295:emm
1593474142401:pwc <- pwc %>% add_xy_position(x = "treatment")
1593474154924:pwc <- pwc %>% add_xy_position(x = "cenario")
1593474214390:ivs
1593474229512:bxp <- bxp + stat_pvalue_manual(
1593474229531:pwc, color = "cenario", linetype = "realizacao", hide.ns = TRUE,
1593474229547:tip.length = 0, step.increase = 0.1, step.group.by = "social"
1593474229561:) + labs(
1593474229574:subtitle = get_test_label(res.aov, detailed = TRUE),
1593474229591:caption = get_pwc_label(pwc)
1593474229604:)
1593474247791:gdat
1593474257923:bxp <- bxp + stat_pvalue_manual(
1593474257944:pwc, color = "cenario", linetype = "social", hide.ns = TRUE,
1593474257967:tip.length = 0, step.increase = 0.1, step.group.by = "realizacao"
1593474257981:) + labs(
1593474257994:subtitle = get_test_label(res.aov, detailed = TRUE),
1593474258012:caption = get_pwc_label(pwc)
1593474258026:)
1593474289723:pwc <- pwc %>% add_xy_position(x = "cenario")
1593474290512:bxp <- bxp + stat_pvalue_manual(
1593474290533:pwc, color = "cenario", linetype = "social", hide.ns = TRUE,
1593474290549:tip.length = 0, step.increase = 0.1#, step.group.by = "realizacao"
1593474290563:) + labs(
1593474290578:subtitle = get_test_label(res.aov, detailed = TRUE),
1593474290595:caption = get_pwc_label(pwc)
1593474290609:)
1593474300369:pwc <- pwc %>% add_xy_position(x = "cenario")
1593474300829:bxp <- bxp + stat_pvalue_manual(
1593474300849:pwc, color = "cenario", linetype = "social", hide.ns = TRUE,
1593474300868:tip.length = 0, step.increase = 0.1#, step.group.by = "realizacao"
1593474300885:) + labs(
1593474300902:#subtitle = get_test_label(res.aov, detailed = TRUE),
1593474300919:caption = get_pwc_label(pwc)
1593474300934:)
1593474319588:pwc <- pwc %>% add_xy_position(x = "cenario")
1593474322392:pwc
1593476125631:emm
1593476200455:ivs
1593476204071:dv
1593476218160:dvs
1593476250806:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476250825:emmeans_test(dat, as.formula(paste(dv, "~", iv))
1593476250840:, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593476250856:}))
1593476254009:pwc_df
1593476316025:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476316045:cbind(
1593476316061:iv = iv
1593476316090:, emmeans_test(dat, as.formula(paste(dv, "~", iv))
1593476316110:, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593476316128:)
1593476316147:}))
1593476321348:pwc_df
1593476350336:View(dat)
1593476372700:dat
1593476399770:# ..
1593476399788:for (iv in input$ivsInput) {
1593476399809:if (is.numeric(dat[[iv]])) {
1593476399827:if (input$ivsNumAsClass) {
1593476399842:quantiles <- quantile(dat[[iv]])
1593476399856:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593476399874:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593476399891:})
1593476399904:}
1593476399918:}
1593476399931:}
1593476405233:dat
1593476428927:gdat <- group_by_at(dat, vars(ivs))
1593476436563:View(gdat)
1593476481907:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476481925:cbind(
1593476481942:iv = iv
1593476481958:, emmeans_test(gdat, as.formula(paste(dv, "~", iv))
1593476481975:, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593476481990:)
1593476482006:}))
1593476494011:View(pwc_df)
1593476509157:as.formula(paste(dv, "~", iv))
1593476516626:gdat
1593476526975:ivs
1593476549173:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476549192:#cbind(
1593476549210:#iv = iv
1593476549228:#,
1593476549243:emmeans_test(gdat, as.formula(paste(dv, "~", iv))
1593476549257:, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593476549274:#)
1593476549290:}))
1593476559718:#cbind(
1593476559738:#iv = iv
1593476559757:#,
1593476559777:emmeans_test(gdat, as.formula(paste(dv, "~", iv))
1593476559791:, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593476572045:gdat
1593476661043:dat <- as.data.frame(dat)
1593476693002:setdiff(ivs, iv)
1593476705656:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476705675:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593476705695:#cbind(
1593476705714:#iv = iv
1593476705732:#,
1593476705748:emmeans_test(gdat, as.formula(paste(dv, "~", iv))
1593476705764:, p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593476705781:#)
1593476705795:}))
1593476729801:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476729820:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593476729836:#cbind(
1593476729850:#iv = iv
1593476729866:#,
1593476729882:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593476729898:#, p.adjust.method = input$pairwiseCompAdjustmethod
1593476729928:#)
1593476729949:}))
1593476742269:ivs
1593476747662:iv
1593476755310:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593476760480:#cbind(
1593476760500:#iv = iv
1593476760521:#,
1593476760537:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593476814935:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476814956:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593476814975:#cbind(
1593476814992:#iv = iv
1593476815014:#,
1593476815028:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593476815046:#, p.adjust.method = input$pairwiseCompAdjustmethod
1593476815059:#)
1593476815074:as.data.frame(cbind(iv = iv, emm))
1593476815088:}))
1593476846188:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476846208:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593476846224:#cbind(
1593476846240:#iv = iv
1593476846256:#,
1593476846272:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593476846290:#, p.adjust.method = input$pairwiseCompAdjustmethod
1593476846306:#)
1593476846321:print(cbind(iv = iv, emm))
1593476846348:}))
1593476992692:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593476992716:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593476992732:#cbind(
1593476992751:#iv = iv
1593476992766:#,
1593476992780:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593476992798:#, p.adjust.method = input$pairwiseCompAdjustmethod
1593476992813:#)
1593476992829:emm[[iv]] = iv
1593476992846:emm
1593476992865:}))
1593477006433:View(pwc_df)
1593477102447:gdat <- group_by_at(dat, vars(ivs))
1593477103944:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593477103963:#gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593477103982:#cbind(
1593477103998:#iv = iv
1593477104014:#,
1593477104030:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593477104044:#, p.adjust.method = input$pairwiseCompAdjustmethod
1593477104062:#)
1593477104080:emm[[iv]] = iv
1593477104096:emm
1593477104110:}))
1593477112266:gdat <- group_by_at(dat, vars(ivs))
1593477116583:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593477116603:#gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593477116621:#cbind(
1593477116638:#iv = iv
1593477116653:#,
1593477116669:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593477116683:#, p.adjust.method = input$pairwiseCompAdjustmethod
1593477116697:#)
1593477116716:emm[[iv]] = iv
1593477116729:emm
1593477116748:}))
1593477124062:View(pwc_df)
1593477137449:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593477137468:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593477137483:#cbind(
1593477137497:#iv = iv
1593477137515:#,
1593477137529:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593477137544:#, p.adjust.method = input$pairwiseCompAdjustmethod
1593477137562:#)
1593477137578:emm[[iv]] = iv
1593477137591:emm
1593477137609:}))
1593477141760:View(pwc_df)
1593477245176:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593477245196:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593477245213:#cbind(
1593477245230:#iv = iv
1593477245244:#,
1593477245268:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed = T)
1593477245286:#, p.adjust.method = input$pairwiseCompAdjustmethod
1593477245303:#)
1593477245319:emm[[iv]] = NA
1593477245341:emm
1593477245365:}))
1593477251159:View(pwc_df)
1593478001138:input$pairwiseCompAdjustmethod
1593478027244:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593478027266:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593478027285:#cbind(
1593478027303:#iv = iv
1593478027320:#,
1593478027334:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), p.adjust.method = input$pairwiseCompAdjustmethod, detailed = T)
1593478027352:#
1593478027369:#)
1593478027386:pwc[[iv]] = NA
1593478027402:pwc
1593478027419:}))
1593478032184:View(pwc_df)
1593478260627:get_emmeans(pwc)
1593478304567:cbind(realizacao = NA, get_emmeans(pwc))
1593478335043:input$pairwiseCompAdjustmethod
1593478475226:values <- reactiveValues(anova.test = NULL, aov = list(), pwc = list(), emm = list())
1593478541480:values$pwc[[dv]][[iv]] <- pwc
1593478558231:values <- reactiveValues(anova.test = NULL, aov = list(), pwc = list(), emm = list())
1593478564464:values <- list(anova.test = NULL, aov = list(), pwc = list(), emm = list())
1593478570916:values$pwc[[dv]][[iv]] <- pwc
1593478575083:values
1593478610842:emm_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593478610863:get_emmeans(values$pwc[[dv]][[iv]])
1593478610881:}))
1593478626169:get_emmeans
1593478629603:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593478629622:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593478629640:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593478629656:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593478629671:values$pwc[[dv]][[iv]] <- pwc
1593478629687:pwc[[iv]] <- NA
1593478629702:pwc
1593478629720:}))
1593478633428:emm_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593478633450:get_emmeans(values$pwc[[dv]][[iv]])
1593478633467:}))
1593478674625:values$pwc$media$cenario
1593478701742:ivs
1593478923865:values$pwc$media
1593478950457:is.null(values$pwc$media)
1593478958384:is.null(values$pwc$med)
1593478965691:is.null(values$pwc$media)
1593478972154:is.null(values$pwc$aaaa)
1593478987545:names(values$pwc)
1593479010553:length(values$pwc)
1593479017966:length(values$pwc$media)
1593479042857:length(NULL)
1593479115041:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479115061:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479115079:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479115099:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479115117:if (length(values$pwc[[dv]]) == 0) values$pwc[[dv]] <- list()
1593479115134:values$pwc[[dv]][[iv]] <- pwc
1593479115158:pwc[[iv]] <- NA
1593479115173:return(pwc)
1593479115188:}))
1593479119659:emm_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479119682:get_emmeans(values$pwc[[dv]][[iv]])
1593479119699:}))
1593479126828:ivs
1593479142581:values$pwc$media$cenario
1593479219583:values <- reactiveValues(anova.test = NULL, aov = list(), pwc = list(), emm = list())
1593479230429:values <- list(anova.test = NULL, aov = list(), pwc = list(), emm = list())
1593479236467:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479236488:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479236508:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479236521:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479236538:if (length(values$pwc[[dv]]) == 0) values$pwc[[dv]] <- list()
1593479236553:values$pwc[[dv]][[iv]] <- pwc
1593479236577:pwc[[iv]] <- NA
1593479236593:return(pwc)
1593479236607:}))
1593479245959:values$pwc
1593479315744:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479315770:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479315794:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479315813:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479315831:if (length(values$pwc[[dv]]) == 0) values$pwc[[dv]] <- list()
1593479315850:values$pwc[[paste0(dv,':',iv)]] <- pwc
1593479315874:pwc[[iv]] <- NA
1593479315890:return(pwc)
1593479315907:}))
1593479326350:values$pwc
1593479351089:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479351109:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479351127:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479351143:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479351159:values$pwc[[paste0(dv,':',iv)]] <- pwc
1593479351177:pwc[[iv]] <- NA
1593479351191:return(pwc)
1593479351208:}))
1593479360180:values$pwc
1593479371101:paste0(dv,':',iv)
1593479385123:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479385429:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479385448:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479386907:values$pwc[[paste0(dv,':',iv)]] <- pwc
1593479391066:values$pwc
1593479401015:values$pwc$`media:cenario`
1593479412374:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479412394:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479412415:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479412430:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479412448:values$pwc[[paste0(dv,':',iv)]] <- pwc
1593479412469:pwc[[iv]] <- NA
1593479412484:return(pwc)
1593479412501:}))
1593479425701:values$pwc$`media:cenario`
1593479428373:ivs
1593479433829:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479433847:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479433875:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479433894:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479433914:values$pwc[[paste0(dv,':',iv)]] <- pwc
1593479433940:pwc[[iv]] <- NA
1593479433957:return(pwc)
1593479433975:}))
1593479449403:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479449419:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479449441:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479449456:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479449471:values$pwc[[paste0(dv,':',iv)]] <- pwc
1593479449486:print(paste0(dv,':',iv))
1593479449503:pwc[[iv]] <- NA
1593479449518:return(pwc)
1593479449536:}))
1593479474980:values <- list()
1593479479281:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479479301:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479479318:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479479333:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479479349:values$pwc[[paste0(dv,':',iv)]] <- pwc
1593479479371:pwc[[iv]] <- NA
1593479479385:return(pwc)
1593479479401:}))
1593479485089:values
1593479500407:values <- list(pwc = list())
1593479509767:pwc_df <- do.call(rbind, lapply(ivs, FUN = function(iv) {
1593479509785:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479509807:pwc <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479509824:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479509838:values$pwc[[paste0(dv,':',iv)]] <- pwc
1593479509858:pwc[[iv]] <- NA
1593479509872:return(pwc)
1593479509887:}))
1593479521418:values$pwc
1593479637928:livs <- list(ivs)
1593479639350:livs
1593479649390:livs <- as.list(ivs)
1593479650852:livs
1593479662710:livs <- as.list(ivs); names(livs) <- ivs
1593479664055:values$pwc <- lapply(livs, FUN = function(iv) {
1593479664070:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479664091:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479664110:})
1593479676300:values$pwc$realizacao
1593479691760:livs <- as.list(ivs); names(livs) <- ivs
1593479692181:values$pwc <- lapply(livs, FUN = function(iv) {
1593479692202:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479692218:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479692236:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479692251:})
1593479700939:values$pwc$realizacao
1593479704982:values$pwc$realizacao$social
1593479813245:values$emm <- lapply(livs, FUN = function(iv) {
1593479813267:get_emmeans(values$pwc[[dv]][[iv]])
1593479813283:})
1593479827207:values$pwc[[dv]][[iv]]
1593479831337:values$pwc[[dv]]
1593479834910:values$pwc
1593479846081:values$pwc$realizacao
1593479882147:dv
1593479883554:values$pwc[[dv]] <- lapply(livs, FUN = function(iv) {
1593479883571:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479883586:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479883600:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479883613:})
1593479887283:values$pwc[[dv]] <- lapply(livs, FUN = function(iv) {
1593479887302:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479887321:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479887340:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479887357:})
1593479897566:values$pwc$media$realizacao
1593479907322:values$pwc = list()
1593479910790:livs <- as.list(ivs); names(livs) <- ivs
1593479911402:values$pwc[[dv]] <- lapply(livs, FUN = function(iv) {
1593479911422:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593479911443:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593479911462:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593479911476:})
1593479920698:values$pwc$media$realizacao
1593479964511:values$emm[[dv]] <- lapply(livs, FUN = function(iv) {
1593479964529:get_emmeans(values$pwc[[dv]][[iv]])
1593479964544:})
1593479969385:values$emm[[dv]]
1593480402078:?emmeans_test
1593481027145:values <- reactiveValues(anova.test = NULL, pair.wise = NULL, aov = list(), pwc = list())
1593481042090:values <- list(anova.test = NULL, pair.wise = NULL, aov = list(), pwc = list())
1593481104240:ldvs <- as.list(dvs)
1593481105813:ldvs
1593481136487:dvs
1593481137988:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593481408813:ldvs
1593481410411:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593481410951:livs <- as.list(ivs); names(livs) <- ivs
1593481413910:ldvs
1593481418009:livs
1593481480384:livs
1593481507025:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593481507318:livs <- as.list(ivs); names(livs) <- ivs
1593481508157:values$aov <- lapply(ldvs, FUN = function(dv) {
1593481508173:lapply(livs, FUN = function(iv) {
1593481508193:anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593481508209:})
1593481508225:})
1593481522833:values$aov$media$social
1593481528093:values$aov$media$cenario
1593481534902:values$aov$media$social
1593481849615:values$aov <- lapply(ldvs, FUN = function(dv) {
1593481849634:dat <- as.data.frame(subset(data, var == dv))
1593481849653:gdat <- group_by_at(dat, vars(ivs))
1593481849671:lapply(livs, FUN = function(iv) {
1593481849686:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593481849702:})
1593481849716:})
1593481877528:initData
1593481896750:dvs
1593481908520:rep(dat)
1593481922255:rep(dat,3)
1593481933314:View(rep(dat,3))
1593481949381:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593481949966:livs <- as.list(ivs); names(livs) <- ivs
1593481962834:dat
1593481979177:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593481979439:livs <- as.list(ivs); names(livs) <- ivs
1593481980167:values$aov <- lapply(ldvs, FUN = function(dv) {
1593481980188:#dat <- as.data.frame(subset(data, var == dv))
1593481980207:gdat <- group_by_at(dat, vars(ivs))
1593481980230:lapply(livs, FUN = function(iv) {
1593481980247:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593481980265:})
1593481980284:})
1593482031426:values$aov <- lapply(ldvs, FUN = function(dv) {
1593482031444:#dat <- as.data.frame(subset(data, var == dv))
1593482031461:gdat <- group_by_at(dat, vars(ivs))
1593482031479:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593482031501:lapply(livs, FUN = function(iv) {
1593482031517:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482031532:})
1593482031548:})
1593482041324:colnames(dat)
1593482051627:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593482051833:livs <- as.list(ivs); names(livs) <- ivs
1593482053344:values$aov <- lapply(ldvs, FUN = function(dv) {
1593482053360:#dat <- as.data.frame(subset(data, var == dv))
1593482053380:gdat <- group_by_at(dat, vars(ivs))
1593482053396:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593482053413:lapply(livs, FUN = function(iv) {
1593482053431:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482053446:})
1593482053462:})
1593482069290:ivs
1593482077389:dat
1593482091697:dv
1593482096317:ldvs
1593482102191:values$aov <- lapply(ldvs, FUN = function(dv) {
1593482102210:#dat <- as.data.frame(subset(data, var == dv))
1593482102228:gdat <- group_by_at(dat, vars(ivs))
1593482102246:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593482102262:lapply(livs, FUN = function(iv) {
1593482102279:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482102297:})
1593482102317:})
1593482112267:ivs
1593482121339:paste0(ivs, collapse = "*")
1593482128023:#dat <- as.data.frame(subset(data, var == dv))
1593482128043:gdat <- group_by_at(dat, vars(ivs))
1593482130736:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593482137970:lapply(livs, FUN = function(iv) {
1593482137991:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482138008:})
1593482142860:sformula
1593482149291:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482159253:anova_test(gdat, sformula, detailed=T)
1593482168653:gdat
1593482177214:values$pwc <- lapply(livs, FUN = function(dv) {
1593482177234:#dat <- as.data.frame(subset(data, var == dv))
1593482177251:lapply(livs, FUN = function(iv) {
1593482177269:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593482177285:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593482177301:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593482177318:})
1593482177336:})
1593482195966:values$pwc <- lapply(ldvs, FUN = function(dv) {
1593482195984:#dat <- as.data.frame(subset(data, var == dv))
1593482196005:lapply(livs, FUN = function(iv) {
1593482196024:gdat <- group_by_at(dat, vars(setdiff(ivs, iv)))
1593482196041:emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T
1593482196060:, p.adjust.method = input$pairwiseCompAdjustmethod)
1593482196079:})
1593482196098:})
1593482216025:values$pwc$media$realizacao
1593482411437:#dat <- as.data.frame(subset(data, var == dv))
1593482411455:gdat <- group_by_at(dat, vars(ivs))
1593482421025:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593482427664:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482444919:#dat <- as.data.frame(subset(data, var == dv))
1593482444938:gdat <- group_by_at(dat, vars(ivs))
1593482445268:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593482446095:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482478581:#dat <- as.data.frame(subset(data, var == dv))
1593482478602:gdat <- group_by_at(as.data.frame(dat), vars(ivs))
1593482480504:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593482481492:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482498150:anova_test(gdat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482504420:anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482554417:values$aov <- lapply(ldvs, FUN = function(dv) {
1593482554435:#dat <- as.data.frame(subset(data, var == dv))
1593482554453:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593482554472:anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593482554487:})
1593482569401:values$aov$media
1593482575771:values$aov$dimensao1
1593482646257:values$aov$media
1593482715329:do.call(values$aov, lapply(aovs, FUN = function(aov) {
1593482715346:aov
1593482715361:}))
1593482839558:values$anova.test <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593482839575:do.call(rbind, lapply(livs, FUN = function(iv) {
1593482839593:values$aov[[dv]][[iv]]
1593482839610:}))
1593482839626:}))
1593482842936:values$anova.test
1593482854559:values$aov[[dv]][[iv]]
1593482860514:values$aov
1593482864315:values$aov[[dv]]
1593482871855:iv
1593482875995:values$aov[[dv]][[iv]]
1593482882806:livs
1593482924281:values$anova.test <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593482924302:cbind(var = dv, values$aov[[dv]])
1593482924317:}))
1593482927158:values$anova.test
1593483054060:values$pair.wise <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593483054077:do.call(rbind, lapply(livs, FUN = function(iv) {
1593483054095:values$pwc[[dv]][[iv]]
1593483054111:}))
1593483054126:}))
1593483068428:values$pwc[[dv]][[iv]]
1593483100993:pdat
1593483128385:values$pwc[[dv]][[iv]]
1593483210733:values$pair.wise <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593483210752:do.call(rbind, lapply(livs, FUN = function(iv) {
1593483210771:pdat <- as.data.frame(values$pwc[[dv]][[iv]])
1593483210796:pdat[[iv]] <- NA
1593483210813:pdat
1593483210828:}))
1593483210845:}))
1593483222284:View(values$pair.wise)
1593483303519:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593483303655:livs <- as.list(ivs); names(livs) <- ivs
1593483304271:values$aov <- lapply(ldvs, FUN = function(dv) {
1593483304291:dat <- as.data.frame(subset(data, var == dv))
1593483304308:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593483304324:anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593483304340:})
1593483304476:values$anova.test <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593483304497:cbind(var = dv, values$aov[[dv]])
1593483304516:}))
1593483304742:values$pair.wise <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593483304760:do.call(rbind, lapply(livs, FUN = function(iv) {
1593483304780:pdat <- as.data.frame(values$pwc[[dv]][[iv]])
1593483304800:pdat[[iv]] <- NA
1593483304816:cbind(var = dv, pdat)
1593483304838:}))
1593483304854:}))
1593483307367:values$pair.wise <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593483307389:do.call(rbind, lapply(livs, FUN = function(iv) {
1593483307406:pdat <- as.data.frame(values$pwc[[dv]][[iv]])
1593483307424:pdat[[iv]] <- NA
1593483307440:cbind(var = dv, pdat)
1593483307454:}))
1593483307470:}))
1593483310891:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593483311136:livs <- as.list(ivs); names(livs) <- ivs
1593483311889:values$aov <- lapply(ldvs, FUN = function(dv) {
1593483311910:dat <- as.data.frame(subset(data, var == dv))
1593483311931:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593483311946:anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593483311964:})
1593483321626:values$aov <- lapply(ldvs, FUN = function(dv) {
1593483321646:#dat <- as.data.frame(subset(data, var == dv))
1593483321664:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593483321681:anova_test(dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593483321698:})
1593483327283:values$anova.test <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593483327305:cbind(var = dv, values$aov[[dv]])
1593483327328:}))
1593483343388:values$pair.wise <- do.call(rbind, lapply(ldvs, FUN = function(dv) {
1593483343412:do.call(rbind, lapply(livs, FUN = function(iv) {
1593483343433:pdat <- as.data.frame(values$pwc[[dv]][[iv]])
1593483343452:pdat[[iv]] <- NA
1593483343470:cbind(var = dv, pdat)
1593483343489:}))
1593483343506:}))
1593483884021:?tabsetPanel
1593483960149:?verticalLayout
1593484079678:values$pair.wise
1593484189514:?emmeans_test
1593484635935:?tabsetPanel
1593485043357:values$pair.wise
1593485054791:View(values$pair.wise)
1593485136079:colnames(values$pair.wise)
1593485406256:runApp()
1593485714848:runApp()
1593486109667:runApp()
1593486264851:runApp()
1593486396845:runApp()
1593486522927:runApp()
1593486754214:runApp()
1593486852000:intersect(c(1,2,3), c(2,3))
1593486903986:runApp()
1593487206282:runApp()
1593487370999:runApp()
1593487420655:runApp()
1593487566223:runApp()
1593487569542:runApp()
1593487651091:?tryCatch
1593487731046:e <- simpleError("dsads")
1593487733242:e
1593487739757:typeof(e)
1593487823911:anova_test(dat, media ~ cenario)
1593487830889:a <- anova_test(dat, media ~ cenario)
1593487835657:typeof(a)
1593487917558:runApp()
1593488397669:values$pair.wise
1593488416035:unique(values$pair.wise$var)
1593488478864:runApp()
1593489206511:shinyjs::enable()
1593489232299:runApp()
1593489344374:?actionButton
1593489963894:?updateActionButton
1593490116673:?actionButton
1593490648426:?updateActionButton
1593492230467:runApp()
1593492373352:runApp()
1593492442437:runApp()
1593492510599:runApp()
1593492690458:?verticalLayout()
1593493101597:runApp()
1593493233511:runApp()
1593493295854:?shinyjs::disable
1593493452919:runApp()
1593494140687:subset(c(1,2,3,4,5,6), c(1,3,4))
1593494151633:setdiff(c(1,2,3,4,5,6), c(1,3,4))
1593494471416:runApp()
1593494540312:runApp()
1593494779322:runApp()
1593495284709:runApp()
1593495515543:runApp()
1593495718491:runApp()
1593519843085:runApp()
1593520134795:runApp()
1593520491545:runApp()
1593520555142:runApp()
1593521086464:runApp()
1593521525957:runApp()
1593522009302:?emmeans_test
1593522770380:?div
1593522870036:runApp()
1593522920858:runApp()
1593523068336:runApp()
1593523193252:?flowLayout
1593523217400:?fixedRow
1593523287938:runApp()
1593523716074:dat
1593523768690:data <- cbind(var = 'media', read_csv("data/fss.csv"))
1593523835808:tabPanel(dv, value = dv, verticalLayout(
1593523835827:br(), strong(paste("Comparações de", dv, "em pares usando médias marginais estimadas"))
1593523835846:, df2TableUI(ns(paste0("pwc", dv, "ResultTable")))
1593523835867:, div("df: degree of freedom; estimate: estimate of the effect size; ci: confidence intervale of the estimate")
1593523835885:, br()
1593523835901:,
1593523835922:bxp <- ggboxplot(
1593523835940:data, x = "cenario", y = "media",
1593523836065:color = "cenario", palette = "jco", facet.by = "realizacao"
1593523836086:)
1593523836100:bxp
1593523836128:))
1593523844628:tabPanel(dv, value = dv, verticalLayout(
1593523844648:br(), strong(paste("Comparações de", dv, "em pares usando médias marginais estimadas"))
1593523844666:, df2TableUI(ns(paste0("pwc", dv, "ResultTable")))
1593523844683:, div("df: degree of freedom; estimate: estimate of the effect size; ci: confidence intervale of the estimate")
1593523844700:, br()
1593523844713:,
1593523844739:bxp <- ggboxplot(
1593523844755:data, x = "cenario", y = "media",
1593523844774:color = "cenario", palette = "jco", facet.by = "realizacao")
1593523844790:bxp
1593523844816:))
1593523860012:tabPanel(dv, value = dv, verticalLayout(
1593523860031:br(), strong(paste("Comparações de", dv, "em pares usando médias marginais estimadas"))
1593523860050:, df2TableUI(ns(paste0("pwc", dv, "ResultTable")))
1593523860068:, div("df: degree of freedom; estimate: estimate of the effect size; ci: confidence intervale of the estimate")
1593523860086:, br()
1593523860105:,
1593523860129:bxp <- ggboxplot(
1593523860147:data, x = "cenario", y = "media",
1593523860165:color = "cenario", palette = "jco", facet.by = "realizacao")
1593523860183:bxp
1593523860215:))
1593523877903:tabPanel(dv, value = dv, verticalLayout(
1593523877925:br(), strong(paste("Comparações de", dv, "em pares usando médias marginais estimadas"))
1593523877946:, df2TableUI(ns(paste0("pwc", dv, "ResultTable")))
1593523877962:, div("df: degree of freedom; estimate: estimate of the effect size; ci: confidence intervale of the estimate")
1593523877978:, br()
1593523877994:,
1593523878015:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593523878032:color = "cenario", palette = "jco", facet.by = "realizacao")
1593523878049:bxp
1593523878076:))
1593523893035:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593523893054:color = "cenario", palette = "jco", facet.by = "realizacao")
1593523894197:bxp
1593523943083:data <- cbind(var = 'media', read_csv("data/fss-qpj.csv"))
1593523947997:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593523948022:color = "cenario", palette = "jco", facet.by = "realizacao")
1593523948823:bxp
1593524059994:data <- cbind(var = 'media', read_csv("data/fss-qpj.csv"))
1593524071192:data <- cbind(var = 'media', read_csv("data/fss-qpj.csv"))
1593524071991:for (iv in c('imersao','realizacao','social')) {
1593524072010:quantiles <- quantile(data[[iv]])
1593524072030:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593524072046:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593524072066:})
1593524072089:}
1593524073652:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593524073669:color = "cenario", palette = "jco", facet.by = "realizacao")
1593524074478:bxp
1593524123902:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593524123920:color = "cenario", palette = "jco", facet.by = c("realizacao","social"))
1593524124725:bxp
1593524167494:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593524167512:color = "cenario", palette = "jco", facet.by = c())
1593524168031:bxp
1593524194091:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593524194112:color = "cenario", palette = "jco", facet.by = c("social"))
1593524194535:bxp
1593524212636:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593524212656:color = "cenario", palette = "jco", facet.by = c("realizacao","social"))
1593524213267:bxp
1593524322553:bxp <- ggboxplot(data, x = "social", y = "media",
1593524322580:color = "social", palette = "jco", facet.by = c("cenario","imersao"))
1593524323273:bxp
1593524446343:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593524446359:color = "social", palette = "jco", facet.by = c("realizacao"))
1593524446946:bxp
1593524929041:data
1593525036895:pwc <- emmeans_test(group_by_at(data, vars(c("cenario","realizacao","social")))
1593525036911:, media ~ cenario*realizacao*social
1593525036930:, detailed = T)
1593525057932:group_by_at(data, vars(c("cenario","realizacao","social")))
1593525074054:pwc <- emmeans_test(group_by_at(data, vars(c("realizacao","social")))
1593525074076:, media ~ cenario*realizacao*social
1593525074095:, detailed = T)
1593525084132:pwc <- emmeans_test(group_by_at(data, vars(c("cenario","realizacao","social")))
1593525084153:, media ~ cenario*realizacao*social
1593525084170:, detailed = T)
1593525105444:gdat <- group_by_at(data, vars(c("cenario","realizacao","social")))
1593525118485:pwc <- emmeans_test(gdat
1593525118503:, media ~ cenario*realizacao*social
1593525118521:, detailed = T)
1593525148033:gdat <- group_by(data, cenario,realizacao, social)
1593525149712:pwc <- emmeans_test(gdat
1593525149731:, media ~ cenario*realizacao*social
1593525149751:, detailed = T)
1593525182759:data
1593525193357:gdat <- group_by(data, cenario,realizacao, social)
1593525194883:gdat
1593525206000:pwc <- emmeans_test(data
1593525206017:, media ~ cenario*realizacao*social
1593525206038:, detailed = T)
1593525223878:pwc <- emmeans_test(data
1593525223902:, media~cenario*realizacao*social
1593525223920:, detailed = T)
1593525245739:rlang::last_error()
1593525276284:gdat <- group_by(data, cenario,realizacao, social)
1593525277158:pwc <- emmeans_test(data, media~cenario*realizacao*social, detailed = T)
1593525277447:pwc <- add_xy_position(pwc, x="cenario")
1593525284737:colnames(data)
1593525306421:gdat <- group_by(data, cenario,realizacao, social)
1593525311715:pwc <- emmeans_test(gdat, media~cenario*realizacao*social, detailed = T)
1593525318135:?emmeans_test
1593525408006:gdat <- group_by(data, cenario,realizacao, social)
1593525408798:pwc <- emmeans_test(gdat, media~cenario*realizacao*social, detailed = T)
1593525409375:pwc <- add_xy_position(pwc, x="cenario")
1593525412349:pwc
1593525436940:pwc <- emmeans_test(data, media~cenario*realizacao*social, detailed = T)
1593525442160:pwc <- emmeans_test(data, media~cenario*realizacao, detailed = T)
1593525447622:pwc <- emmeans_test(data, media~cenario+realizacao, detailed = T)
1593525474694:gdat <- group_by(data, cenario,realizacao, social)
1593525476250:pwc <- emmeans_test(data, as.formula("media ~ cenario*realizacao"), detailed = T)
1593525476824:pwc <- add_xy_position(pwc, x="cenario")
1593525479670:pwc
1593525483838:pwc <- emmeans_test(data, as.formula("media ~ cenario*realizacao"), detailed = T)
1593525491445:pwc <- emmeans_test(data, as.formula("dimensao1 ~ cenario*realizacao"), detailed = T)
1593525503439:pwc <- emmeans_test(data, as.formula("media ~ cenario"), detailed = T)
1593525506143:pwc
1593526014472:gdat <- group_by(data, cenario,realizacao, social)
1593526015711:pwc <- emmeans_test(data, as.formula("media ~ cenario"), detailed = T)
1593526016314:pwc <- add_xy_position(pwc, x="cenario")
1593526020699:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526020720:color = "social", palette = "jco", facet.by = c("realizacao"))
1593526045516:bxp <- bxp + labs(
1593526045535:subtitle = get_test_label(res.aov, detailed = TRUE),
1593526045559:caption = get_pwc_label(pwc)
1593526045576:)
1593526053330:bxp <- bxp + labs(
1593526053352:#subtitle = get_test_label(res.aov, detailed = TRUE),
1593526053368:caption = get_pwc_label(pwc)
1593526053382:)
1593526055361:bxp
1593526114437:res.aov = anova_test(data, media~cenario*realizacao*social)
1593526119248:res.aov
1593526129206:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526129226:color = "social", palette = "jco", facet.by = c("realizacao"))
1593526131268:bxp <- bxp + labs(
1593526131287:subtitle = get_test_label(res.aov, detailed = TRUE),
1593526131304:caption = get_pwc_label(pwc)
1593526131320:)
1593526131783:bxp
1593526224009:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526224029:color = "social", palette = "jco", facet.by = c("realizacao"))
1593526224479:bxp <- bxp + stat_pvalue_manual(
1593526224498:pwc.filtered, color = "social", linetype = "social", hide.ns = TRUE,
1593526224515:tip.length = 0, step.increase = 0.1, step.group.by = "cenario"
1593526224534:)
1593526237672:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526237690:color = "social", palette = "jco", facet.by = c("realizacao"))
1593526238268:bxp <- bxp + stat_pvalue_manual(
1593526238287:pwc, color = "social", linetype = "social", hide.ns = TRUE,
1593526238305:tip.length = 0, step.increase = 0.1, step.group.by = "cenario"
1593526238320:)
1593526266251:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526266272:color = "social", palette = "jco", facet.by = c("realizacao"))
1593526266846:bxp <- bxp + stat_pvalue_manual(
1593526266862:pwc, color = "cenario", linetype = "realizacao", hide.ns = TRUE,
1593526266882:tip.length = 0, step.increase = 0.1, step.group.by = "social"
1593526266898:)
1593526274863:bxp <- bxp + labs(
1593526274883:subtitle = get_test_label(res.aov, detailed = TRUE),
1593526274901:caption = get_pwc_label(pwc)
1593526274916:)
1593526275540:bxp
1593526307062:res.aov = anova_test(data, media~cenario*realizacao*social)
1593526330375:res.aov = anova_test(data, media~cenario*realizacao*social)
1593526332809:gdat <- group_by(data, realizacao, social)
1593526338304:pwc <- emmeans_test(data, as.formula("media ~ cenario"), detailed = T)
1593526362606:pwc <- add_xy_position(pwc, x="cenario")
1593526389637:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526389656:color = "realizacao", palette = "jco", facet.by = c("social"))
1593526414303:bxp <- bxp + stat_pvalue_manual(
1593526414322:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526414338:tip.length = 0, step.increase = 0.1, step.group.by = "social"
1593526414353:)
1593526418846:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526418864:color = "realizacao", palette = "jco", facet.by = c("social"))
1593526421389:bxp <- bxp + labs(
1593526421407:subtitle = get_test_label(res.aov, detailed = TRUE),
1593526421424:caption = get_pwc_label(pwc)
1593526421438:)
1593526422071:bxp
1593526463982:bxp <- bxp + stat_pvalue_manual(
1593526464002:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526464019:tip.length = 0, step.increase = 0.1, step.group.by = "social"
1593526464034:)
1593526473362:bxp <- bxp + stat_pvalue_manual(
1593526473382:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526473397:tip.length = 0, step.increase = 0.1, step.group.by = "cenario"
1593526473416:)
1593526474031:bxp <- bxp + labs(
1593526474051:subtitle = get_test_label(res.aov, detailed = TRUE),
1593526474070:caption = get_pwc_label(pwc)
1593526474085:)
1593526477669:bxp
1593526573198:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526573217:color = "realizacao", palette = "jco", facet.by = c("social"))
1593526574036:bxp <- bxp + stat_pvalue_manual(
1593526574055:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526574072:tip.length = 0, step.increase = 0.1, step.group.by = "cenario"
1593526574090:)
1593526574998:bxp <- bxp + labs(
1593526575017:subtitle = get_test_label(res.aov, detailed = TRUE),
1593526575034:caption = get_pwc_label(pwc)
1593526575050:)
1593526580523:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526580543:color = "realizacao", palette = "jco", facet.by = c("social"))
1593526584245:bxp <- bxp + labs(
1593526584267:subtitle = get_test_label(res.aov, detailed = TRUE),
1593526584280:caption = get_pwc_label(pwc)
1593526584296:)
1593526584639:bxp
1593526596016:bxp <- bxp + stat_pvalue_manual(
1593526596036:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526596050:tip.length = 0, step.increase = 0.1, step.group.by = "social"
1593526596063:)
1593526603662:bxp <- bxp + stat_pvalue_manual(
1593526603687:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526603707:tip.length = 0, step.increase = 0.1, step.group.by = "cenario"
1593526603723:)
1593526607837:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526607853:color = "realizacao", palette = "jco", facet.by = c("social"))
1593526610645:bxp <- bxp + stat_pvalue_manual(
1593526610665:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526610683:tip.length = 0, step.increase = 0.1, step.group.by = "cenario"
1593526610696:)
1593526624822:bxp <- bxp + stat_pvalue_manual(
1593526624845:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526624864:tip.length = 0, step.increase = 0.1, step.group.by = "social"
1593526624881:)
1593526625727:bxp <- bxp + labs(
1593526625749:subtitle = get_test_label(res.aov, detailed = TRUE),
1593526625768:caption = get_pwc_label(pwc)
1593526625784:)
1593526627546:bxp
1593526819781:res.aov = anova_test(data, media~cenario*realizacao*social)
1593526844229:gdat <- group_by(data, cenario, realizacao, social)
1593526847143:pwc <- emmeans_test(data, as.formula("media ~ cenario"), detailed = T)
1593526853791:gdat <- group_by(data, cenario, realizacao, social)
1593526854387:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593526869426:data <- cbind(var = 'media', read_csv("data/fss-qpj.csv"))
1593526870089:for (iv in c('imersao','realizacao','social')) {
1593526870108:quantiles <- quantile(data[[iv]])
1593526870125:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593526870145:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593526870163:})
1593526870179:}
1593526872415:res.aov = anova_test(data, media~cenario*realizacao*social)
1593526873951:gdat <- group_by(data, realizacao, social)
1593526878288:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593526881255:pwc
1593526930155:pwc <- add_xy_position(pwc, x="cenario")
1593526963014:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526963034:color = "realizacao", palette = "jco", facet.by = c("cenario"))
1593526963578:bxp <- bxp + stat_pvalue_manual(
1593526963595:pwc, color = "realizacao", linetype = "realizacao", hide.ns = TRUE,
1593526963613:tip.length = 0, step.increase = 0.1, step.group.by = "social"
1593526963629:)
1593526975859:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593526975878:color = "realizacao", palette = "jco", facet.by = c("cenario"))
1593526977741:bxp
1593527458291:res.aov = anova_test(data, media~cenario*realizacao*social)
1593527468879:gdat <- group_by(data, realizacao, social)
1593527479580:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593527493266:pwc <- add_xy_position(pwc, x="cenario")
1593527557419:res.aov = anova_test(data, media~cenario*realizacao*social)
1593527557801:gdat <- group_by(data, realizacao, social)
1593527557848:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593527558034:pwc <- add_xy_position(pwc, x="cenario")
1593527559243:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593527559261:color = "social", palette = "jco", facet.by = c("realizacao"))
1593527559969:bxp <- bxp + stat_pvalue_manual(
1593527559989:pwc, color = "social", linetype = "social", hide.ns = TRUE,
1593527560005:tip.length = 0, step.increase = 0.1, step.group.by = "realizacao"
1593527560018:)
1593527569240:bxp <- bxp + labs(
1593527569261:subtitle = get_test_label(res.aov, detailed = TRUE),
1593527569279:caption = get_pwc_label(pwc)
1593527569291:)
1593527570680:bxp
1593527911857:bxp <- ggboxplot(
1593527911878:headache, x = "cenario", y = "media",
1593527911898:color = "social", palette = "jco", facet.by = "realizacao"
1593527911914:)
1593527912355:pwc <- pwc %>% add_xy_position(x = "cenario")
1593527913468:bxp +
1593527913485:stat_pvalue_manual(
1593527913500:pwc.filtered, color = "social", linetype = "social", hide.ns = TRUE,
1593527913514:tip.length = 0, step.increase = 0.1, step.group.by = c("realizacao")
1593527913533:) +
1593527913549:labs(
1593527913568:subtitle = get_test_label(res.aov, detailed = TRUE),
1593527913585:caption = get_pwc_label(pwc)
1593527913600:)
1593527941655:res.aov = anova_test(data, media~cenario*realizacao*social)
1593527942448:gdat <- group_by(data, realizacao, social)
1593527942767:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593527943254:pwc <- add_xy_position(pwc, x="cenario")
1593527944330:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593527944347:color = "social", palette = "jco", facet.by = c("realizacao"))
1593527945479:bxp <- bxp + stat_pvalue_manual(
1593527945499:pwc, color = "social", linetype = "social", hide.ns = TRUE,
1593527945518:tip.length = 0, step.increase = 0.1, step.group.by = c("realizacao")
1593527945533:)
1593527972335:res.aov = anova_test(data, media~cenario*realizacao*social)
1593527972633:gdat <- group_by(data, realizacao, social)
1593527972923:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593527973052:pwc <- add_xy_position(pwc, x="cenario")
1593527974172:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593527974187:color = "social", palette = "jco", facet.by = c("realizacao"))
1593527974224:bxp <- bxp + stat_pvalue_manual(
1593527974243:pwc, color = "social", linetype = "social", hide.ns = TRUE,
1593527974264:tip.length = 0, step.increase = c(0.1), step.group.by = "realizacao"
1593527974278:)
1593527987878:res.aov = anova_test(data, media~cenario*realizacao*social)
1593527988123:gdat <- group_by(data, realizacao, social)
1593527988336:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593527988474:pwc <- add_xy_position(pwc, x="cenario")
1593527989588:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593527989602:color = "social", palette = "jco", facet.by = c("realizacao"))
1593527990024:bxp <- bxp + stat_pvalue_manual(
1593527990043:pwc, color = "social", linetype = "social", hide.ns = TRUE,
1593527990059:tip.length = 0#, step.increase = c(0.1)
1593527990075:, step.group.by = "realizacao"
1593527990092:)
1593528028956:?stat_pvalue_manual
1593528326006:res.aov = anova_test(data, media~cenario*realizacao*social)
1593528326276:gdat <- group_by(data, realizacao, social)
1593528326478:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593528326689:pwc <- add_xy_position(pwc, x="cenario")
1593528327823:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593528327841:color = "social", palette = "jco", facet.by = c("realizacao"))
1593528328185:bxp <- bxp + stat_pvalue_manual(
1593528328205:pwc, color = "social", linetype = "social", hide.ns = TRUE,
1593528328222:tip.length = 0, step.increase = 0.1, step.group.by = "realizacao"
1593528328241:)
1593528329080:bxp <- bxp + labs(
1593528329102:subtitle = get_test_label(res.aov, detailed = TRUE),
1593528329118:caption = get_pwc_label(pwc)
1593528329136:)
1593528330491:bxp
1593528388497:res.aov = anova_test(data, media~cenario*realizacao*social)
1593528393842:gdat <- group_by(data, realizacao, social)
1593528394149:pwc <- emmeans_test(gdat, as.formula("media ~ cenario"), detailed = T)
1593528394404:pwc <- add_xy_position(pwc, x="cenario")
1593528395514:bxp <- ggboxplot(data, x = "cenario", y = "media",
1593528395529:color = "social", palette = "jco", facet.by = c("realizacao"))
1593528395585:bxp <- bxp + stat_pvalue_manual(
1593528395600:pwc, color = "social", linetype = "social", hide.ns = TRUE,
1593528395617:tip.length = 0, step.increase = 0.1, step.group.by = "realizacao"
1593528395633:)
1593528395685:bxp <- bxp + labs(
1593528395706:subtitle = get_test_label(res.aov, detailed = TRUE),
1593528395722:caption = get_pwc_label(pwc)
1593528395740:)
1593528396366:bxp
1593528877883:ivs
1593528901304:ivs = c("realizacao","social","cenario")
1593528902403:ivs
1593529041112:dv
1593529045568:dv = "media"
1593529054702:values$aov[[dv]]
1593529429603:?p
1593530070085:combn(2,2)
1593530081580:combn(3,2)
1593530132872:setdiff(c(1,2,3), 2)
1593530246389:runApp()
1593530410579:runApp()
1593531009136:by
1593531018760:gby
1593531026243:group_by
1593531032794:group.by
1593531693978:ggPlotAoV <- function(x, color, by = c(), aov, pwc) {
1593531694000:pwc <- add_xy_position(pwc, x = x)
1593531694017:bxp <- ggboxplot(data, x = x, y = dv, color = color, palette = "jco", facet.by = by)
1593531694033:bxp <- bxp + stat_pvalue_manual(pwc, color = color, linetype = linetype, hide.ns = T
1593531694047:, tip.length = 0, step.increase = 0.1, step.group.by = by)
1593531694063:bxp <- bxp + labs(subtitle = get_test_label(aov, detailed = T), caption = get_pwc_label(pwc))
1593531694078:return(bxp)
1593531694095:}
1593531769344:ggPlotAoV <- function(x, color, by = c(), aov, pwc) {
1593531769363:pwc <- add_xy_position(pwc, x = x)
1593531769378:bxp <- ggboxplot(data, x = x, y = dv, color = color, palette = "jco", facet.by = by)
1593531769397:bxp <- bxp + stat_pvalue_manual(pwc, color = color, linetype = linetype, hide.ns = T
1593531769415:, tip.length = 0, step.increase = 0.1, step.group.by = by)
1593531769435:bxp <- bxp + labs(subtitle = get_test_label(aov, detailed = T), caption = get_pwc_label(pwc))
1593531769453:return(bxp)
1593531769470:}
1593531958147:ggPlotAoV <- function(data, x, y, color, aov, pwc, linetype = color, by = c()) {
1593531958169:pwc <- add_xy_position(pwc, x = x)
1593531958189:bxp <- ggboxplot(data, x = x, y = y, color = color, palette = "jco", facet.by = by)
1593531958208:bxp <- bxp + stat_pvalue_manual(pwc, color = color, linetype = linetype, hide.ns = T
1593531958223:, tip.length = 0, step.increase = 0.1, step.group.by = by)
1593531958238:bxp <- bxp + labs(subtitle = get_test_label(aov, detailed = T), caption = get_pwc_label(pwc))
1593531958253:return(bxp)
1593531958273:}
1593532305619:runApp()
1593532356278:runApp()
1593532673284:runApp()
1593533224646:gby
1593533549328:runApp()
1593533894208:runApp()
1593534332868:runApp()
1593535523492:runApp()
1593536122035:runApp()
1593536410579:runApp()
1593536795561:?ggplot2
1593537056693:runApp()
1593538046604:freq_table(data)
1593538048611:data
1593538127452:gdat <- group_by_at(data, vars(c("realizacao","social","imersao","cenario")))
1593538129522:gdat
1593538152617:gdat <- group_by_at(data, vars(c("realizacao","social","cenario")))
1593538171888:freq_table(gdat)
1593538188114:?freq_table
1593538229724:freq_table(data, vars = c("realizacao","social","cenario"))
1593538339894:boxplot(c(1,2,3))
1593538345922:boxplot(c(1,2))
1593538350901:boxplot(c(1))
1593538360698:identify_outliers()
1593538364223:?identify_outliers
1593538464889:identify_outliers(data, cenario, realizacao, social, variable = "media")
1593538476459:identify_outliers(data, cenario, realizacao, variable = "media")
1593538482737:identify_outliers(data, cenario, variable = "media")
1593538501260:identify_outliers(data, social, variable = "media")
1593538604997:freq_table(data, vars = c("cenario"))
1593538611227:freq_table(data, vars = c("cenario","realizacao"))
1593538617042:freq_table(data, vars = c("cenario","realizacao","social"))
1593538627045:freq_table(data, vars = c("cenario","realizacao","social","imersao"))
1593538643242:freq_table(data, vars = c("cenario","realizacao","social"))
1593538916963:input = list(ivsInput = c("realizacao","social","cenario"))
1593538931858:dat
1593538939297:dat <- data
1593538971828:## .. remove groups with size less than < 5
1593538971845:freq_table(dat, vars = input$ivsInput)
1593539042414:freq_df <- freq_table(dat, vars = input$ivsInput)
1593539083858:lapply(freq_df, FUN = function(x) { print(x) })
1593539101986:freq_df
1593539138096:seq(1,nrow(freq_df))
1593539189093:freq_df$n[i] < 5
1593539193958:freq_df$n < 5
1593539286730:input$idInput <- "row.pos"
1593539302242:input$idInput <- "UserID"
1593539306078:input$idInput
1593539445260:?subset
1593539612622:i=2
1593539625131:freq_df$n[i] < 5
1593539651300:input$ivsInput
1593539724293:?and
1593539741807:and(T, F)
1593539745303:and(T, F,T)
1593539747634:and(T, F, T)
1593539802230:all(c(T,F,T,F))
1593539894398:?subset
1593540085754:iv
1593540089673:freq_df[[iv]]
1593540111167:freq_df[[i,iv]]
1593540150830:dat[[iv]] == freq_df[[i,iv]]
1593540192771:dat[[iv]] == freq_df[[i,iv]]
1593540242651:?rep
1593540260525:rep(T, nrow(dat))
1593540265896:idx <- rep(T, nrow(dat))
1593540266940:for (iv in input$ivsInput) {
1593540266960:idx <- idx & (dat[[iv]] == freq_df[[i,iv]])
1593540266982:}
1593540269816:idx
1593540283876:freq_df$n[i]
1593540369763:wid
1593540394713:wid = "UserID"
1593540473564:dat[[wid]][idx]
1593540514308:to_remove_ids <- c()
1593540515005:freq_df <- freq_table(dat, vars = input$ivsInput)
1593540516594:for (i in seq(1,nrow(freq_df))) {
1593540516615:if (freq_df$n[i] < 5) {
1593540516639:idx <- rep(T, nrow(dat))
1593540516658:for (iv in input$ivsInput) {
1593540516676:idx <- idx & (dat[[iv]] == freq_df[[i,iv]])
1593540516694:}
1593540516715:to_remove_ids <- c(dat[[wid]][idx], to_remove_ids)
1593540516729:}
1593540516750:}
1593540521952:to_remove_ids
1593540585511:dat[dat[[wid]] %in% to_remove_ids,]
1593540627762:to_remove_ids <- c()
1593540628289:freq_df <- freq_table(dat, vars = input$ivsInput)
1593540628764:for (i in seq(1,nrow(freq_df))) {
1593540628784:if (freq_df$n[i] < 5) {
1593540628809:idx <- rep(T, nrow(dat))
1593540628826:for (iv in input$ivsInput) {
1593540628842:idx <- idx & (dat[[iv]] == freq_df[[i,iv]])
1593540628859:}
1593540628874:to_remove_ids <- c(dat[[wid]][idx], to_remove_ids)
1593540628890:}
1593540628905:}
1593540633124:dat <- dat[dat[[wid]] %in% to_remove_ids,]
1593540679063:freq_table(dat, vars = c(input$ivsInput))
1593540748609:dat <- read_csv('data/fss-qpj.csv')
1593540754440:to_remove_ids <- c()
1593540754946:freq_df <- freq_table(dat, vars = input$ivsInput)
1593540755297:for (i in seq(1,nrow(freq_df))) {
1593540755317:if (freq_df$n[i] < 5) {
1593540755339:idx <- rep(T, nrow(dat))
1593540755355:for (iv in input$ivsInput) {
1593540755374:idx <- idx & (dat[[iv]] == freq_df[[i,iv]])
1593540755392:}
1593540755409:to_remove_ids <- c(dat[[wid]][idx], to_remove_ids)
1593540755425:}
1593540755441:}
1593540760677:to_remove_ids <- c()
1593540761833:freq_df <- freq_table(dat, vars = input$ivsInput)
1593540792686:input = list(ivsInput = c("social","realizacao","cenario"))
1593540803226:wid="UserID"
1593540807064:to_remove_ids <- c()
1593540807442:freq_df <- freq_table(dat, vars = input$ivsInput)
1593540808064:for (i in seq(1,nrow(freq_df))) {
1593540808086:if (freq_df$n[i] < 5) {
1593540808110:idx <- rep(T, nrow(dat))
1593540808126:for (iv in input$ivsInput) {
1593540808142:idx <- idx & (dat[[iv]] == freq_df[[i,iv]])
1593540808157:}
1593540808172:to_remove_ids <- c(dat[[wid]][idx], to_remove_ids)
1593540808203:}
1593540808225:}
1593540810818:dat <- dat[!dat[[wid]] %in% to_remove_ids,]
1593540821978:freq_table(dat, vars = input$ivsInput)
1593540835216:dat
1593540840089:to_remove_ids <- c()
1593540841597:freq_df <- freq_table(dat, vars = input$ivsInput)
1593540856176:dat <- read_csv('data/fss-qpj.csv')
1593540860735:to_remove_ids <- c()
1593540861376:freq_df <- freq_table(dat, vars = input$ivsInput)
1593540863065:freq_df
1593540912095:wid
1593540936048:input$ivsInput = T
1593540940435:for (iv in input$ivsInput) {
1593540940456:if (input$ivsNumAsClass && is.numeric(dat[[iv]])) {
1593540940477:quantiles <- quantile(dat[[iv]])
1593540940496:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593540940511:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593540940527:})
1593540940546:dat[[iv]] <- factor(dat[[iv]], levels=c("low","medium","high"))
1593540940562:}
1593540940582:}
1593540950023:for (iv in input$ivsInput) {
1593540950039:if (input$ivsNumAsClass && is.numeric(dat[[iv]])) {
1593540950064:quantiles <- quantile(dat[[iv]])
1593540950084:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593540950119:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593540950141:})
1593540950160:dat[[iv]] <- factor(dat[[iv]], levels=c("low","medium","high"))
1593540950178:}
1593540950195:}
1593540958383:input$ivsInput
1593540966407:input$ivsNumAsClass
1593540973224:input$ivsNumAsClass = T
1593540992685:input$ivsInput = c("realizacao","social","cenario")
1593540998515:for (iv in input$ivsInput) {
1593540998536:if (input$ivsNumAsClass && is.numeric(dat[[iv]])) {
1593540998554:quantiles <- quantile(dat[[iv]])
1593540998573:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593540998588:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593540998607:})
1593540998623:dat[[iv]] <- factor(dat[[iv]], levels=c("low","medium","high"))
1593540998642:}
1593540998656:}
1593541003991:dat
1593541008043:to_remove_ids <- c()
1593541009015:freq_df <- freq_table(dat, vars = input$ivsInput)
1593541010802:freq_df
1593541017980:for (i in seq(1,nrow(freq_df))) {
1593541017998:if (freq_df$n[i] < 5) {
1593541018019:idx <- rep(T, nrow(dat))
1593541018040:for (iv in input$ivsInput) {
1593541018056:idx <- idx & (dat[[iv]] == freq_df[[i,iv]])
1593541018073:}
1593541018088:to_remove_ids <- c(dat[[wid]][idx], to_remove_ids)
1593541018108:}
1593541018124:}
1593541028651:dat[!dat[[wid]] %in% to_remove_ids,]
1593541034898:dat <- dat[!dat[[wid]] %in% to_remove_ids,]
1593541040705:freq_table(dat, vars = input$ivsInput)
1593541242081:runApp()
1593541333307:runApp()
1593541438634:runApp()
1593541497822:runApp()
1593541729864:runApp()
1593541887905:runApp()
1593542038622:runApp()
1593542213042:runApp()
1593542230637:runApp()
1593543771004:runApp()
1593543945209:runApp()
1593545351636:runApp()
1593545497596:runApp()
1593547628178:runApp()
1593547925692:runApp()
1593549946984:runApp()
1593552302336:runApp()
1593552388131:?plotly_empty
1593552406990:runApp()
1593552483790:runApp()
1593552821963:runApp()
1593554551662:?quantile
1593555087321:source(paste0(getwd(),'/common/df2qqs.R'))
1593555088484:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593555090977:source(paste0(getwd(),'/modules/df2Table.R'))
1593555333064:dat <- df2qqs(dat, ivs)
1593555335458:dat
1593555359114:dat <- read_csv('data/fss-qpj.csv')
1593555370204:is
1593555372047:ivs
1593555390639:ivs = c('cenario','social','realizacao')
1593555406405:wid = 'UserID'
1593555409224:dat <- df2qqs(dat, ivs)
1593555415349:dat
1593555430369:ivs
1593555432378:dat <- df2qqs(dat, ivs)
1593555501999:library(stats)
1593555502375:df2qqs <- function(data, ivs) {
1593555502395:for (iv in ivs) {
1593555502416:if (is.numeric(data[[iv]])) {
1593555502433:quantiles <- quantile(data[[iv]])
1593555502452:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593555502470:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593555502488:})
1593555502509:data[[iv]] <- factor(data[[iv]], levels=c("low", "medium", "high"))
1593555502525:}
1593555502544:}
1593555502563:return(data)
1593555502581:}
1593555506684:dat <- df2qqs(dat, ivs)
1593555509966:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593555509984:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593555510002:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593555510024:nonNormalityIds <- outlierIds
1593555510045:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593555510065:for (i in seq(1,nrow(shapiro.test))) {
1593555510081:if (shapiro.test[i,]$p < 0.05) {
1593555510098:subdat <- pdat[(pdat[[ivs]] %in% shapiro.test[i,ivs]),]
1593555510113:nonNormalityIds <- c(identify_nonnormal(subdat, dv, wid, to_remove=outlierIds, plot=F), nonNormalityIds)
1593555510128:}
1593555510146:}
1593555510167:pdat <- dat[dat[[wid]] %in% nonNormalityIds,]
1593555510182:if (nrow(pdat) > 0) {
1593555510198:cbind(var = dv, mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds))
1593555510214:}
1593555510229:}))
1593555531040:dvs = c('media','dimension1', 'dimension2')
1593555534542:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593555534562:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593555534588:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593555534619:nonNormalityIds <- outlierIds
1593555534638:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593555534663:for (i in seq(1,nrow(shapiro.test))) {
1593555534678:if (shapiro.test[i,]$p < 0.05) {
1593555534695:subdat <- pdat[(pdat[[ivs]] %in% shapiro.test[i,ivs]),]
1593555534711:nonNormalityIds <- c(identify_nonnormal(subdat, dv, wid, to_remove=outlierIds, plot=F), nonNormalityIds)
1593555534728:}
1593555534747:}
1593555534770:pdat <- dat[dat[[wid]] %in% nonNormalityIds,]
1593555534808:if (nrow(pdat) > 0) {
1593555534831:cbind(var = dv, mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds))
1593555534850:}
1593555534868:}))
1593555543163:outliers
1593555558442:outliers <- getOutliers(initData, input$dvsInput, input$ivsInput)
1593555584010:outliers <- getOutliers(dat, dvs, ivs)
1593555593026:ivs
1593555595512:dvs
1593555612319:outliers <- getOutliers(dat, dvs, ivs)
1593555633441:dvs = c("media",'dimensao1','dimensao2')
1593555635759:outliers <- getOutliers(dat, dvs, ivs)
1593555641261:dat <- df2qqs(dat, ivs)
1593555642408:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593555642427:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593555642452:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593555642480:nonNormalityIds <- outlierIds
1593555642498:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593555642526:for (i in seq(1,nrow(shapiro.test))) {
1593555642544:if (shapiro.test[i,]$p < 0.05) {
1593555642561:subdat <- pdat[(pdat[[ivs]] %in% shapiro.test[i,ivs]),]
1593555642578:nonNormalityIds <- c(identify_nonnormal(subdat, dv, wid, to_remove=outlierIds, plot=F), nonNormalityIds)
1593555642594:}
1593555642611:}
1593555642631:pdat <- dat[dat[[wid]] %in% nonNormalityIds,]
1593555642645:if (nrow(pdat) > 0) {
1593555642660:cbind(var = dv, mutate(pdat, is.outlier = pdat[[wid]] %in% outlierIds))
1593555642697:}
1593555642720:}))
1593555661086:dv = 'media'
1593555667967:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593555669858:outlierIds
1593555674395:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593555676598:pdat
1593555682521:nonNormalityIds <- outlierIds
1593555684978:shapiro.test <- getShapiroTest(data = pdat, dv, ivs)
1593555850752:dat
1593555855818:dat <- df2qqs(dat, ivs)
1593555861449:outlierIds <- outliers[[wid]][which(outliers$var == dv)]
1593555862215:pdat <- dat[!dat[[wid]] %in% outlierIds,]
1593555873216:dv
1593555875741:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = pdat)
1593555878592:# Create a QQ plot of residuals
1593555878612:ggqqplot(residuals(model))
1593555903737:# Compute Shapiro-Wilk test of normality
1593555903755:shapiro_test(residuals(model))
1593556173944:model  <- lm(as.formula(paste(dv,"~", paste0("cenario", collapse = "*"))), data = pdat)
1593556175929:# Create a QQ plot of residuals
1593556175947:ggqqplot(residuals(model))
1593556178761:# Compute Shapiro-Wilk test of normality
1593556178795:shapiro_test(residuals(model))
1593556211638:pdat
1593556245999:ivs
1593556253034:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = group_by_at(pdat, vars(ivs)))
1593556256623:# Create a QQ plot of residuals
1593556256639:ggqqplot(residuals(model))
1593556261621:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = group_by_at(pdat, vars(ivs)))
1593556263964:# Create a QQ plot of residuals
1593556263982:ggqqplot(residuals(model))
1593556267007:# Compute Shapiro-Wilk test of normality
1593556267025:shapiro_test(residuals(model))
1593556308374:car::avPlots(residuals(model))
1593556311769:car::avPlots(residuals(model))
1593556326661:car::avPlot(residuals(model))
1593556341234:car::qqPlot(residuals(model))
1593556374064:# Compute Shapiro-Wilk test of normality
1593556374085:shapiro_test(residuals(model))
1593556596061:residuals(model)
1593556625649:rownames(pdat)
1593556640510:wid
1593556641724:rownames(pdat) <- pdat[[wid]]
1593556644025:model  <- lm(as.formula(paste(dv,"~", paste0("cenario", collapse = "*"))), data = pdat)
1593556646421:# .. create a QQ plot of residuals
1593556646441:ggqqplot(residuals(model))
1593556650411:car::qqPlot(residuals(model))
1593556674201:# .. compute Shapiro-Wilk test of normality
1593556674220:shapiro_test(residuals(model))
1593558534055:type="aov"
1593558613527:type="aov"
1593558911880:data
1593558919076:data <- dat
1593558922676:dv
1593558931547:wid
1593558942034:plot = T
1593558945003:as.list = F
1593558950335:to_remove = c()
1593558953184:step = 2
1593558960692:library(plotly)
1593559065600:colnames(data)
1593559097171:ivs
1593559115641:to_remove
1593559119451:to_remove = c()
1593559154508:data
1593559163575:data <- as.data.frame(data)
1593559171598:dat <- group_by_at(data, vars(ivs))
1593559180561:wid
1593559272471:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593559360462:shapiro_test(residuals(model))
1593559375116:shapiro_test(residuals(model))[["p.value"]]
1593559403224:shapiro_test(residuals(model))[["p.value"]] < 0.05
1593559480164:to_remove = c()
1593559487274:to_remove
1593559532342:car::qqPlot(residuals(model))
1593559542486:?qqPlot
1593559738313:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593559747049:# .. create a QQ plot of residuals
1593559747075:ggqqplot(residuals(model))
1593559755053:residuals(model)
1593559760793:car::qqPlot(residuals(model))
1593559990351:residuals(model)
1593560024366:?car::qq.plot()
1593560148053:?qqPlot
1593560468320:?qqline
1593560777130:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593560778604:model
1593560805587:residuals(model)
1593560811576:?residuals
1593560828378:residuals(model)
1593560844412:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593560857175:res <- residuals(model)
1593560858856:res
1593560886604:wid
1593560889605:dat <- group_by_at(data, vars(ivs))
1593560890192:names(dat) <- dat[[wid]]
1593560893298:dat <- group_by_at(data, vars(ivs))
1593560894998:names(dat) <- dat[[wid]]
1593560897377:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593560909090:colnames(dat)
1593560912998:dat
1593560927828:data
1593560933436:dat <- group_by_at(data, vars(ivs))
1593560936891:names(dat) <- dat[[wid]]
1593560947953:paste(dv,"~", paste0(ivs, collapse = "*")
1593560951053:)
1593560965796:dat
1593561001606:dat <- group_by_at(data, vars(ivs))
1593561002292:names(dat) <- dat[[wid]]
1593561005825:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593561030049:dat <- group_by_at(data, vars(ivs))
1593561032329:rownames(dat) <- dat[[wid]]
1593561045829:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593561046331:res <- residuals(model)
1593561062836:car::qqPlot(residuals(model))
1593561106826:dat <- group_by_at(data, vars(ivs))
1593561108662:rownames(dat) <- dat[[wid]]
1593561113854:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593561139156:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593561140882:dat <- group_by_at(data, vars(ivs))
1593561141266:rownames(dat) <- dat[[wid]]
1593561142718:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593561160558:shapiro_test(residuals(model))[["p.value"]] < 0.05
1593561164952:car::qqPlot(residuals(model))
1593561185414:?car::qqPlot
1593561231001:shapiro_test(residuals(model))[["p.value"]]
1593561255530:names(car::qqPlot(residuals(model)))
1593561279563:names(car::qqPlot(residuals(model)))
1593561348795:dat <- group_by_at(data, vars(ivs))
1593561349357:rownames(dat) <- dat[[wid]]
1593561350130:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593561353256:model
1593561364200:dat <- group_by_at(data, vars(ivs))
1593561364602:rownames(dat) <- dat[[wid]]
1593561365764:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593561367339:model
1593561379451:shapiro_test(residuals(model))[["p.value"]]
1593561388868:names(car::qqPlot(residuals(model)))
1593561395629:c(names(car::qqPlot(residuals(model))), to_remove)
1593561481790:dat <- group_by_at(data, vars(ivs))
1593561481955:rownames(dat) <- dat[[wid]]
1593561482636:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = dat)
1593561487033:to_remove
1593561491211:dat[[wid]]
1593561511537:to_remove = c("f0edcc26","cc15d10e")
1593561545653:idx <- which(!dat[[wid]] %in% to_remove)
1593561583537:idx
1593561656175:to_remove
1593561661811:!dat[[wid]] %in% to_remove
1593561916563:data
1593561966332:dat <- group_by_at(data[,c(wid,dv,ivs)], vars(ivs))
1593561967177:rownames(dat) <- dat[[wid]]
1593562137335:which(!dat[[wid]] %in% to_remove)
1593562142681:dat[which(!dat[[wid]] %in% to_remove),]
1593562165952:group_by_at(dat[which(!dat[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562181717:pdv <- group_by_at(dat[which(!dat[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562183604:names(pdv) <- pdv[[wid]]
1593562195843:pdv <- group_by_at(dat[which(!dat[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562199028:rownames(pdv) <- pdv[[wid]]
1593562203772:pdv
1593562214124:pdv <- group_by_at(dat[which(!dat[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562214660:rownames(pdv) <- pdv[[wid]]
1593562291956:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562293408:rownames(df) <- df[[wid]]
1593562295093:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593562302850:residuals(model)
1593562308198:shapiro_test(residuals(model))[["p.value"]]
1593562316321:shapiro_test(residuals(model))[["p.value"]] < 0.05
1593562318957:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562321058:rownames(df) <- df[[wid]]
1593562322289:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593562326225:shapiro_test(residuals(model))[["p.value"]]
1593562361999:car::qqPlot(residuals(model))
1593562384673:names(car::qqPlot(residuals(model)))
1593562387470:names(car::qqPlot(residuals(model)))
1593562417125:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593562420795:nonNormalityIds
1593562533891:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", step = 2, to_remove = c()) {
1593562533909:repeat {
1593562533927:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562533942:rownames(df) <- df[[wid]]
1593562533958:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593562533981:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593562533996:break()
1593562534010:}
1593562534023:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593562534037:to_remove <- c(nonNormalityIds, to_remove)
1593562534051:}
1593562534066:return(to_remove)
1593562534082:}
1593562592480:identify_nonnormal(data, dv="media", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593562639470:(nonNormalityIds <- identify_nonnormal(data, dv="media", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593562685927:(nonNormalityIds <- identify_nonnormal(data, dv="media", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593562688480:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593562699669:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao1", ivs = c("imersao","social","cenario"), wid = "UserID"))
1593562708132:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", step = 2, to_remove = c()) {
1593562708153:repeat {
1593562708173:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562708192:rownames(df) <- df[[wid]]
1593562708209:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593562708226:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593562708244:break()
1593562708262:}
1593562708278:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593562708295:to_remove <- c(nonNormalityIds, to_remove)
1593562708313:}
1593562708332:return(to_remove)
1593562708349:}
1593562739517:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", step = 2, to_remove = c()) {
1593562739537:repeat {
1593562739556:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593562739572:rownames(df) <- df[[wid]]
1593562739588:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593562739603:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593562739618:print(c("wilk", shapiro_test(residuals(model))[["p.value"]]))
1593562739634:break()
1593562739649:}
1593562739666:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593562739683:to_remove <- c(nonNormalityIds, to_remove)
1593562739703:}
1593562739718:return(to_remove)
1593562739737:}
1593562740788:(nonNormalityIds <- identify_nonnormal(data, dv="media", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593562743749:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao1", ivs = c("imersao","social","cenario"), wid = "UserID"))
1593562788069:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao1", ivs = c("cenario"), wid = "UserID"))
1593562812695:(nonNormalityIds <- identify_nonnormal(data, dv="media", ivs = c("cenario"), wid = "UserID"))
1593562847351:data <- read_csv('data/fss-qpj.csv')
1593562851371:(nonNormalityIds <- identify_nonnormal(data, dv="media", ivs = c("cenario"), wid = "UserID"))
1593562867983:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao1", ivs = c("cenario"), wid = "UserID"))
1593562872720:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao2", ivs = c("cenario"), wid = "UserID"))
1593562882181:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao3", ivs = c("cenario"), wid = "UserID"))
1593562910454:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao3", ivs = c("cenario"), wid = "row.pos"))
1593562934526:data[["row.pos"]] <- data$UserID
1593562936730:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao3", ivs = c("cenario"), wid = "row.pos"))
1593562953843:data[["row.pos"]] <- seq(1:nrow(data))
1593562958256:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao3", ivs = c("cenario"), wid = "row.pos"))
1593562975349:(nonNormalityIds <- identify_nonnormal(data, dv="media", ivs = c("cenario"), wid = "row.pos"))
1593562982846:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao2", ivs = c("cenario"), wid = "row.pos"))
1593562987577:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao3", ivs = c("cenario"), wid = "row.pos"))
1593562995099:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao4", ivs = c("cenario"), wid = "row.pos"))
1593563002698:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao5", ivs = c("cenario"), wid = "row.pos"))
1593563101345:gdat <- group_by(data, gender, risk, treatment)
1593563104311:data
1593563126407:gdat <- group_by(data, realizacao, social, cenario)
1593563128435:shapiro_test(pain_score)
1593563167847:?shapiro_test
1593563197026:gdat <- group_by(data, realizacao, social, cenario)
1593563197931:shapiro_test(gdat, media)
1593563208731:error()
1593563231680:gdat <- group_by(data, realizacao, social, cenario)
1593563232183:shapiro_test(gdat, media)
1593563298757:gdat <- group_by_at(data, vars(c("realizacao", "social", "cenario")))
1593563300315:shapiro_test(gdat, media)
1593563311227:ivs
1593563318956:gdat <- group_by_at(data, vars(c(ivs)))
1593563319663:shapiro_test(gdat, media)
1593563369851:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", step = 2, to_remove = c()) {
1593563369871:repeat {
1593563369888:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593563369904:rownames(df) <- df[[wid]]
1593563369919:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593563369936:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593563369953:print(c("wilk", shapiro_test(residuals(model))[["p.value"]]))
1593563369968:break()
1593563369983:}
1593563369997:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593563370012:to_remove <- c(nonNormalityIds, to_remove)
1593563370027:}
1593563370042:return(to_remove)
1593563370057:}
1593563371998:(nonNormalityIds <- identify_nonnormal(data, dv="media", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593563374051:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao1", ivs = c("imersao","social","cenario"), wid = "UserID"))
1593563374996:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao5", ivs = c("cenario"), wid = "row.pos"))
1593563382665:gdat <- group_by_at(data, vars(c(ivs)))
1593563383257:shapiro_test(gdat, media)
1593563410217:freq_table(data)
1593563419033:freq_table(data, vars = ivs)
1593563449898:data
1593563511634:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", step = 2, to_remove = c()) {
1593563511656:data <- df2qqs(data, ivs)
1593563511676:repeat {
1593563511695:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593563511720:rownames(df) <- df[[wid]]
1593563511740:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593563511759:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593563511784:print(c("wilk", shapiro_test(residuals(model))[["p.value"]]))
1593563511803:break()
1593563511827:}
1593563511850:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593563511871:to_remove <- c(nonNormalityIds, to_remove)
1593563511890:}
1593563511907:return(to_remove)
1593563511927:}
1593563516974:(nonNormalityIds <- identify_nonnormal(data, dv="media", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593563519006:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao1", ivs = c("imersao","social","cenario"), wid = "UserID"))
1593563523048:(nonNormalityIds <- identify_nonnormal(data, dv="dimensao5", ivs = c("cenario"), wid = "row.pos"))
1593563535848:gdat <- group_by_at(data, vars(c(ivs)))
1593563536512:shapiro_test(gdat, media)
1593563558672:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593563561338:shapiro_test(gdat, media)
1593563583669:freq_table(gdat, vars = ivs)
1593563590419:gdat
1593563598158:freq_table
1593563606567:freq_table(data, vars = ivs)
1593563621381:freq_table(df2qqs(data), vars = ivs)
1593563628641:ivs
1593563636720:?freq_table
1593563655416:df2qqs(data)
1593563663534:freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593563675102:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593563675616:shapiro_test(gdat, media)
1593563679545:freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593563760530:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593563761074:shapiro_test(gdat, media)
1593563762342:freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593563766298:shapiro_test(gdat, media)
1593563777861:freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593563834384:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593563834619:shapiro_test(gdat, media)
1593563835228:freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593563872302:shapiro_test(gdat, media)
1593563896819:shapiro.test <- shapiro_test(gdat, media)
1593563902773:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593563903107:shapiro.test <- shapiro_test(gdat, media)
1593563928731:?filter_if
1593563982186:shapiro.test$n
1593563992299:shapiro <- shapiro_test(gdat, media)
1593564008708:freq <- freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593564011753:freq
1593564032498:freq$n < 3
1593564046140:freq[freq$n < 3,]
1593564053610:freq[!freq$n < 3,]
1593564078141:freq <- freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593564078828:freq <- freq[!freq$n < 3,]
1593564081223:freq
1593564146567:freq <- freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593564147070:freq <- freq[!freq$n < 3,]
1593564150290:freq
1593564185483:freq <- freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593564186052:freq <- freq[!freq$n < 3,]
1593564191669:seq(i:nrow(freq))
1593564197078:seq(i:nrow(freq))
1593564207108:seq(1:nrow(freq))
1593564222801:freq <- freq_table(df2qqs(data, ivs = ivs), vars = ivs)
1593564223212:freq <- freq[!freq$n < 3,]
1593564368652:df <- df2qqs(data, ivs = ivs)
1593564368916:freq <- freq_table(df, vars = ivs)
1593564369884:freq <- freq[!freq$n < 3,]
1593564381892:seq(1:nrow(freq))
1593564431269:df <- df2qqs(data, ivs = ivs)
1593564431731:freq <- freq_table(df, vars = ivs)
1593564431936:freq <- freq[!freq$n < 3,]
1593564434021:freq
1593564471164:rep(T, nrow(df))
1593564513950:wid
1593564540630:ivs
1593564577588:iv = "cenario"
1593564596424:wid
1593564600446:iv
1593564617759:df[[iv]]
1593564634133:freq[[iv]]
1593564642399:freq[[iv]][i]
1593564650890:i = 5
1593564654942:freq[[iv]][i]
1593564658982:df[[iv]]
1593564664377:df[[iv]] == freq[[iv]][i]
1593564695349:df <- df2qqs(data, ivs = ivs)
1593564695867:idx <- rep(T, nrow(df))
1593564696727:freq <- freq_table(df, vars = ivs)
1593564697920:freq <- freq[!freq$n < 3,]
1593564713631:freq
1593564725758:df <- df2qqs(data, ivs = ivs)
1593564726043:idx <- rep(T, nrow(df))
1593564726881:freq <- freq_table(df, vars = ivs)
1593564727238:freq <- freq[!freq$n < 3,]
1593564759125:for (i in seq(1:nrow(freq))) {
1593564759147:for (iv in ivs) {
1593564759164:idx <- idx & df[[iv]] == freq[[iv]][i]
1593564759180:}
1593564759195:}
1593564774868:df[idx,]
1593564784542:idx
1593564814214:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593564814493:shapiro <- shapiro_test(gdat, media)
1593564815225:df <- df2qqs(data, ivs = ivs)
1593564815782:idx <- rep(T, nrow(df))
1593564816356:freq <- freq_table(df, vars = ivs)
1593564816678:freq <- freq[!freq$n < 3,]
1593564820896:freq
1593564890911:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593564891319:shapiro <- shapiro_test(gdat, media)
1593564891862:df <- df2qqs(data, ivs = ivs)
1593564892286:freq <- freq_table(df, vars = ivs)
1593564892799:freq <- freq[!freq$n < 3,]
1593565021851:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593565022112:shapiro <- shapiro_test(gdat, media)
1593565022326:df <- df2qqs(data, ivs = ivs)
1593565022709:freq <- freq_table(df, vars = ivs)
1593565023089:freq <- freq[!freq$n < 3,]
1593565031051:pdf <- do.call(rbind, lapply(seq(1:nrow(freq), FUN = function(i) {
1593565031072:idx <- rep(T, nrow(df))
1593565031086:for (iv in ivs) idx <- idx & df[[iv]] == freq[[iv]][i]
1593565031102:df[idx,]
1593565031116:})))
1593565036492:pdf
1593565073707:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593565073907:shapiro <- shapiro_test(gdat, media)
1593565074088:df <- df2qqs(data, ivs = ivs)
1593565075143:freq <- freq_table(df, vars = ivs)
1593565075348:freq <- freq[!freq$n < 3,]
1593565076974:pdf <- do.call(rbind, lapply(seq(1:nrow(freq), FUN = function(i) {
1593565076996:idx <- rep(T, nrow(df))
1593565077014:for (iv in ivs) { idx <- idx & (df[[iv]] == freq[[iv]][i]) }
1593565077028:return(df[idx,])
1593565077041:})))
1593565104544:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593565104720:shapiro <- shapiro_test(gdat, media)
1593565104918:df <- df2qqs(data, ivs = ivs)
1593565105088:freq <- freq_table(df, vars = ivs)
1593565105492:freq <- freq[!freq$n < 3,]
1593565106298:pdf <- do.call(rbind, lapply(seq(1:nrow(freq)), FUN = function(i) {
1593565106318:idx <- rep(T, nrow(df))
1593565106335:for (iv in ivs) { idx <- idx & (df[[iv]] == freq[[iv]][i]) }
1593565106350:return(df[idx,])
1593565106364:}))
1593565109948:pdf
1593565131735:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593565131919:shapiro <- shapiro_test(gdat, media)
1593565132071:df <- df2qqs(data, ivs = ivs)
1593565132221:freq <- freq_table(df, vars = ivs)
1593565132622:freq <- freq[!freq$n < 3,]
1593565133038:df <- do.call(rbind, lapply(seq(1:nrow(freq)), FUN = function(i) {
1593565133058:idx <- rep(T, nrow(df))
1593565133081:for (iv in ivs) { idx <- idx & (df[[iv]] == freq[[iv]][i]) }
1593565133100:return(df[idx,])
1593565133117:}))
1593565138485:freq_table(df, vars = ivs)
1593565183370:gdat <- group_by_at(df, vars(c(ivs)))
1593565184427:shapiro <- shapiro_test(gdf, media)
1593565194479:gdat <- group_by_at(df, vars(c(ivs)))
1593565195157:shapiro <- shapiro_test(gdat, media)
1593565197966:shapiro
1593565258814:?shapiro_test
1593565263105:gdat <- group_by_at(df, vars(c(ivs)))
1593565263657:shapiro <- shapiro_test(gdat, vars = "media")
1593565278109:gdat <- group_by_at(df, vars(c(ivs)))
1593565278307:shapiro <- shapiro_test(gdat, vars = "media")
1593565278942:add_significance(shapiro)
1593565528375:freq <- freq_table(df, vars = ivs)
1593565529563:freq <- freq[!freq$n < 3,]
1593565530386:df <- do.call(rbind, lapply(seq(1:nrow(freq)), FUN = function(i) {
1593565530405:idx <- rep(T, nrow(df))
1593565530423:for (iv in ivs) { idx <- idx & (df[[iv]] == freq[[iv]][i]) }
1593565530441:return(df[idx,])
1593565530458:}))
1593565532984:df
1593565546625:freq_table(df, vars = ivs)
1593565634891:remove_min_per_groups <- function(df, ivs, min = 3) {
1593565634908:freq <- freq_table(df, vars = ivs)
1593565634935:freq <- freq[!freq$n < min,]
1593565634961:do.call(rbind, lapply(seq(1:nrow(freq)), FUN = function(i) {
1593565634979:idx <- rep(T, nrow(df))
1593565634998:for (iv in ivs) { idx <- idx & (df[[iv]] == freq[[iv]][i]) }
1593565635013:return(df[idx,])
1593565635030:}))
1593565635046:}
1593565663055:remove_min_per_groups(data, ivs)
1593565787954:remove_min_per_groups <- function(data, ivs, min = 3) {
1593565787978:data <- df2qqs(data, ivs = ivs)
1593565788007:freq <- freq_table(data, vars = ivs)
1593565788025:freq <- freq[!freq$n < min,]
1593565788048:return(do.call(rbind, lapply(seq(1:nrow(freq)), FUN = function(i) {
1593565788065:idx <- rep(T, nrow(data))
1593565788080:for (iv in ivs) { idx <- idx & (data[[iv]] == freq[[iv]][i]) }
1593565788100:return(data[idx,])
1593565788121:})))
1593565788139:}
1593565793601:remove_min_per_groups(data, ivs)
1593565833835:df <- remove_min_per_groups(data, ivs)
1593565840120:freq_table(df, ivs)
1593565902841:?freq_table
1593566075512:library(rstatix)
1593566075752:source(paste0(getwd(),'/common/df2qqs.R'))
1593566079350:remove_min_per_groups <- function(data, ivs, min = 3) {
1593566079369:data <- df2qqs(data, ivs = ivs)
1593566079403:freq <- freq_table(data, vars = ivs)
1593566079424:freq <- freq[!freq$n < min,]
1593566079447:return(do.call(rbind, lapply(seq(1:nrow(freq)), FUN = function(i) {
1593566079465:idx <- rep(T, nrow(data))
1593566079500:for (iv in ivs) { idx <- idx & (data[[iv]] == freq[[iv]][i]) }
1593566079523:return(data[idx,])
1593566079545:})))
1593566079561:}
1593566272555:identify_nonnormal_by_residuals <- function(data, dv, ivs, wid = "row.pos", step = 2, to_remove = c()) {
1593566272574:data <- df2qqs(data, ivs)
1593566272591:repeat {
1593566272608:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593566272623:rownames(df) <- df[[wid]]
1593566272638:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593566272654:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593566272672:print(c("wilk", shapiro_test(residuals(model))[["p.value"]]))
1593566272687:break()
1593566272706:}
1593566272723:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593566272738:to_remove <- c(nonNormalityIds, to_remove)
1593566272753:}
1593566272772:return(to_remove)
1593566272786:}
1593566360958:data
1593566424226:source(paste0(getwd(),'/common/df2qqs.R'))
1593566424436:source(paste0(getwd(),'/common/dealing_with_groups.R'))
1593566424782:identify_nonnormal_by_residuals <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593566424801:data <- df2qqs(data, ivs)
1593566424821:repeat {
1593566424839:df <- group_by_at(data[which(!data[[wid]] %in% to_remove),c(wid,dv,ivs)], vars(ivs))
1593566424856:rownames(df) <- df[[wid]]
1593566424874:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593566424890:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593566424904:print(c("wilk", shapiro_test(residuals(model))[["p.value"]]))
1593566424920:break()
1593566424937:}
1593566424953:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593566424971:to_remove <- c(nonNormalityIds, to_remove)
1593566424989:}
1593566425009:return(to_remove)
1593566425026:}
1593566435960:data
1593566438218:data <- df2qqs(data, ivs)
1593566446611:data
1593566502350:data[iv]
1593566507395:data[[iv]]
1593566520557:quantiles <- quantile(data[[iv]])
1593566558531:initData <- read_csv('data/fss-qpj.csv')
1593566571952:quantiles <- quantile(data[[iv]])
1593566578644:quantiles <- quantile(initData[[iv]])
1593566598730:sapply(initData[[iv]], FUN = function(x) {
1593566598750:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593566598765:})
1593566633550:library(stats)
1593566635866:df2qqs <- function(data, ivs) {
1593566635885:data <- as.data.frame(data)
1593566635901:for (iv in ivs) {
1593566635918:if (is.numeric(data[[iv]])) {
1593566635950:quantiles <- quantile(data[[iv]])
1593566635969:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593566635987:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593566636005:})
1593566636030:data[[iv]] <- factor(data[[iv]], levels=c("low", "medium", "high"))
1593566636051:}
1593566636070:}
1593566636087:return(data)
1593566636102:}
1593566645669:data <- df2qqs(data, ivs)
1593566649974:data
1593566723829:df2qqs <- function(data, ivs) {
1593566723848:for (iv in ivs) {
1593566723867:if (is.numeric(data[[iv]])) {
1593566723882:quantiles <- quantile(data[[iv]])
1593566723899:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593566723916:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593566723932:})
1593566723949:data[[iv]] <- factor(data[[iv]], levels=c("low", "medium", "high"))
1593566723966:}
1593566723983:}
1593566723999:return(data)
1593566724015:}
1593566731124:data <- df2qqs(data, ivs)
1593566735091:data
1593566777881:library(rstatix)
1593566778064:source(paste0(getwd(),'/common/df2qqs.R'))
1593566778234:remove_min_per_groups <- function(data, ivs, min = 3) {
1593566778254:data <- df2qqs(data, ivs = ivs)
1593566778280:freq <- freq_table(data, vars = ivs)
1593566778297:freq <- freq[!freq$n < min,]
1593566778318:return(do.call(rbind, lapply(seq(1:nrow(freq)), FUN = function(i) {
1593566778335:idx <- rep(T, nrow(data))
1593566778350:for (iv in ivs) { idx <- idx & (data[[iv]] == freq[[iv]][i]) }
1593566778366:return(data[idx,])
1593566778383:})))
1593566778402:}
1593566788264:library(stats)
1593566788464:df2qqs <- function(data, ivs) {
1593566788482:for (iv in ivs) {
1593566788506:if (is.numeric(data[[iv]])) {
1593566788525:quantiles <- quantile(data[[iv]])
1593566788542:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593566788559:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593566788578:})
1593566788595:data[[iv]] <- factor(data[[iv]], levels=c("low", "medium", "high"))
1593566788611:}
1593566788629:}
1593566788647:return(data)
1593566788665:}
1593566921506:data <- as.data.frame(data)
1593566925152:for (iv in ivs) {
1593566925171:if (is.numeric(data[[iv]])) {
1593566925191:quantiles <- quantile(data[[iv]])
1593566925209:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593566925226:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593566925243:})
1593566925261:data[[iv]] <- factor(data[[iv]], levels=c("low", "medium", "high"))
1593566925277:}
1593566925295:}
1593566928487:dat
1593566933930:data
1593566942039:library(stats)
1593566942590:df2qqs <- function(data, ivs) {
1593566942610:data <- as.data.frame(data)
1593566942628:for (iv in ivs) {
1593566942647:if (is.numeric(data[[iv]])) {
1593566942662:quantiles <- quantile(data[[iv]])
1593566942680:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593566942699:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593566942717:})
1593566942735:data[[iv]] <- factor(data[[iv]], levels=c("low", "medium", "high"))
1593566942752:}
1593566942772:}
1593566942794:return(data)
1593566942812:}
1593566949559:data <- df2qqs(data, ivs)
1593566975113:data <- df2qqs(data, ivs)
1593566985101:data <- df2qqs(data, ivs)
1593566986019:gdat <- group_by_at(df2qqs(data, ivs), vars(c(ivs)))
1593566995709:data <- df2qqs(data, ivs)
1593566997113:gdat <- group_by_at(df2qqs(data, ivs), vars(ivs))
1593566998065:shapiro <- shapiro_test(gdat, media)
1593567034574:remove_min_per_groups(data, ivs)
1593567085844:data <- df2qqs(data, ivs)
1593567086365:gdat <- remove_min_per_groups(data, ivs)
1593567087255:gdat <- group_by_at(gdat, vars(ivs))
1593567087825:shapiro <- shapiro_test(gdat, media)
1593567090527:shapiro
1593567157519:data <- df2qqs(data, ivs)
1593567158133:gdat <- remove_min_per_groups(data, ivs)
1593567178701:gdat
1593567241851:dat <- df2qqs(data, ivs)
1593567243461:dat <- remove_min_per_groups(dat, ivs)
1593567340948:to_remove
1593567348427:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593567355040:dat <- df2qqs(data, ivs)
1593567355308:dat <- remove_min_per_groups(dat, ivs)
1593567357875:dat
1593567364054:nrow(dat)
1593567367038:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593567373313:nrow(gdat)
1593567393209:dat <- df2qqs(data, ivs)
1593567393695:dat <- remove_min_per_groups(dat, ivs)
1593567405755:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593567421768:dat <- df2qqs(data, ivs)
1593567422252:dat <- remove_min_per_groups(dat, ivs)
1593567423954:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593567424924:shapiro <- shapiro_test(gdat, vars = "dv")
1593567429017:shapiro
1593567516820:identify_nonnormal_by_residuals <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593567516838:data <- df2qqs(data, ivs)
1593567516859:repeat {
1593567516891:df <- group_by_at(data[which(!data[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593567516911:rownames(df) <- df[[wid]]
1593567516929:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593567516948:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593567516978:break()
1593567517002:}
1593567517019:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593567517037:to_remove <- c(nonNormalityIds, to_remove)
1593567517057:}
1593567517098:return(to_remove)
1593567517121:}
1593567536168:shapiro
1593567550498:dv
1593567556029:shapiro <- shapiro_test(gdat, vars = dv)
1593567561843:shapiro
1593567804514:shapiro
1593567910935:?qqPlot
1593568366887:colnames(data)
1593568388526:colnames(freq)
1593568412377:intersect(colnames(freq), colnames(data))
1593568491563:freq[1,]
1593568500469:colnames(freq[1,])
1593568717914:subset_by_tbl <- function(data, tbl, ivs = intersect(colnames(data), colnames(tbl))) {
1593568717942:do.call(rbind, lapply(seq(1:nrow(tbl)), FUN = function(i) {
1593568717960:idx <- rep(T, nrow(data))
1593568717977:for (iv in ivs) { idx <- idx & (data[[iv]] == tbl[[iv]][i]) }
1593568717995:return(data[idx,])
1593568718009:}))
1593568718026:}
1593568764071:ivs
1593568770633:subset_by_tbl(data, freq, ivs)
1593568844996:remove_min_per_groups <- function(data, ivs, min = 3) {
1593568845020:data <- df2qqs(data, ivs = ivs)
1593568845038:freq <- freq_table(data, vars = ivs)
1593568845057:freq <- freq[!freq$n < min,]
1593568845076:return(subset_by_tbl(data, freq, ivs))
1593568845096:}
1593568845469:subset_by_tbl <- function(data, tbl, ivs = intersect(colnames(data), colnames(tbl))) {
1593568845490:data <- df2qqs(data, ivs = ivs)
1593568845506:df <- do.call(rbind, lapply(seq(1:nrow(tbl)), FUN = function(i) {
1593568845524:idx <- rep(T, nrow(data))
1593568845541:for (iv in ivs) { idx <- idx & (data[[iv]] == tbl[[iv]][i]) }
1593568845558:return(data[idx,])
1593568845574:}))
1593568845592:return(df)
1593568845606:}
1593568881027:data <- df2qqs(data, ivs)
1593568889540:to_remove
1593568893149:df <- group_by_at(data[which(!data[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593568900574:dat <- df2qqs(data, ivs)
1593568907385:dat <- remove_min_per_groups(dat, ivs)
1593568925648:freq_table(dat, vars = ivs)
1593568956582:dat <- df2qqs(data, ivs)
1593568957116:dat <- remove_min_per_groups(dat, ivs)
1593568962193:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593568965540:shapiro <- shapiro_test(gdat, vars = dv)
1593568967508:shapiro
1593569042170:seq(1:nrow(shapiro))
1593569060892:i
1593569067364:i=4
1593569072800:seq(1:nrow(shapiro))
1593569116792:ivs
1593569119700:subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593569188151:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593569250230:?qqPlot
1593569341672:car::qqPlot(as.formula(paste(dv, '~', paste0(ivs, collapse = "*"))), data = df)
1593569358874:as.formula(paste(dv, '~', paste0(ivs, collapse = "*")))
1593569366177:df
1593569375522:car::qqPlot(as.formula(paste(dv, '~', paste0(ivs, collapse = "*"))), data = df)
1593569389970:df
1593569409262:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593569409777:rownames(df) <- df[[wid]]
1593569412138:d
1593569414809:df
1593569419551:car::qqPlot(as.formula(paste(dv, '~', paste0(ivs, collapse = "*"))), data = df)
1593569440438:car::qqPlot(as.formula(paste('~', dv)), data = df)
1593569495883:shapiro <- shapiro_test(gdat, vars = dv)
1593569498907:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593569500399:shapiro <- shapiro_test(gdat, vars = dv)
1593569502765:shapiro
1593569693490:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593569695944:shapiro <- shapiro_test(gdat, vars = dv)
1593569698448:shapiro
1593569806828:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593569808298:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593569809890:shapiro
1593569817988:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593569818478:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.06)
1593569819808:shapiro
1593570276836:library(rstatix)
1593570277065:source(paste0(getwd(),'/common/df2qqs.R'))
1593570277280:source(paste0(getwd(),'/common/dealing_with_groups.R'))
1593570277836:identify_nonnormal_by_residuals <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593570277861:data <- df2qqs(data, ivs)
1593570277882:repeat {
1593570277900:df <- group_by_at(data[which(!data[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593570277920:rownames(df) <- df[[wid]]
1593570277936:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593570277954:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593570277991:break()
1593570278011:}
1593570278031:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593570278049:to_remove <- c(nonNormalityIds, to_remove)
1593570278066:}
1593570278098:return(to_remove)
1593570278122:}
1593570278437:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593570278458:dat <- df2qqs(data, ivs)
1593570278494:dat <- remove_min_per_groups(dat, ivs)
1593570278513:repeat{
1593570278531:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593570278547:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593570278563:if (nrow(shapiro) == 0) break()
1593570278580:for (i in seq(1:nrow(shapiro))) {
1593570278596:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593570278612:rownames(df) <- df[[wid]]
1593570278645:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593570278668:to_remove <- c(nonNormalityIds, to_remove)
1593570278686:}
1593570278701:}
1593570278719:return(to_remove)
1593570278735:}
1593570314041:data <- read_csv('data/fss-qpj.csv')
1593570318931:(nonNormalityIds <- identify_nonnormal_by_groups(data, dv="media", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593570330191:(nonNormalityIds <- identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593570352085:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593570352108:dat <- df2qqs(data, ivs)
1593570352127:dat <- remove_min_per_groups(dat, ivs)
1593570352147:repeat{
1593570352166:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593570352189:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593570352208:if (nrow(shapiro) == 0) break()
1593570352225:for (i in seq(1:nrow(shapiro))) {
1593570352244:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593570352261:rownames(df) <- df[[wid]]
1593570352278:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593570352296:print(nonNormalityIds)
1593570352313:to_remove <- c(nonNormalityIds, to_remove)
1593570352338:}
1593570352356:}
1593570352373:return(to_remove)
1593570352390:}
1593570353941:(nonNormalityIds <- identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID"))
1593570434432:(nonNormalityIds <-
1593570434457:tryCatch(
1593570434480:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593570434496:, error = function(e) return(e) )
1593570434522:)
1593570445323:nonNormalityIds
1593570451629:nonNormalityIds$message
1593570642516:(nonNormalityIds <-
1593570642538:tryCatch(
1593570642559:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593570642575:, error = function(e) return(e) )
1593570642595:)
1593570759282:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593570759309:dat <- df2qqs(data, ivs)
1593570759328:dat <- remove_min_per_groups(dat, ivs)
1593570759346:repeat{
1593570759364:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593570759381:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593570759399:if (nrow(shapiro) == 0) break()
1593570759416:for (i in seq(1:nrow(shapiro))) {
1593570759434:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593570759452:rownames(df) <- df[[wid]]
1593570759471:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593570759491:print(c(shapiro[i,], nonNormalityIds))
1593570759509:to_remove <- c(nonNormalityIds, to_remove)
1593570759525:}
1593570759540:}
1593570759556:return(to_remove)
1593570759573:}
1593570762565:(nonNormalityIds <-
1593570762587:tryCatch(
1593570762604:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593570762620:, error = function(e) return(e) )
1593570762640:)
1593570797308:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593570797326:dat <- df2qqs(data, ivs)
1593570797345:dat <- remove_min_per_groups(dat, ivs)
1593570797362:repeat{
1593570797382:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593570797400:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593570797417:if (nrow(shapiro) == 0) break()
1593570797436:for (i in seq(1:nrow(shapiro))) {
1593570797454:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593570797471:rownames(df) <- df[[wid]]
1593570797496:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593570797515:print(c(as.data.frame(shapiro[i,]), nonNormalityIds))
1593570797533:to_remove <- c(nonNormalityIds, to_remove)
1593570797553:}
1593570797571:}
1593570797590:return(to_remove)
1593570797608:}
1593570800020:(nonNormalityIds <-
1593570800040:tryCatch(
1593570800057:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593570800075:, error = function(e) return(e) )
1593570800099:)
1593570913101:c("asdad","dfdd")
1593570922664:typeof(c("asdad","dfdd"))
1593570928563:typeof(c("asdad","dfdd",3))
1593570932440:typeof(c("asdad","dfdd",3,5))
1593570940587:typeof(c(2,1,3,5))
1593570951076:typeof(list(2,1,3,5))
1593571567218:?freq_table
1593572120869:library(rstatix)
1593572121051:source(paste0(getwd(),'/common/df2qqs.R'))
1593572121194:subset_by_tbl <- function(data, tbl, ivs = intersect(colnames(data), colnames(tbl))) {
1593572121211:data <- df2qqs(data, ivs = ivs)
1593572121232:df <- do.call(rbind, lapply(seq(1:nrow(tbl)), FUN = function(i) {
1593572121252:idx <- rep(T, nrow(data))
1593572121272:for (iv in ivs) { idx <- idx & (data[[iv]] == tbl[[iv]][i]) }
1593572121291:return(data[idx,])
1593572121312:}))
1593572121327:return(df)
1593572121346:}
1593572121371:remove_min_per_groups <- function(data, ivs, min = 3) {
1593572121395:data <- df2qqs(data, ivs = ivs)
1593572121418:freq <- freq_table(data, vars = ivs)
1593572121437:freq <- freq[!freq$n < min,]
1593572121455:return(subset_by_tbl(data, freq, ivs))
1593572121472:}
1593572121610:data_with_min_per_groups <- function(data, ivs, min = 3) {
1593572121631:data <- df2qqs(data, ivs = ivs)
1593572121651:freq <- freq_table(data, vars = ivs)
1593572121670:freq <- freq[freq$n < min,]
1593572121687:return(subset_by_tbl(data, freq, ivs))
1593572121702:}
1593572121740:get_ids_of_min_per_groups <- function(dat, ivs, wid, min = 3) {
1593572121759:df <- data_with_min_per_groups(dat, ivs, min)
1593572121781:return(df[[wid]])
1593572121800:}
1593572314756:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593572314777:dat <- df2qqs(data, ivs)
1593572314798:to_remove <- c(get_ids_of_min_per_groups(dat, ivs, wid), to_remove)
1593572314817:repeat{
1593572314834:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593572314857:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593572314875:if (nrow(shapiro) == 0) break()
1593572314893:for (i in seq(1:nrow(shapiro))) {
1593572314911:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593572314929:rownames(df) <- df[[wid]]
1593572314947:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593572314965:to_remove <- c(nonNormalityIds, to_remove)
1593572314983:}
1593572315001:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593572315019:}
1593572315037:return(to_remove)
1593572315058:}
1593572321494:(nonNormalityIds <-
1593572321515:tryCatch(
1593572321541:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593572321561:, error = function(e) return(e) )
1593572321583:)
1593572404248:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593572404267:dat <- df2qqs(data, ivs)
1593572404288:to_remove <- c(get_ids_of_min_per_groups(dat, ivs, wid), to_remove)
1593572404309:repeat{
1593572404330:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593572404346:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593572404367:if (nrow(shapiro) == 0) break()
1593572404383:for (i in seq(1:nrow(shapiro))) {
1593572404408:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593572404429:rownames(df) <- df[[wid]]
1593572404444:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593572404461:to_remove <- c(nonNormalityIds, to_remove)
1593572404480:}
1593572404499:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593572404515:print(to_remove)
1593572404530:}
1593572404554:return(to_remove)
1593572404573:}
1593572407332:(nonNormalityIds <-
1593572407368:tryCatch(
1593572407387:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593572407406:, error = function(e) return(e) )
1593572407434:)
1593572517813:get_ids_of_min_per_groups <- function(dat, ivs, wid, min = 3) {
1593572517832:df <- data_with_min_per_groups(dat, ivs, min)
1593572517849:return(unique(df[[wid]]))
1593572517868:}
1593572527368:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593572527387:dat <- df2qqs(data, ivs)
1593572527407:to_remove <- c(get_ids_of_min_per_groups(dat, ivs, wid), to_remove)
1593572527426:repeat{
1593572527445:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593572527464:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593572527483:if (nrow(shapiro) == 0) break()
1593572527501:for (i in seq(1:nrow(shapiro))) {
1593572527518:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593572527537:rownames(df) <- df[[wid]]
1593572527557:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593572527578:to_remove <- c(nonNormalityIds, to_remove)
1593572527592:}
1593572527610:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593572527625:print(to_remove)
1593572527641:}
1593572527659:return(to_remove)
1593572527677:}
1593572529611:(nonNormalityIds <-
1593572529631:tryCatch(
1593572529651:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593572529668:, error = function(e) return(e) )
1593572529694:)
1593572680336:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593572680356:dat <- df2qqs(data, ivs)
1593572680375:repeat{
1593572680392:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593572680408:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593572680424:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593572680442:if (nrow(shapiro) == 0) break()
1593572680456:for (i in seq(1:nrow(shapiro))) {
1593572680472:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593572680489:rownames(df) <- df[[wid]]
1593572680505:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593572680520:to_remove <- c(nonNormalityIds, to_remove)
1593572680537:}
1593572680556:print(to_remove)
1593572680572:}
1593572680588:return(to_remove)
1593572680604:}
1593572681591:(nonNormalityIds <-
1593572681609:tryCatch(
1593572681628:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593572681647:, error = function(e) return(e) )
1593572681669:)
1593572716531:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593572716549:dat <- df2qqs(data, ivs)
1593572716576:repeat{
1593572716595:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593572716615:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593572716634:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593572716652:(shapiro)
1593572716668:if (nrow(shapiro) == 0) break()
1593572716715:for (i in seq(1:nrow(shapiro))) {
1593572716736:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593572716753:rownames(df) <- df[[wid]]
1593572716772:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593572716789:to_remove <- c(nonNormalityIds, to_remove)
1593572716804:}
1593572716835:}
1593572716854:return(to_remove)
1593572716874:}
1593572722534:(nonNormalityIds <-
1593572722562:tryCatch(
1593572722583:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593572722600:, error = function(e) return(e) )
1593572722624:)
1593572738545:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593572738569:dat <- df2qqs(data, ivs)
1593572738592:repeat{
1593572738611:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593572738628:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593572738648:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593572738665:print(shapiro)
1593572738678:if (nrow(shapiro) == 0) break()
1593572738712:for (i in seq(1:nrow(shapiro))) {
1593572738739:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593572738757:rownames(df) <- df[[wid]]
1593572738771:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593572738787:to_remove <- c(nonNormalityIds, to_remove)
1593572738804:}
1593572738824:}
1593572738842:return(to_remove)
1593572738855:}
1593572739778:(nonNormalityIds <-
1593572739799:tryCatch(
1593572739818:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593572739835:, error = function(e) return(e) )
1593572739856:)
1593572830123:library(rstatix)
1593572830154:source(paste0(getwd(),'/common/df2qqs.R'))
1593572830184:subset_by_tbl <- function(data, tbl, ivs = intersect(colnames(data), colnames(tbl))) {
1593572830202:data <- df2qqs(data, ivs = ivs)
1593572830219:df <- do.call(rbind, lapply(seq(1:nrow(tbl)), FUN = function(i) {
1593572830238:idx <- rep(T, nrow(data))
1593572830256:for (iv in ivs) { idx <- idx & (data[[iv]] == tbl[[iv]][i]) }
1593572830276:return(data[idx,])
1593572830296:}))
1593572830314:return(df)
1593572830332:}
1593572830355:remove_min_per_groups <- function(data, ivs, min = 3) {
1593572830373:data <- df2qqs(data, ivs = ivs)
1593572830392:freq <- freq_table(data, vars = ivs)
1593572830411:freq <- freq[!freq$n < min,]
1593572830433:return(subset_by_tbl(data, freq, ivs))
1593572830452:}
1593572830476:data_with_min_per_groups <- function(data, ivs, min = 3) {
1593572830496:data <- df2qqs(data, ivs = ivs)
1593572830514:freq <- freq_table(data, vars = ivs)
1593572830537:freq <- freq[freq$n < min,]
1593572830555:return(subset_by_tbl(data, freq, ivs))
1593572830573:}
1593572830596:get_ids_of_min_per_groups <- function(dat, ivs, wid, min = 3) {
1593572830614:df <- data_with_min_per_groups(dat, ivs, min)
1593572830632:return(unique(df[[wid]]))
1593572830651:}
1593572886301:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593572886321:dat <- df2qqs(data, ivs)
1593572886345:repeat{
1593572886366:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593572886383:print(data_with_min_per_groups(gdat, ivs))
1593572886402:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593572886426:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593572886446:print(shapiro)
1593572886464:if (nrow(shapiro) == 0) break()
1593572886483:for (i in seq(1:nrow(shapiro))) {
1593572886502:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593572886522:rownames(df) <- df[[wid]]
1593572886542:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593572886560:to_remove <- c(nonNormalityIds, to_remove)
1593572886578:}
1593572886605:}
1593572886625:return(to_remove)
1593572886643:}
1593572887565:(nonNormalityIds <-
1593572887585:tryCatch(
1593572887610:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593572887632:, error = function(e) return(e) )
1593572887657:)
1593572905425:dv="dimensao1"
1593572909105:ivs = c("realizacao","social","cenario")
1593572912219:wid = "UserID"
1593572921734:dat <- df2qqs(data, ivs)
1593572928950:to_remove = c()
1593572934180:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593572936079:gdat
1593572954370:print(data_with_min_per_groups(gdat, ivs))
1593572984348:get_ids_of_min_per_groups(gdat, ivs, wid)
1593573178670:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573190289:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573191985:gdat
1593573267372:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593573267393:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573267423:repeat{
1593573267440:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573267460:gdat <- group_by_at(dat[which(!dat[[wid]] %in% to_remove),], vars(ivs))
1593573267486:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573267506:if (nrow(shapiro) == 0) break()
1593573267525:for (i in seq(1:nrow(shapiro))) {
1593573267545:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573267565:rownames(df) <- df[[wid]]
1593573267583:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573267606:to_remove <- c(nonNormalityIds, to_remove)
1593573267624:}
1593573267659:}
1593573267681:return(to_remove)
1593573267698:}
1593573268752:(nonNormalityIds <-
1593573268770:tryCatch(
1593573268790:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593573268809:, error = function(e) return(e) )
1593573268840:)
1593573418039:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593573418065:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573418085:repeat{
1593573418103:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573418122:gdat <- group_by_at(data[which(!data[[wid]] %in% to_remove),], vars(ivs))
1593573418141:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573418162:print(shapiro)
1593573418178:if (nrow(shapiro) == 0) break()
1593573418193:for (i in seq(1:nrow(shapiro))) {
1593573418209:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573418255:rownames(df) <- df[[wid]]
1593573418277:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573418293:to_remove <- c(nonNormalityIds, to_remove)
1593573418310:}
1593573418327:}
1593573418347:return(to_remove)
1593573418381:}
1593573419190:(nonNormalityIds <-
1593573419209:tryCatch(
1593573419228:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593573419242:, error = function(e) return(e) )
1593573419264:)
1593573490049:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593573490070:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573490088:repeat{
1593573490106:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573490122:print(c(to_remove, length(to_remove)))
1593573490139:gdat <- group_by_at(data[which(!data[[wid]] %in% to_remove),], vars(ivs))
1593573490172:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573490188:print(shapiro)
1593573490208:if (nrow(shapiro) == 0) break()
1593573490226:for (i in seq(1:nrow(shapiro))) {
1593573490244:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573490262:rownames(df) <- df[[wid]]
1593573490279:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573490314:to_remove <- c(nonNormalityIds, to_remove)
1593573490336:}
1593573490352:}
1593573490374:return(to_remove)
1593573490391:}
1593573491111:(nonNormalityIds <-
1593573491129:tryCatch(
1593573491156:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593573491174:, error = function(e) return(e) )
1593573491196:)
1593573545072:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593573545092:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573545109:repeat{
1593573545129:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573545146:print(c(to_remove, length(to_remove)))
1593573545163:gdat <- group_by_at(data[which(!data[[wid]] %in% to_remove),], vars(ivs))
1593573545181:print(gdat)
1593573545198:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573545215:print(shapiro)
1593573545234:if (nrow(shapiro) == 0) break()
1593573545251:for (i in seq(1:nrow(shapiro))) {
1593573545270:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573545286:rownames(df) <- df[[wid]]
1593573545304:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573545325:to_remove <- c(nonNormalityIds, to_remove)
1593573545348:}
1593573545366:}
1593573545384:return(to_remove)
1593573545405:}
1593573545662:(nonNormalityIds <-
1593573545684:tryCatch(
1593573545721:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593573545744:, error = function(e) return(e) )
1593573545767:)
1593573599298:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593573599319:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573599339:repeat{
1593573599356:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573599382:print(c(to_remove, length(to_remove)))
1593573599406:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593573599426:print(gdat)
1593573599444:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573599460:print(shapiro)
1593573599480:if (nrow(shapiro) == 0) break()
1593573599496:for (i in seq(1:nrow(shapiro))) {
1593573599515:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573599550:rownames(df) <- df[[wid]]
1593573599574:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573599592:to_remove <- c(nonNormalityIds, to_remove)
1593573599608:}
1593573599626:}
1593573599644:return(to_remove)
1593573599662:}
1593573600497:(nonNormalityIds <-
1593573600518:tryCatch(
1593573600540:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593573600558:, error = function(e) return(e) )
1593573600576:)
1593573625180:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573625964:repeat{
1593573625983:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573626003:print(c(to_remove, length(to_remove)))
1593573626020:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593573626038:print(gdat)
1593573626071:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573626095:print(shapiro)
1593573626118:if (nrow(shapiro) == 0) break()
1593573626134:for (i in seq(1:nrow(shapiro))) {
1593573626151:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573626171:rownames(df) <- df[[wid]]
1593573626188:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573626204:to_remove <- c(nonNormalityIds, to_remove)
1593573626220:}
1593573626237:}
1593573638110:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573640763:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573641908:print(c(to_remove, length(to_remove)))
1593573643928:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593573644633:print(gdat)
1593573650411:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573652915:print(shapiro)
1593573673088:nrow(shapiro) == 0
1593573682496:for (i in seq(1:nrow(shapiro))) {
1593573682517:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573682535:rownames(df) <- df[[wid]]
1593573682553:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573682571:to_remove <- c(nonNormalityIds, to_remove)
1593573682589:}
1593573732794:shapiro
1593573770242:print(shapiro)
1593573770845:if (nrow(shapiro) == 0) break()
1593573771724:for (i in seq(1:nrow(shapiro))) {
1593573771742:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573771760:rownames(df) <- df[[wid]]
1593573771778:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573771793:to_remove <- c(nonNormalityIds, to_remove)
1593573771810:}
1593573791595:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573792143:print(c(to_remove, length(to_remove)))
1593573801306:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593573802457:print(gdat)
1593573811536:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573813727:print(shapiro)
1593573822504:nrow(shapiro)
1593573855845:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593573855869:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573855890:repeat{
1593573855908:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573855929:print(c(to_remove, length(to_remove)))
1593573855944:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593573855963:print(gdat)
1593573855977:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573855991:print(shapiro)
1593573856006:if (nrow(shapiro) == 0) break()
1593573856023:for (i in seq(1:nrow(shapiro))) {
1593573856037:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573856055:rownames(df) <- df[[wid]]
1593573856071:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573856087:to_remove <- c(nonNormalityIds, to_remove)
1593573856101:}
1593573856116:}
1593573856129:return(to_remove)
1593573856143:}
1593573860796:dv="dimensao1"
1593573865717:ivs = c("realizacao","social","cenario")
1593573868392:wid = "UserID"
1593573871599:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573873230:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573873604:print(c(to_remove, length(to_remove)))
1593573875104:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593573879404:print(gdat)
1593573891282:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573892947:print(shapiro)
1593573904095:nrow(shapiro) == 0
1593573911042:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573911685:repeat{
1593573911703:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573911723:print(c(to_remove, length(to_remove)))
1593573911740:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593573911763:print(gdat)
1593573911780:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573911796:print(shapiro)
1593573911816:if (nrow(shapiro) == 0) break()
1593573911835:for (i in seq(1:nrow(shapiro))) {
1593573911852:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573911866:rownames(df) <- df[[wid]]
1593573911884:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573911900:to_remove <- c(nonNormalityIds, to_remove)
1593573911916:}
1593573911937:}
1593573922810:data
1593573928471:(nonNormalityIds <-
1593573928490:tryCatch(
1593573928507:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593573928529:, error = function(e) return(e) )
1593573928554:)
1593573941124:(nonNormalityIds <-
1593573941144:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593573941169:)
1593573964287:dv="dimensao1"
1593573970366:ivs = c("realizacao","social","cenario")
1593573973474:data
1593573978061:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593573979865:repeat{
1593573979887:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593573979905:print(c(to_remove, length(to_remove)))
1593573979926:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593573979943:print(gdat)
1593573979959:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593573979973:print(shapiro)
1593573979994:if (nrow(shapiro) == 0) break()
1593573980014:for (i in seq(1:nrow(shapiro))) {
1593573980029:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593573980042:rownames(df) <- df[[wid]]
1593573980063:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593573980078:to_remove <- c(nonNormalityIds, to_remove)
1593573980096:}
1593573980114:}
1593573989914:to_remove
1593574053385:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593574053406:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593574053424:repeat{
1593574053447:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574053463:print(c(to_remove, length(to_remove)))
1593574053481:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574053499:print(gdat)
1593574053514:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593574053530:print(c(shapiro, nrow(shapiro)))
1593574053543:if (nrow(shapiro) == 0) break()
1593574053558:for (i in seq(1:nrow(shapiro))) {
1593574053576:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593574053591:rownames(df) <- df[[wid]]
1593574053605:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593574053620:to_remove <- c(nonNormalityIds, to_remove)
1593574053635:}
1593574053651:}
1593574053668:return(setdiff(unique(to_remove), NA))
1593574053686:}
1593574054241:(nonNormalityIds <-
1593574054261:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593574054287:)
1593574103834:dv
1593574106825:ivs
1593574109796:wid
1593574125042:to_remove
1593574128985:to_remove = c()
1593574131900:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593574135104:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574135823:print(c(to_remove, length(to_remove)))
1593574138563:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574139886:print(gdat)
1593574141666:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593574145175:print(c(shapiro, nrow(shapiro)))
1593574164386:print(shapiro); print(nrow(shapiro)))
1593574169664:print(shapiro); print(nrow(shapiro))
1593574189275:for (i in seq(1:nrow(shapiro))) {
1593574189294:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593574189313:rownames(df) <- df[[wid]]
1593574189327:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593574189345:to_remove <- c(nonNormalityIds, to_remove)
1593574189364:}
1593574201803:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574202836:print(c(to_remove, length(to_remove)))
1593574207443:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574208959:print(gdat)
1593574215823:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593574229528:gdat
1593574284686:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574285091:print(c(to_remove, length(to_remove)))
1593574285659:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574286365:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574297127:print(gdat)
1593574319102:to_remove = c()
1593574320384:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593574321914:gdat
1593574380204:to_remove = c()
1593574381216:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593574381794:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574410024:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574412338:gdat
1593574515394:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593574515414:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593574515434:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574515452:repeat{
1593574515469:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574515484:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574515501:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574515521:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593574515537:if (nrow(shapiro) == 0) break()
1593574515579:for (i in seq(1:nrow(shapiro))) {
1593574515594:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593574515614:rownames(df) <- df[[wid]]
1593574515633:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593574515652:to_remove <- c(nonNormalityIds, to_remove)
1593574515673:}
1593574515690:}
1593574515704:return(setdiff(unique(to_remove), NA))
1593574515722:}
1593574516888:(nonNormalityIds <-
1593574516911:identify_nonnormal_by_groups(data, dv="dimensao1", ivs = c("realizacao","social","cenario"), wid = "UserID")
1593574516937:)
1593574802898:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593574802919:nonNormalityIds <- identify_nonnormal_by_residuals(data, dv, ivs, wid, to_remove)
1593574802936:nonNormalityIds <- c(identify_nonnormal_by_groups(data, dv, ivs, wid, nonNormalityIds), nonNormalityIds)
1593574802954:return(unique(nonNormalityIds))
1593574802969:}
1593574809834:library(rstatix)
1593574809862:source(paste0(getwd(),'/common/df2qqs.R'))
1593574809882:source(paste0(getwd(),'/common/dealing_with_groups.R'))
1593574809907:identify_nonnormal_by_residuals <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593574809926:data <- df2qqs(data, ivs)
1593574809946:repeat {
1593574809963:df <- group_by_at(data[which(!data[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593574809983:rownames(df) <- df[[wid]]
1593574810000:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593574810019:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593574810035:break()
1593574810052:}
1593574810070:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593574810090:to_remove <- c(nonNormalityIds, to_remove)
1593574810108:}
1593574810126:return(to_remove)
1593574810144:}
1593574810170:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593574810187:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593574810205:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574810223:repeat{
1593574810241:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574810260:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593574810279:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593574810296:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593574810314:if (nrow(shapiro) == 0) break()
1593574810331:for (i in seq(1:nrow(shapiro))) {
1593574810350:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593574810371:rownames(df) <- df[[wid]]
1593574810389:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593574810406:to_remove <- c(nonNormalityIds, to_remove)
1593574810428:}
1593574810454:}
1593574810472:return(setdiff(unique(to_remove), NA))
1593574810491:}
1593574810519:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593574810538:nonNormalityIds <- identify_nonnormal_by_residuals(data, dv, ivs, wid, to_remove)
1593574810556:nonNormalityIds <- c(identify_nonnormal_by_groups(data, dv, ivs, wid, nonNormalityIds), nonNormalityIds)
1593574810576:return(unique(nonNormalityIds))
1593574810594:}
1593575045093:library(rstatix)
1593575045115:source(paste0(getwd(),'/common/df2qqs.R'))
1593575045138:source(paste0(getwd(),'/common/dealing_with_groups.R'))
1593575045163:identify_nonnormal_by_residuals <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593575045178:data <- df2qqs(data, ivs)
1593575045198:repeat {
1593575045214:df <- group_by_at(data[which(!data[[wid]] %in% to_remove), c(wid,dv,ivs)], vars(ivs))
1593575045228:rownames(df) <- df[[wid]]
1593575045242:model  <- lm(as.formula(paste(dv,"~", paste0(ivs, collapse = "*"))), data = df)
1593575045261:if (shapiro_test(residuals(model))[["p.value"]] > 0.05) {
1593575045278:break()
1593575045297:}
1593575045334:nonNormalityIds <- names(car::qqPlot(residuals(model)))
1593575045358:to_remove <- c(nonNormalityIds, to_remove)
1593575045376:}
1593575045393:return(to_remove)
1593575045410:}
1593575045433:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593575045451:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1593575045468:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593575045487:repeat{
1593575045507:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593575045525:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1593575045543:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1593575045560:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1593575045578:if (nrow(shapiro) == 0) break()
1593575045596:for (i in seq(1:nrow(shapiro))) {
1593575045614:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1593575045632:rownames(df) <- df[[wid]]
1593575045650:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1593575045667:to_remove <- c(nonNormalityIds, to_remove)
1593575045685:}
1593575045704:}
1593575045721:return(setdiff(unique(to_remove), NA))
1593575045738:}
1593575045766:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1593575045784:nonNormalityIds <- identify_nonnormal_by_residuals(data, dv, ivs, wid, to_remove)
1593575045804:nonNormalityIds <- c(identify_nonnormal_by_groups(data, dv, ivs, wid, nonNormalityIds), nonNormalityIds)
1593575045822:return(unique(nonNormalityIds))
1593575045848:}
1593575321171:runApp()
1593575742489:runApp()
1593576012550:runApp()
1593576332173:dat <- read_csv('data/fss-qpj.csv')
1593576334985:dv
1593576344508:dv = 'dimensao1'
1593576355341:wid='UserID'
1593576376572:outlierIds = c()
1593576385551:identify_nonnormal(dat, dv, ivs, wid, outlierIds)
1593576391390:ivs
1593576419128:ivs = c("realizacao","social", "cenario")
1593576423147:nonNormalityIds <- identify_nonnormal(dat, dv, ivs, wid, outlierIds)
1593576442128:runApp()
1593576542990:initData
1593576575770:initData <- read_csv('/data/fss-qpj.csv')
1593576583246:initData <- read_csv('data/fss-qpj.csv')
1593576661330:input = list(dvsInput='dimensao1', ivsInput=c('realizacao','social','cenario'), outliers = c())
1593576666575:nonNormality <- getNonNormality(initData, input$dvsInput, input$ivsInput, wid, values$outliers)
1593576691740:values=list(outliers = c())
1593576694975:nonNormality <- getNonNormality(initData, input$dvsInput, input$ivsInput, wid, values$outliers)
1593576731260:runApp()
1593576864824:initData
1593576889831:input
1593576950523:runApp()
1593577015488:initData
1593577035427:initData = read_csv('data/fss-qpj.csv')
1593577043035:[1] "dimensao1"  "realizacao" "social"     "cenario"    "row.pos"
1593577068275:initData[["row.pos"]] <- seq(1:nrow(initData))
1593577080620:input$dvsInput
1593577092167:input$ivsInput
1593577109725:wid='row.pos'
1593577113088:nonNormality <- getNonNormality(initData, input$dvsInput, input$ivsInput, wid, values$outliers)
1593577122079:nonNormality
1593577161447:runApp()
1593578103363:runApp()
1593578403107:runApp()
1593578670840:runApp()
1593579769891:runApp()
1593580224078:library(DT)
1593580224624:library(plotly)
1593580224653:library(rstatix)
1593580224708:source(paste0(getwd(),'/common/df2qqs.R'))
1593580224992:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593580225308:source(paste0(getwd(),'/modules/df2Table.R'))
1593580320178:source(paste0(getwd(),'/common/df2qqs.R'))
1593580320347:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593580320544:source(paste0(getwd(),'/common/dealing_with_groups.R'))
1593580323173:source(paste0(getwd(),'/modules/df2Table.R'))
1593580342940:dat
1593580607967:data_with_min_per_groups(subset(data, var == dv))
1593580620652:dv
1593580634414:data <- dat
1593580637025:dat
1593580676126:data <- cbind(var = dv, dat)
1593580679769:data_with_min_per_groups(subset(data, var == dv))
1593580700599:ivs = c('realizacao','social','cenario')
1593580703303:data_with_min_per_groups(subset(data, var == dv))
1593580714711:data_with_min_per_groups(subset(data, var == dv), ivs)
1593580727688:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593580730402:dat
1593580760034:freq_table(dat)
1593580769430:freq_table(dat, vars = ivs)
1593580806270:sample_size_problem = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593580806286:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593580806304:cbind(var = dv, freq_table(dat, vars = ivs))
1593580806321:}))
1593580820570:dvs = c('media','dimensao1')
1593580824437:sample_size_problem = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593580824455:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593580824472:cbind(var = dv, freq_table(dat, vars = ivs))
1593580824489:}))
1593580832456:sample_size_problem
1593580859614:data
1593580885076:data = rbind(data, cbind(var = 'media', data))
1593580898598:colnames(data)
1593580915673:data = rbind(data, cbind(var = 'media', data))
1593580930545:colnames(data)
1593580961507:data = rbind(data, cbind(var = 'media', data[,-c('var')]))
1593580997816:data = rbind(data, cbind(var = 'media', select(data, -starts_with("var")) ))
1593581003387:sample_size_problem = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581003408:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593581003428:cbind(var = dv, freq_table(dat, vars = ivs))
1593581003446:})),
1593581003460:shapiro.test = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581003478:dat <- as.data.frame(subset(data, var == dv))
1593581003498:data_with_min_per_groups
1593581003520:shapiro_test2(dat, dv, ivs)
1593581003534:})))
1593581008405:sample_size_problem = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581008424:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593581008443:cbind(var = dv, freq_table(dat, vars = ivs))
1593581008458:}))
1593581014249:sample_size_problem
1593581092924:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593581097026:dat
1593581139715:shapiro.test = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581139737:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593581139754:shapiro_test2(dat, dv, ivs)
1593581139769:}))
1593581161100:shapiro.test = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581161120:dat <- remove_min_per_groups(subset(data, var == dv), ivs)
1593581161139:shapiro_test2(dat, dv, ivs)
1593581161156:}))
1593581170039:View(shapiro.test)
1593581269359:library(rstatix)
1593581269386:source(paste0(getwd(),'/common/df2qqs.R'))
1593581269416:subset_by_tbl <- function(data, tbl, ivs = intersect(colnames(data), colnames(tbl))) {
1593581269440:data <- df2qqs(data, ivs = ivs)
1593581269458:df <- do.call(rbind, lapply(seq(1:nrow(tbl)), FUN = function(i) {
1593581269476:idx <- rep(T, nrow(data))
1593581269493:for (iv in ivs) { idx <- idx & (data[[iv]] == tbl[[iv]][i]) }
1593581269512:return(data[idx,])
1593581269531:}))
1593581269549:return(df)
1593581269568:}
1593581269592:remove_min_per_groups <- function(data, ivs, min = 5) {
1593581269617:data <- df2qqs(data, ivs = ivs)
1593581269635:freq <- freq_table(data, vars = ivs)
1593581269654:freq <- freq[!freq$n < min,]
1593581269672:return(subset_by_tbl(data, freq, ivs))
1593581269697:}
1593581269725:data_with_min_per_groups <- function(data, ivs, min = 5) {
1593581269744:data <- df2qqs(data, ivs = ivs)
1593581269778:freq <- freq_table(data, vars = ivs)
1593581269797:freq <- freq[freq$n < min,]
1593581269817:return(subset_by_tbl(data, freq, ivs))
1593581269840:}
1593581269870:get_ids_of_min_per_groups <- function(dat, ivs, wid, min = 5) {
1593581269890:df <- data_with_min_per_groups(dat, ivs, min)
1593581269908:return(unique(df[[wid]]))
1593581269925:}
1593581282279:sample_size_problem = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581282297:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593581282314:cbind(var = dv, freq_table(dat, vars = ivs))
1593581282332:}))
1593581289816:shapiro.test = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581289837:dat <- remove_min_per_groups(subset(data, var == dv), ivs)
1593581289855:shapiro_test2(dat, dv, ivs)
1593581289875:}))
1593581293968:shapiro.test
1593581302158:View(shapiro.test)
1593581389247:runApp()
1593581579007:dat <- remove_min_per_groups(subset(data, var == dv), ivs)
1593581585077:shapiro_test2(dat, dv, ivs)
1593581625460:dat <- df2qqs(dat, ivs)
1593581627850:dat
1593581660678:dat <- remove_min_per_groups(subset(data, var == dv), ivs)
1593581661469:dat <- group_by_at(dat, vars(ivs))
1593581662922:dat
1593581669190:shapiro_test2(dat, dv, ivs)
1593581698214:shapiro_test(dat, vars = dv)
1593581706149:shapiro_test2(dat, dv, ivs)
1593581709937:dat <- remove_min_per_groups(subset(data, var == dv), ivs)
1593581711446:shapiro_test2(dat, dv, ivs)
1593581835983:sample_size_problem = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581836006:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593581836028:cbind(var = dv, freq_table(dat, vars = ivs))
1593581836045:})),
1593581836061:shapiro.test = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581836084:dat <- remove_min_per_groups(subset(data, var == dv), ivs)
1593581836098:select(shapiro_test2(dat, dv, ivs), -starts_with('prop'))
1593581836133:}))
1593581838985:shapiro.test
1593581875033:sample_size_problem = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581875053:dat <- data_with_min_per_groups(subset(data, var == dv), ivs)
1593581875072:cbind(var = dv, freq_table(dat, vars = ivs))
1593581875091:})),
1593581875106:shapiro.test = do.call(rbind, lapply(dvs, FUN = function(dv) {
1593581875121:dat <- remove_min_per_groups(subset(data, var == dv), ivs)
1593581875137:cbind(var = dv, select(shapiro_test2(dat, dv, ivs), -starts_with('prop')))
1593581875184:}))
1593581880141:shapiro.test
1593582094836:?renderDataTable
1593582279357:runApp()
1593582723805:library(rstatix)
1593582723835:source(paste0(getwd(),'/common/df2qqs.R'))
1593582723865:subset_by_tbl <- function(data, tbl, ivs = intersect(colnames(data), colnames(tbl))) {
1593582723884:data <- df2qqs(data, ivs = ivs)
1593582723903:df <- do.call(rbind, lapply(seq(1:nrow(tbl)), FUN = function(i) {
1593582723921:idx <- rep(T, nrow(data))
1593582723937:for (iv in ivs) { idx <- idx & (data[[iv]] == tbl[[iv]][i]) }
1593582723953:return(data[idx,])
1593582723970:}))
1593582723987:return(df)
1593582724001:}
1593582724026:remove_min_per_groups <- function(data, ivs, min = 3) {
1593582724042:data <- df2qqs(data, ivs = ivs)
1593582724061:freq <- freq_table(data, vars = ivs)
1593582724078:freq <- freq[!freq$n < min,]
1593582724097:return(subset_by_tbl(data, freq, ivs))
1593582724123:}
1593582724153:data_with_min_per_groups <- function(data, ivs, min = 3) {
1593582724169:data <- df2qqs(data, ivs = ivs)
1593582724185:freq <- freq_table(data, vars = ivs)
1593582724220:freq <- freq[freq$n < min,]
1593582724238:return(subset_by_tbl(data, freq, ivs))
1593582724258:}
1593582724282:get_ids_of_min_per_groups <- function(dat, ivs, wid, min = 3) {
1593582724308:df <- data_with_min_per_groups(dat, ivs, min)
1593582724331:return(unique(df[[wid]]))
1593582724349:}
1593582857526:runApp()
1593583879638:initData
1593583890106:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593583896532:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593583901295:sformula
1593583922442:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593583923277:dat <- as.data.frame(subset(data, var == dv))
1593583926857:dat
1593583945570:wid
1593583955313:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593583955954:dat <- as.data.frame(subset(data, var == dv))
1593583957793:dat
1593583980435:dv
1593583989579:dat <- as.data.frame(subset(data, var == dv))
1593584007391:wid = "UserID"
1593584010198:dat <- as.data.frame(subset(data, var == dv))
1593584010617:rownames(dat) <- dat[[wid]]
1593584014615:dat
1593584018166:dat <- as.data.frame(subset(data, var == dv))
1593584018872:rownames(dat) <- dat[[wid]]
1593584021748:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593584024096:sformula
1593584064561:car::qqPlot(sformula, data=dat)
1593584072928:?qqPlot
1593584085842:car::qqPlot(sformula, data=dat)
1593584120236:lm(as.formula(sformula), data = dat)
1593584270758:dat <- as.data.frame(subset(data, var == dv))
1593584271324:rownames(dat) <- dat[[wid]]
1593584271976:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593584272718:model <- lm(as.formula(sformula), data = dat)
1593584290396:car::qqPlot(residual(sformula))
1593584293881:car::qqPlot(residuals(sformula))
1593584304345:car::qqPlot(residuals(model))
1593584409887:dat
1593584441664:ivs
1593584452496:dat <- df2qqs(as.data.frame(subset(data, var == dv)), ivs)
1593584454708:dat
1593584456920:dat <- df2qqs(as.data.frame(subset(data, var == dv)), ivs)
1593584457610:rownames(dat) <- dat[[wid]]
1593584459263:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593584464801:model <- lm(as.formula(sformula), data = dat)
1593584479246:car::qqPlot(residuals(model))
1593584808344:?ggqqplot
1593585131644:as.formula(paste('~', dv))
1593585143231:dat
1593585159897:gdat
1593585195408:ivs
1593585200601:gdat <- group_by_at(dat, vars(ivs))
1593585202201:car::qqPlot(as.formula(paste('~', dv)), data = gdat)
1593585378650:car::qqPlot(as.formula(paste('~', dv)), data = gdat)
1593585958639:freq_table(dat, vars = ivs)
1593586024657:subset(freq_table(dat, vars = ivs), n < 5)
1593586049072:subset(freq_table(dat, vars = ivs), n > 4)
1593586107926:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593586134531:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593586135620:i = 3
1593586155043:ivs
1593586162311:subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593586181691:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593586197350:df <- group_by_at(df, vars(ivs))
1593586207560:car::qqPlot(as.formula(paste('~', dv)), data = df)
1593587978775:?pull
1593588019646:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593588023471:df <- group_by_at(df, vars(ivs))
1593588030376:df
1593588068628:y <- df[[dv]]
1593588070902:y
1593588095125:y <- df[[dv]]
1593588111959:wid
1593588113295:y <- df[[dv]]
1593588113996:names(y) <- df[[wid]]
1593588118886:y
1593588138484:y <- df[[dv]]
1593588139042:names(y) <- df[[wid]]
1593588140522:y
1593588183795:i <- 1:length(y)
1593588184442:fi <- (i - 0.5) / length(y)
1593588187530:x.norm <- qnorm(fi)
1593588189708:x.norm
1593588208299:plot( alto ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593588223192:plot( y ~ x.norm, type = "p", xlab = "Normal quantiles", pch = 20)
1593588339251:as.formula(paste0("~",dv))
1593588386728:iv
1593588495049:y <- df[[dv]]
1593588495285:names(y) <- df[[wid]]
1593588495612:y <- sort(y)
1593588496067:i <- 1:length(y)
1593588496369:fi <- (i - 0.5) / length(y)
1593588497152:x.norm <- qnorm(fi)
1593588499664:plot_df <- as.data.frame(x=x.norm, y=y)
1593588501343:plot_df
1593588509092:y
1593588518470:as.data.frame(x=x.norm, y=y)
1593588528516:plot_df <- cbind(x=x.norm, y=y)
1593588531311:plot_df
1593588545922:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593588546572:df <- group_by_at(df, vars(ivs))
1593588547287:y <- df[[dv]]
1593588547523:names(y) <- df[[wid]]
1593588547919:y <- sort(y)
1593588548298:i <- 1:length(y)
1593588548549:fi <- (i - 0.5) / length(y)
1593588549019:x.norm <- qnorm(fi)
1593588577655:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593588578294:df <- group_by_at(df, vars(ivs))
1593588580367:y <- df[[dv]]
1593588581256:names(y) <- df[[wid]]
1593588581521:y <- sort(y)
1593588583591:i <- 1:length(y)
1593588583887:fi <- (i - 0.5) / length(y)
1593588585080:x.norm <- qnorm(fi)
1593588588219:plot_df <- cbind(x=x.norm, y=y)
1593588590604:plot_df
1593588621568:names(y)
1593588628386:y <- df[[dv]]
1593588629227:names(y) <- df[[wid]]
1593588631215:y <- sort(y)
1593588633002:y
1593588636830:i <- 1:length(y)
1593588637236:fi <- (i - 0.5) / length(y)
1593588637782:x.norm <- qnorm(fi)
1593588638765:plot_df <- cbind(x=x.norm, y=y, wid = names(y))
1593588640480:plot_df
1593588830719:plot_ly(plot_df, type='scatter', x=~x, y=~y)
1593588840092:plot_ly(data=plot_df, type='scatter', x=~x, y=~y)
1593588854824:plot_df
1593588873126:as.numeric(y)
1593588876819:y <- df[[dv]]
1593588876970:names(y) <- df[[wid]]
1593588877170:y <- sort(y)
1593588877628:i <- 1:length(y)
1593588877858:fi <- (i - 0.5) / length(y)
1593588878076:x.norm <- qnorm(fi)
1593588878381:plot_df <- cbind(x=x.norm, y=as.numeric(y), wid = names(y))
1593588879268:plot_ly(data=plot_df, type='scatter', x=~x, y=~y)
1593588896337:plot_df <- as.data.frame(cbind(x=x.norm, y=as.numeric(y), wid = names(y)))
1593588897303:plot_ly(data=plot_df, type='scatter', x=~x, y=~y)
1593588907190:plot_df
1593588917960:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593588918524:df <- group_by_at(df, vars(ivs))
1593588921134:df
1593588939675:dat
1593588959376:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593588961524:freq_df
1593588970746:i = 2
1593589003154:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593589003790:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593589004430:df <- group_by_at(df, vars(ivs))
1593589005469:y <- df[[dv]]
1593589005727:names(y) <- df[[wid]]
1593589006066:y <- sort(y)
1593589006868:i <- 1:length(y)
1593589007145:fi <- (i - 0.5) / length(y)
1593589007533:x.norm <- qnorm(fi)
1593589009176:plot_df <- as.data.frame(cbind(x=x.norm, y=as.numeric(y), wid = names(y)))
1593589010344:plot_ly(data=plot_df, type='scatter', x=~x, y=~y)
1593589060022:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593589060591:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593589061269:df <- group_by_at(df, vars(ivs))
1593589067555:df
1593589082807:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593589083268:i=3
1593589084843:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593589085533:df <- group_by_at(df, vars(ivs))
1593589086753:y <- df[[dv]]
1593589087122:names(y) <- df[[wid]]
1593589087947:y <- sort(y)
1593589088517:i <- 1:length(y)
1593589088793:fi <- (i - 0.5) / length(y)
1593589089277:x.norm <- qnorm(fi)
1593589091038:plot_df <- as.data.frame(cbind(x=x.norm, y=as.numeric(y), wid = names(y)))
1593589092340:plot_ly(data=plot_df, type='scatter', x=~x, y=~y)
1593589203360:plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid)
1593589263509:plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593589263527:, marker = list(size = 10,
1593589263548:color = 'rgba(255, 182, 193, .9)',
1593589263563:line = list(color = 'rgba(152, 0, 0, .8)',
1593589263580:width = 2)))
1593589342286:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593589351306:dat <- df2qqs(as.data.frame(subset(data, var == dv)), ivs)
1593589351554:rownames(dat) <- dat[[wid]]
1593589352093:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593589352352:model <- lm(as.formula(sformula), data = dat)
1593589352833:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593589353078:i=3
1593589354112:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593589354744:df <- group_by_at(df, vars(ivs))
1593589355162:y <- df[[dv]]
1593589355458:names(y) <- df[[wid]]
1593589355667:y <- sort(y)
1593589356205:i <- 1:length(y)
1593589356575:fi <- (i - 0.5) / length(y)
1593589356992:x.norm <- qnorm(fi)
1593589358798:plot_df <- as.data.frame(cbind(x=x.norm, y=as.numeric(y), wid = names(y)))
1593589359769:y <- quantile(alto, c(0.25, 0.75), type = 5)
1593589379236:y
1593589384588:y <- quantile(y, c(0.25, 0.75), type = 5)
1593589385066:x <- qnorm( c(0.25, 0.75))
1593589392741:# Now we can compute the intercept and slope of the line that passes
1593589392760:# through these points
1593589392779:slope <- diff(y) / diff(x)
1593589394258:int   <- y[1] - slope * x[1]
1593589399850:slope
1593589402058:int
1593589624135:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593589624154:, marker = list(size = 10,
1593589624174:color = 'rgba(255, 182, 193, .9)',
1593589624193:line = list(color = 'rgba(152, 0, 0, .8)',
1593589624211:width = 2)))
1593589628606:p
1593589688054:p_abline
1593589764192:slope
1593589781774:as.double(slope)
1593589837810:as.double(slope)*min(plot_df$x)
1593589841259:# Now we can compute the intercept and slope of the line that passes
1593589841275:# through these points
1593589841292:slope <- diff(y) / diff(x)
1593589841308:int   <- y[1] - slope * x[1]
1593589849684:(as.double(slope)*min(plot_df$x))
1593589856016:min(plot_df$x)
1593589893200:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593589896104:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593589896383:i=3
1593589896764:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593589897018:df <- group_by_at(df, vars(ivs))
1593589897403:y <- df[[dv]]
1593589897617:names(y) <- df[[wid]]
1593589897814:y <- sort(y)
1593589898217:i <- 1:length(y)
1593589898485:fi <- (i - 0.5) / length(y)
1593589898898:x.norm <- qnorm(fi)
1593589901043:plot_df <- as.data.frame(cbind(x=as.numeric(x.norm), y=as.numeric(y), wid = names(y)))
1593589902394:y <- quantile(y, c(0.25, 0.75), type = 5)
1593589902750:x <- qnorm( c(0.25, 0.75))
1593589904601:# Now we can compute the intercept and slope of the line that passes
1593589904621:# through these points
1593589904635:slope <- diff(y) / diff(x)
1593589905640:int   <- y[1] - slope * x[1]
1593589911240:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593589911261:, marker = list(size = 10,
1593589911284:color = 'rgba(255, 182, 193, .9)',
1593589911298:line = list(color = 'rgba(152, 0, 0, .8)',
1593589911315:width = 2)))
1593589912453:p <- add_trace(p, x=c(min(plot_df$x), max(plot_df$x))
1593589912474:,  y=c((as.double(slope)*min(plot_df$x))+  p_abline(min_x), p_abline(max_x))
1593589912491:, type="scatter", mode="lines", name='abline')
1593589913284:p
1593589916542:slope
1593589927797:(as.double(slope)*min(plot_df$x))
1593589934815:min(plot_df$x)
1593589968795:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593589969211:model <- lm(as.formula(sformula), data = dat)
1593589969234:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593589969549:i=3
1593589970087:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593589970425:df <- group_by_at(df, vars(ivs))
1593589972303:y <- df[[dv]]
1593589972498:names(y) <- df[[wid]]
1593589972665:y <- sort(y)
1593589972837:i <- 1:length(y)
1593589973093:fi <- (i - 0.5) / length(y)
1593589973347:x.norm <- qnorm(fi)
1593589973996:plot_df <- as.data.frame(cbind(x=as.double(x.norm), y=as.double(y), wid = names(y)))
1593589975914:y <- quantile(y, c(0.25, 0.75), type = 5)
1593589976164:x <- qnorm( c(0.25, 0.75))
1593589976985:# Now we can compute the intercept and slope of the line that passes
1593589977003:# through these points
1593589977023:slope <- diff(y) / diff(x)
1593589977678:int   <- y[1] - slope * x[1]
1593589983083:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593589983100:, marker = list(size = 10,
1593589983118:color = 'rgba(255, 182, 193, .9)',
1593589983132:line = list(color = 'rgba(152, 0, 0, .8)',
1593589983147:width = 2)))
1593589990003:min(plot_df$x)
1593589996093:max(plot_df$x)
1593590004988:as.double(slope)*min(plot_df$x)
1593590010936:as.double(slope)
1593590028209:as.double(min(plot_df$x))
1593590039960:plot_df$x
1593590056368:max(plot_df$x)
1593590073798:(as.double(slope)*as.double(min(plot_df$x)))
1593590088838:int
1593590111668:(as.double(slope)*as.double(min(plot_df$x)))+as.numeric(int)
1593590170920:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593590170936:, marker = list(size = 10,
1593590170956:color = 'rgba(255, 182, 193, .9)',
1593590170968:line = list(color = 'rgba(152, 0, 0, .8)',
1593590170985:width = 2)))
1593590171511:p <- add_trace(p, x=c(min(plot_df$x), max(plot_df$x))
1593590171529:,  y=c((as.double(slope)*as.double(min(plot_df$x)))+as.numeric(int),
1593590171547:(as.double(slope)*as.double(max(plot_df$x)))+as.numeric(int))
1593590171564:, type="scatter", mode="lines", name='abline')
1593590172319:p
1593590203884:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593590203903:, marker = list(size = 10,
1593590203924:color = 'rgba(255, 182, 193, .9)',
1593590203937:line = list(color = 'rgba(152, 0, 0, .8)',
1593590203955:width = 2)))
1593590206873:p <- add_trace(p, x=c(min(plot_df$x), max(plot_df$x))
1593590206893:,  y=c((as.double(slope)*as.double(min(plot_df$x)))+as.numeric(int),
1593590206910:(as.double(slope)*as.double(max(plot_df$x)))+as.numeric(int))
1593590206929:, type="scatter", mode="lines", name='abline')
1593590207909:p
1593590227841:c(min(plot_df$x), max(plot_df$x))
1593590251262:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593590251282:, marker = list(size = 10,
1593590251300:color = 'rgba(255, 182, 193, .9)',
1593590251318:line = list(color = 'rgba(152, 0, 0, .8)',
1593590251332:width = 2)))
1593590251873:p <- add_trace(p, x=c(as.double(min(plot_df$x)), as.double(max(plot_df$x)))
1593590251891:,  y=c((as.double(slope)*as.double(min(plot_df$x)))+as.numeric(int),
1593590251911:(as.double(slope)*as.double(max(plot_df$x)))+as.numeric(int))
1593590251928:, type="scatter", mode="lines", name='abline')
1593590252646:p
1593590281667:c((as.double(slope)*as.double(min(plot_df$x)))+as.numeric(int),
1593590281688:(as.double(slope)*as.double(max(plot_df$x)))+as.numeric(int))
1593590289225:c(as.double(min(plot_df$x)), as.double(max(plot_df$x)))
1593590473342:as.double(int)
1593590576821:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593590576848:, marker = list(size = 10,
1593590576869:color = 'rgba(255, 182, 193, .9)',
1593590576887:line = list(color = 'rgba(152, 0, 0, .8)',
1593590576906:width = 2)))
1593590577859:p <- layout(shapes=list(
1593590577879:type='line'
1593590577897:, x0=as.double(min(plot_df$x))
1593590577914:, x1=as.double(max(plot_df$x))
1593590577932:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593590577948:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593590607608:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593590607631:, marker = list(size = 10,
1593590607649:color = 'rgba(255, 182, 193, .9)',
1593590607664:line = list(color = 'rgba(152, 0, 0, .8)',
1593590607677:width = 2)))
1593590608095:p <- layout(p, shapes=list(
1593590608109:type='line'
1593590608129:, x0=as.double(min(plot_df$x))
1593590608142:, x1=as.double(max(plot_df$x))
1593590608159:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593590608176:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593590609027:p
1593590770083:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593590770102:, marker = list(size = 10,
1593590770122:color = 'rgba(255, 182, 193, .9)',
1593590770138:line = list(color = 'rgba(152, 0, 0, .8)',
1593590770153:width = 2)))
1593590770595:p <- layout(p, shapes=list(
1593590770612:type='line'
1593590770628:, line = list(color = "blue")
1593590770643:, x0=as.double(min(plot_df$x))
1593590770658:, x1=as.double(max(plot_df$x))
1593590770675:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593590770689:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593590771627:p
1593590829584:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593590830383:model <- lm(as.formula(sformula), data = dat)
1593590831846:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593590833361:freq_df
1593590836557:i=2
1593590837120:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593590837510:df <- group_by_at(df, vars(ivs))
1593590838220:y <- df[[dv]]
1593590838424:names(y) <- df[[wid]]
1593590838614:y <- sort(y)
1593590839301:i <- 1:length(y)
1593590839701:fi <- (i - 0.5) / length(y)
1593590840105:x.norm <- qnorm(fi)
1593590841259:plot_df <- as.data.frame(cbind(x=as.double(x.norm), y=as.double(y), wid = names(y)))
1593590842201:y <- quantile(y, c(0.25, 0.75), type = 5)
1593590842635:x <- qnorm( c(0.25, 0.75))
1593590846531:# Now we can compute the intercept and slope of the line that passes
1593590846551:# through these points
1593590846566:slope <- diff(y) / diff(x)
1593590847453:int   <- y[1] - slope * x[1]
1593590849601:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593590849623:, marker = list(size = 10,
1593590849640:color = 'rgba(255, 182, 193, .9)',
1593590849656:line = list(color = 'rgba(152, 0, 0, .8)',
1593590849670:width = 2)))
1593590850440:p <- layout(p, shapes=list(
1593590850459:type='line'
1593590850479:, line = list(color = "blue")
1593590850495:, x0=as.double(min(plot_df$x))
1593590850510:, x1=as.double(max(plot_df$x))
1593590850524:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593590850540:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593590851935:p
1593590996761:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593590997004:model <- lm(as.formula(sformula), data = dat)
1593590997158:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593590997494:i=2
1593590997819:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593590998106:df <- group_by_at(df, vars(ivs))
1593590998498:y <- df[[dv]]
1593590998714:names(y) <- df[[wid]]
1593590998885:y <- sort(y)
1593590999125:i <- 1:length(y)
1593590999365:fi <- (i - 0.5) / length(y)
1593590999647:x.norm <- qnorm(fi)
1593591000020:plot_df <- as.data.frame(cbind(x=as.double(x.norm), y=as.double(y), wid = names(y)))
1593591000544:y <- quantile(y, c(0.25, 0.75), type = 5)
1593591001052:x <- qnorm( c(0.25, 0.75))
1593591001838:# Now we can compute the intercept and slope of the line that passes
1593591001862:# through these points
1593591001880:slope <- diff(y) / diff(x)
1593591002276:int   <- y[1] - slope * x[1]
1593591002768:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593591002784:, marker = list(size = 10,
1593591002809:color = 'rgba(255, 182, 193, .9)',
1593591002825:line = list(color = 'rgba(152, 0, 0, .8)',
1593591002842:width = 2)))
1593591003543:p <- layout(p, shapes=list(
1593591003560:type='line'
1593591003581:, xaxis = list(title = "theoretical")
1593591003597:, line = list(color = "blue")
1593591003614:, x0=as.double(min(plot_df$x))
1593591003630:, x1=as.double(max(plot_df$x))
1593591003646:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593591003660:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593591004532:p
1593591019503:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593591019523:, marker = list(size = 10,
1593591019542:color = 'rgba(255, 182, 193, .9)',
1593591019560:line = list(color = 'rgba(152, 0, 0, .8)',
1593591019576:width = 2)))
1593591022011:p <- layout(p, shapes=list(
1593591022029:type='line'
1593591022046:, xaxis = list(title = "theoretical")
1593591022064:, line = list(color = "blue")
1593591022080:, x0=as.double(min(plot_df$x))
1593591022095:, x1=as.double(max(plot_df$x))
1593591022111:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593591022126:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593591023107:p
1593591208350:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593591208387:, marker = list(size = 10,
1593591208405:color = 'rgba(255, 182, 193, .9)',
1593591208421:line = list(color = 'rgba(152, 0, 0, .8)',
1593591208439:width = 2)))
1593591208739:p <- layout(
1593591208760:p, xaxis = list(title = "theoretical")
1593591208784:, shapes=list(
1593591208802:type='line'
1593591208821:, line = list(color = "blue")
1593591208838:, x0=as.double(min(plot_df$x))
1593591208857:, x1=as.double(max(plot_df$x))
1593591208876:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593591208896:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593591209313:p
1593591418408:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593591418430:, marker = list(size = 10,
1593591418449:color = 'rgba(255, 182, 193, .9)',
1593591418463:line = list(color = 'rgba(152, 0, 0, .8)',
1593591418478:width = 2)))
1593591418844:p <- layout(
1593591418865:p, xaxis = list(title = "theoretical")
1593591418882:, yaxis = list(title = "sample")
1593591418900:, shapes=list(
1593591418915:type='line'
1593591418929:, line = list(color = "blue")
1593591418947:, x0=as.double(min(plot_df$x))
1593591418963:, x1=as.double(max(plot_df$x))
1593591418977:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593591418993:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593591419110:p
1593591561105:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593591561128:, marker = list(size = 10,
1593591561149:color = 'rgba(255, 182, 193, .9)',
1593591561166:line = list(color = 'rgba(152, 0, 0, .8)',
1593591561182:width = 2)))
1593591561416:p <- layout(
1593591561430:p, xaxis = list(title = "theoretical", showline = T)
1593591561452:, yaxis = list(title = "sample", showline = T)
1593591561466:, shapes=list(
1593591561482:type='line'
1593591561501:, line = list(color = "blue")
1593591561517:, x0=as.double(min(plot_df$x))
1593591561532:, x1=as.double(max(plot_df$x))
1593591561547:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593591561563:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593591562102:p
1593592071574:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593592071608:, marker = list(size = 10,
1593592071630:color = 'rgba(255, 182, 193, .9)',
1593592071646:line = list(color = 'rgba(152, 0, 0, .8)',
1593592071664:width = 2)))
1593592072126:p <- layout(
1593592072155:p, xaxis = list(title = "theoretical", showline = T, visible =F)
1593592072174:, yaxis = list(title = "sample", showline = T, visible =F)
1593592072191:, shapes=list(
1593592072208:type='line'
1593592072226:, line = list(color = "blue")
1593592072242:, x0=as.double(min(plot_df$x))
1593592072257:, x1=as.double(max(plot_df$x))
1593592072276:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593592072291:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593592072800:p
1593592086523:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593592086544:, marker = list(size = 10,
1593592086565:color = 'rgba(255, 182, 193, .9)',
1593592086579:line = list(color = 'rgba(152, 0, 0, .8)',
1593592086595:width = 2)))
1593592086900:p <- layout(
1593592086923:p, xaxis = list(title = "theoretical", showline = T)
1593592086942:, yaxis = list(title = "sample", showline = T)
1593592086958:, shapes=list(
1593592086974:type='line'
1593592086993:, line = list(color = "blue")
1593592087011:, x0=as.double(min(plot_df$x))
1593592087028:, x1=as.double(max(plot_df$x))
1593592087044:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593592087058:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593592087652:p
1593592166286:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593592166307:, marker = list(size = 10,
1593592166342:color = 'rgba(255, 182, 193, .9)',
1593592166364:line = list(color = 'rgba(152, 0, 0, .8)',
1593592166377:width = 2)))
1593592166768:p <- layout(
1593592166786:p, xaxis = list(title = "theoretical", showline = T, showticklabels = F)
1593592166805:, yaxis = list(title = "sample", showline = T, showticklabels = F)
1593592166822:, shapes=list(
1593592166839:type='line'
1593592166858:, line = list(color = "blue")
1593592166878:, x0=as.double(min(plot_df$x))
1593592166893:, x1=as.double(max(plot_df$x))
1593592166907:, y0=(as.double(slope)*as.double(min(plot_df$x)))+as.double(int)
1593592166924:, y1=(as.double(slope)*as.double(max(plot_df$x)))+as.double(int)))
1593592167531:p
1593592703231:floor()
1593592709622:floor(-3.33)
1593592742220:ceil(32.344)
1593592749110:?floor
1593592768253:ceiling(as.numeric(max(plot_df$x)))
1593592775544:as.numeric(max(plot_df$x))
1593592779877:x0=floor(as.numeric(min(plot_df$x)))
1593592780704:x1=ceiling(as.numeric(max(plot_df$x)))
1593592848100:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593592848123:, marker = list(size = 10,
1593592848144:color = 'rgba(255, 182, 193, .9)',
1593592848160:line = list(color = 'rgba(152, 0, 0, .8)',
1593592848173:width = 2)))
1593592848360:p <- layout(
1593592848379:p, xaxis = list(title = "theoretical", showline = T, showticklabels = F)
1593592848398:, yaxis = list(title = "sample", showline = T, showticklabels = F)
1593592848413:, shapes=list(
1593592848428:type='line'
1593592848442:, line = list(color = "blue")
1593592848457:, x0=x0
1593592848473:, x1=x1
1593592848485:, y0=(slope*x0)+as.numeric(int)
1593592848501:, y1=(slope*x0)+as.numeric(int)))
1593592848673:p
1593592857591:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593592857610:, marker = list(size = 10,
1593592857631:color = 'rgba(255, 182, 193, .9)',
1593592857646:line = list(color = 'rgba(152, 0, 0, .8)',
1593592857661:width = 2)))
1593592858291:p <- layout(
1593592858311:p, xaxis = list(title = "theoretical", showline = T, showticklabels = F)
1593592858327:, yaxis = list(title = "sample", showline = T, showticklabels = F)
1593592858344:, shapes=list(
1593592858360:type='line'
1593592858379:, line = list(color = "blue")
1593592858397:, x0=x0
1593592858415:, x1=x1
1593592858431:, y0=(slope*x0)+as.numeric(int)
1593592858445:, y1=(slope*x1)+as.numeric(int)))
1593592858803:p
1593592870316:x0=floor(as.numeric(min(plot_df$x)))
1593592870738:x1=ceiling(as.numeric(max(plot_df$x)))
1593592871941:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593592871961:, marker = list(size = 10,
1593592871976:color = 'rgba(255, 182, 193, .9)',
1593592871994:line = list(color = 'rgba(152, 0, 0, .8)',
1593592872009:width = 2)))
1593592872661:p <- layout(
1593592872678:p, xaxis = list(title = "theoretical", showline = T, showticklabels = F)
1593592872701:, yaxis = list(title = "sample", showline = T, showticklabels = F)
1593592872716:, shapes=list(
1593592872735:type='line'
1593592872750:, line = list(color = "blue")
1593592872764:, x0=x0
1593592872778:, x1=x1
1593592872795:, y0=(slope*x0)+as.numeric(int)
1593592872806:, y1=(slope*x1)+as.numeric(int)))
1593592874379:p
1593592896840:as.numeric(max(plot_df$x))
1593592917970:(slope*x1)+as.numeric(int)
1593592923189:as.numeric(int)
1593592927241:as.numeric(int)
1593592931058:(slope*x0)
1593592943573:x0=floor(as.numeric(min(plot_df$x)))
1593592944125:x1=ceiling(as.numeric(max(plot_df$x)))
1593592945949:x0
1593592948120:x1
1593592961485:max(plot_df$x)
1593592966187:as.numeric(max(plot_df$x))
1593592981360:x0=floor(as.numeric(min(plot_df$x)))
1593592981662:x1=ceiling(as.numeric(max(plot_df$x)))
1593592983522:x0
1593592986397:x1
1593593004981:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593593005003:, marker = list(size = 10,
1593593005023:color = 'rgba(255, 182, 193, .9)',
1593593005037:line = list(color = 'rgba(152, 0, 0, .8)',
1593593005055:width = 2)))
1593593012343:(slope*x0)
1593593024094:as.numeric(slope)
1593593038326:diff(y)
1593593042241:diff(x)
1593593045556:x
1593593061217:y <- df[[dv]]
1593593061362:names(y) <- df[[wid]]
1593593061727:y <- sort(y)
1593593062293:i <- 1:length(y)
1593593062609:fi <- (i - 0.5) / length(y)
1593593063859:x.norm <- qnorm(fi)
1593593065057:plot_df <- as.data.frame(cbind(x=as.double(x.norm), y=as.double(y), wid = names(y)))
1593593070283:x.norm
1593593073401:y <- quantile(y, c(0.25, 0.75), type = 5)
1593593074147:x <- qnorm( c(0.25, 0.75))
1593593076305:y
1593593078323:x
1593593097233:y <- as.numeric(quantile(y, c(0.25, 0.75), type = 5))
1593593098832:x <- qnorm( c(0.25, 0.75))
1593593101126:y
1593593103085:x
1593593105761:# Now we can compute the intercept and slope of the line that passes
1593593105784:# through these points
1593593105799:slope <- as.numeric(diff(y)) / diff(x)
1593593107356:slope
1593593111382:int <- y[1] - slope * x[1]
1593593114444:x0=floor(as.numeric(min(plot_df$x)))
1593593116880:x1=ceiling(as.numeric(max(plot_df$x)))
1593593118917:x0
1593593122192:x1
1593593124672:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593593124692:, marker = list(size = 10,
1593593124716:color = 'rgba(255, 182, 193, .9)',
1593593124734:line = list(color = 'rgba(152, 0, 0, .8)',
1593593124747:width = 2)))
1593593133539:(slope*x0)+as.numeric(int)
1593593138410:(slope*x1)+as.numeric(int)
1593593142354:p <- layout(
1593593142373:p, xaxis = list(title = "theoretical", showline = T, showticklabels = F)
1593593142390:, yaxis = list(title = "sample", showline = T, showticklabels = F)
1593593142406:, shapes=list(
1593593142421:type='line'
1593593142438:, line = list(color = "blue")
1593593142454:, x0=x0
1593593142470:, x1=x1
1593593142488:, y0=(slope*x0)+as.numeric(int)
1593593142504:, y1=(slope*x1)+as.numeric(int)))
1593593143235:p
1593593149854:x1
1593593155104:slope
1593593157973:slope*x1
1593593165551:x1
1593593169487:slope
1593593175157:as.numeric(int)
1593593178662:(slope*x1)+as.numeric(int)
1593593235618:(slope*x1)+as.numeric(int)
1593593240887:(slope*x0)+as.numeric(int)
1593593248305:# Now we can compute the intercept and slope of the line that passes
1593593248322:# through these points
1593593248342:slope <- as.numeric(diff(y)) / diff(x)
1593593248582:int <- y[1] - slope * x[1]
1593593251451:x0=floor(as.numeric(min(plot_df$x)))
1593593256698:x1=ceiling(as.numeric(max(plot_df$x)))
1593593259691:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593593259710:, marker = list(size = 10,
1593593259730:color = 'rgba(255, 182, 193, .9)',
1593593259749:line = list(color = 'rgba(152, 0, 0, .8)',
1593593259763:width = 2)))
1593593268785:slope*x0
1593593274277:(slope*x0)+as.numeric(int)
1593593298537:as.numeric(int)
1593593303920:(slope*x1)
1593593308854:x1
1593593321888:x0=floor(as.numeric(min(plot_df$x)))
1593593322352:x1=ceiling(as.numeric(max(plot_df$x))) + 1
1593593325616:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593593325637:, marker = list(size = 10,
1593593325656:color = 'rgba(255, 182, 193, .9)',
1593593325670:line = list(color = 'rgba(152, 0, 0, .8)',
1593593325687:width = 2)))
1593593326514:p <- layout(
1593593326532:p, xaxis = list(title = "theoretical", showline = T, showticklabels = F)
1593593326552:, yaxis = list(title = "sample", showline = T, showticklabels = F)
1593593326570:, shapes=list(
1593593326589:type='line'
1593593326603:, line = list(color = "blue")
1593593326620:, x0=x0
1593593326636:, x1=x1
1593593326652:, y0=(slope*x0)+as.numeric(int)
1593593326664:, y1=(slope*x1)+as.numeric(int)))
1593593328401:p
1593593389206:x0=floor(as.numeric(min(plot_df$x)))
1593593391788:x0
1593593399554:x1=ceiling(as.numeric(max(plot_df$x)))
1593593401438:x1
1593593685599:x0=floor(as.numeric(min(plot_df$x)))
1593593685901:x1=ceiling(as.numeric(max(plot_df$x)))
1593593686666:y0=(slope*x0)+as.numeric(int)
1593593688174:y0
1593593704376:x0=floor(as.numeric(min(plot_df$x)))
1593593704611:x1=ceiling(as.numeric(max(plot_df$x)))
1593593705001:y0=(slope*x0)+as.numeric(int)
1593593705559:y1=(slope*x1)+as.numeric(int)
1593593708282:x0
1593593709979:x1
1593593712111:y0
1593593714172:y1
1593593738094:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593593738113:, marker = list(size = 10,
1593593738131:color = 'rgba(255, 182, 193, .9)',
1593593738147:line = list(color = 'rgba(152, 0, 0, .8)',
1593593738164:width = 2)))
1593593738742:p<-add_trace(p, x=c(x0,x1), y=c(y0,y1) , type="scatter", mode="lines", name='abline')
1593593741017:p
1593593766928:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593593766946:, marker = list(size = 10,
1593593766964:color = 'rgba(255, 182, 193, .9)',
1593593766980:line = list(color = 'rgba(152, 0, 0, .8)',
1593593766994:width = 2)))
1593593768019:p<-add_trace(p, x=c(x0,x1), y=c(y0,y1), type="scatter", mode="lines", name='abline')
1593593775153:p
1593593792750:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593593792768:, marker = list(size = 10,
1593593792783:color = 'rgba(255, 182, 193, .9)',
1593593792803:line = list(color = 'rgba(152, 0, 0, .8)',
1593593792818:width = 2)))
1593593793327:p<-add_trace(p, x=c(x0,x1), y=c(y0,y1), mode="lines", name='abline')
1593593795200:p
1593593849086:?seq
1593593880974:seq(x0,x1, by=nrow(plot_df))
1593593887953:nrow(plot_df)
1593593989104:seq(x0,x1, by=(x1-x0)/nrow(plot_df))
1593594006361:nrow(plot_df)
1593594041693:seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594100141:x0=floor(as.numeric(min(plot_df$x)))
1593594100361:x1=ceiling(as.numeric(max(plot_df$x)))
1593594100550:y0=(slope*x0)+as.numeric(int)
1593594100956:y1=(slope*x1)+as.numeric(int)
1593594101468:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594101489:, marker = list(size = 10,
1593594101506:color = 'rgba(255, 182, 193, .9)',
1593594101527:line = list(color = 'rgba(152, 0, 0, .8)',
1593594101540:width = 2)))
1593594102073:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594102092:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline')
1593594102767:p
1593594142081:x0=floor(as.numeric(min(plot_df$x)))-1
1593594142315:x1=ceiling(as.numeric(max(plot_df$x)))+1
1593594142555:y0=(slope*x0)+as.numeric(int)
1593594143313:y1=(slope*x1)+as.numeric(int)
1593594144119:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594144137:, marker = list(size = 10,
1593594144161:color = 'rgba(255, 182, 193, .9)',
1593594144182:line = list(color = 'rgba(152, 0, 0, .8)',
1593594144200:width = 2)))
1593594145249:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594145294:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline')
1593594146306:p
1593594257897:x0=floor(as.numeric(min(plot_df$x)))-1
1593594258122:x1=ceiling(as.numeric(max(plot_df$x)))+1
1593594258271:y0=(slope*x0)+as.numeric(int)
1593594258653:y1=(slope*x1)+as.numeric(int)
1593594259314:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594259335:, marker = list(size = 10,
1593594259351:color = 'rgba(255, 182, 193, .9)',
1593594259367:line = list(color = 'rgba(152, 0, 0, .8)',
1593594259382:width = 2)))
1593594260880:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594260902:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594260918:, marker = list(line=list(color='blue', width=4)))
1593594261511:p
1593594425083:x0=floor(as.numeric(min(plot_df$x)))-1
1593594425732:x1=ceiling(as.numeric(max(plot_df$x)))+1
1593594425754:y0=(slope*x0)+as.numeric(int)
1593594425772:y1=(slope*x1)+as.numeric(int)
1593594426072:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594426096:, marker = list(size = 10,
1593594426117:color = 'rgba(255, 182, 193, .9)',
1593594426137:line = list(color = 'rgba(152, 0, 0, .8)',
1593594426153:width = 2)))
1593594426691:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594426709:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594426728:, line = list(color = 'blue', width = 4)
1593594426747:)
1593594427537:p
1593594497387:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594497404:, marker = list(size = 10,
1593594497418:color = 'rgba(255, 182, 193, .9)',
1593594497436:line = list(color = 'rgba(152, 0, 0, .8)',
1593594497450:width = 2)))
1593594497973:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594497992:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594498011:, line = list(color = 'blue', width = 4)
1593594498025:)
1593594498247:p <- layout(
1593594498268:p, xaxis = list(title = "theoretical", showline = T, showticklabels = F)
1593594498289:, yaxis = list(title = "sample", showline = T, showticklabels = F))
1593594498953:p
1593594579255:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594579283:, marker = list(size = 10,
1593594579304:color = 'rgba(255, 182, 193, .9)',
1593594579320:line = list(color = 'rgba(152, 0, 0, .8)',
1593594579337:width = 2)))
1593594579828:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594579849:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594579872:, line = list(color = 'blue', width = 4)
1593594579892:)
1593594580131:p <- layout(
1593594580152:p, xaxis = list(title = "theoretical", showline = T, zeroline = F)
1593594580169:, yaxis = list(title = "sample", showline = T, zeroline = F))
1593594580815:p
1593594656268:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594656287:, marker = list(size = 10,
1593594656303:color = 'rgba(255, 182, 193, .9)',
1593594656321:line = list(color = 'rgba(152, 0, 0, .8)',
1593594656338:width = 2)))
1593594656741:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594656760:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594656779:, line = list(color = 'blue', width = 4)
1593594656797:)
1593594657017:p <- layout(
1593594657035:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593594657052:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593594658070:p
1593594693450:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594693468:, marker = list(size = 10,
1593594693487:color = 'rgba(255, 182, 193, .9)',
1593594693505:line = list(color = 'rgba(152, 0, 0, .8)',
1593594693522:width = 2)))
1593594693866:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594693887:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594693908:, line = list(color = 'blue', width = 4)
1593594693923:)
1593594694552:p <- layout(
1593594694569:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593594694590:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593594695278:p
1593594723761:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594723779:, marker = list(size = 10,
1593594723797:color = 'rgba(255, 182, 193, .9)',
1593594723812:line = list(color = 'rgba(152, 0, 0, .8)',
1593594723826:width = 2)))
1593594724375:p<-add_trace(p, x=seq(x0-1,x1+1, by=(x1-x0)/(nrow(plot_df)-1))
1593594724396:, y=seq(y0-1,y1+1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594724417:, line = list(color = 'blue', width = 4)
1593594724433:)
1593594724458:p <- layout(
1593594724480:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593594724494:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593594725386:p
1593594770027:seq(x0-1,x1+1, by=(x1-x0)/(nrow(plot_df)-1))
1593594800792:x0=floor(as.numeric(min(plot_df$x)))
1593594801335:x1=ceiling(as.numeric(max(plot_df$x)))
1593594802501:y0=(slope*x0)+as.numeric(int)
1593594803049:y1=(slope*x1)+as.numeric(int)
1593594806556:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594806576:, marker = list(size = 10,
1593594806594:color = 'rgba(255, 182, 193, .9)',
1593594806608:line = list(color = 'rgba(152, 0, 0, .8)',
1593594806623:width = 2)))
1593594819890:p<-add_trace(p, x=seq(x0-1,x1+1, by=(x1-x0)/(nrow(plot_df)-1))
1593594819910:, y=seq(y0-1,y1+1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594819925:, line = list(color = 'blue', width = 4)
1593594819940:)
1593594822837:p
1593594826174:p<-add_trace(p, x=seq(x0-1,x1+1, by=(x1-x0)/(nrow(plot_df)-1))
1593594826190:, y=seq(y0-1,y1+1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594826208:, line = list(color = 'blue', width = 4)
1593594826226:)
1593594827180:p <- layout(
1593594827197:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593594827218:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593594828182:p
1593594838519:x0=floor(as.numeric(min(plot_df$x)))
1593594838960:x1=ceiling(as.numeric(max(plot_df$x)))
1593594839392:y0=(slope*x0)+as.numeric(int)
1593594839781:y1=(slope*x1)+as.numeric(int)
1593594841920:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594841935:, marker = list(size = 10,
1593594841949:color = 'rgba(255, 182, 193, .9)',
1593594841963:line = list(color = 'rgba(152, 0, 0, .8)',
1593594841978:width = 2)))
1593594863584:seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594870254:length(seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1)))
1593594876970:plot_df
1593594891303:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594891324:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594891341:, line = list(color = 'blue', width = 4)
1593594891360:)
1593594895303:p
1593594909103:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594909126:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594909145:, line = list(color = 'blue', width = 4)
1593594909162:)
1593594926415:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594926435:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines", name='abline'
1593594926457:, line = list(color = 'blue', width = 4)
1593594926477:)
1593594926737:p <- layout(
1593594926757:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593594926776:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593594927410:p
1593594949672:x0=floor(as.numeric(min(plot_df$x)))
1593594949975:x1=ceiling(as.numeric(max(plot_df$x)))
1593594950042:y0=(slope*x0)+as.numeric(int)
1593594950237:y1=(slope*x1)+as.numeric(int)
1593594951033:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593594951052:, marker = list(size = 10,
1593594951071:color = 'rgba(255, 182, 193, .9)',
1593594951089:line = list(color = 'rgba(152, 0, 0, .8)',
1593594951107:width = 2)))
1593594953025:p
1593594960430:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593594960446:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593594960466:, line = list(color = 'blue', width = 4)
1593594960486:)
1593594962341:p
1593594979024:p <- layout(
1593594979043:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593594979062:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593594980847:p
1593595004453:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595004475:, marker = list(size = 10,
1593595004491:color = 'rgba(255, 182, 193, .9)',
1593595004506:line = list(color = 'rgba(152, 0, 0, .8)',
1593595004520:width = 2)))
1593595004978:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595005000:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595005014:, line = list(color = 'blue', width = 4)
1593595005029:)
1593595005283:p <- layout(
1593595005300:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1))
1593595005321:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1)))
1593595006103:p
1593595023630:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595023651:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595023668:, line = list(color = 'blue', width = 4)
1593595023685:)
1593595024235:p <- layout(
1593595024253:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593595024269:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593595024865:p
1593595028311:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595028330:, marker = list(size = 10,
1593595028357:color = 'rgba(255, 182, 193, .9)',
1593595028379:line = list(color = 'rgba(152, 0, 0, .8)',
1593595028396:width = 2)))
1593595028695:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595028714:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595028732:, line = list(color = 'blue', width = 4)
1593595028762:)
1593595029033:p <- layout(
1593595029051:p, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593595029067:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593595029859:p
1593595067989:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595068011:, marker = list(size = 10,
1593595068032:color = 'rgba(255, 182, 193, .9)',
1593595068051:line = list(color = 'rgba(152, 0, 0, .8)',
1593595068066:width = 2)))
1593595068281:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595068305:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595068326:, line = list(color = 'blue', width = 4)
1593595068342:)
1593595068976:p <- layout(
1593595068995:p, showlegend = F
1593595069014:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593595069052:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593595069843:p
1593595126695:x0=floor(as.numeric(min(plot_df$x)))-2
1593595127112:x1=ceiling(as.numeric(max(plot_df$x)))+2
1593595127453:y0=(slope*x0)+as.numeric(int)
1593595127723:y1=(slope*x1)+as.numeric(int)
1593595128249:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595128266:, marker = list(size = 10,
1593595128287:color = 'rgba(255, 182, 193, .9)',
1593595128307:line = list(color = 'rgba(152, 0, 0, .8)',
1593595128322:width = 2)))
1593595128928:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595128947:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595128971:, line = list(color = 'blue', width = 4)
1593595128990:)
1593595129754:p <- layout(
1593595129773:p, showlegend = F
1593595129791:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593595129809:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593595130803:p
1593595153828:x0=floor(as.numeric(min(plot_df$x)))-1
1593595154062:x1=ceiling(as.numeric(max(plot_df$x)))+1
1593595154418:y0=(slope*x0)+as.numeric(int)
1593595154860:y1=(slope*x1)+as.numeric(int)
1593595155453:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595155474:, marker = list(size = 10,
1593595155489:color = 'rgba(255, 182, 193, .9)',
1593595155510:line = list(color = 'rgba(152, 0, 0, .8)',
1593595155525:width = 2)))
1593595193028:x0=floor(as.numeric(min(plot_df$x)))-1
1593595193241:x1=ceiling(as.numeric(max(plot_df$x)))+1
1593595193424:y0=(slope*x0)+as.numeric(int)
1593595193595:y1=(slope*x1)+as.numeric(int)
1593595194075:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595194105:, marker = list(size = 10,
1593595194125:color = 'rgba(255, 182, 193, .9)',
1593595194143:line = list(color = 'rgba(152, 0, 0, .8)',
1593595194162:width = 2)))
1593595194682:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595194705:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595194722:, marker = list(size=0, color='blue')
1593595194736:, line = list(color = 'blue', width = 4)
1593595194750:)
1593595195207:p <- layout(
1593595195228:p, showlegend = F
1593595195247:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593595195261:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593595196162:p
1593595281586:x0=floor(as.numeric(min(plot_df$x)))-1
1593595281758:x1=ceiling(as.numeric(max(plot_df$x)))+1
1593595281925:y0=(slope*x0)+as.numeric(int)
1593595282097:y1=(slope*x1)+as.numeric(int)
1593595282301:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595282324:, marker = list(size = 10,
1593595282342:color = 'rgba(255, 182, 193, .9)',
1593595282356:line = list(color = 'rgba(152, 0, 0, .8)',
1593595282369:width = 2)))
1593595282759:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595282779:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595282799:, marker = list(size=0, color='blue',
1593595282815:line = list(color = 'blue',
1593595282830:width = 0))
1593595282846:, line = list(color = 'blue', width = 4)
1593595282863:)
1593595283229:p <- layout(
1593595283246:p, showlegend = F
1593595283270:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593595283285:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593595284017:p
1593595433437:x0=floor(as.numeric(min(plot_df$x)))-1
1593595433622:x1=ceiling(as.numeric(max(plot_df$x)))+1
1593595433784:y0=(slope*x0)+as.numeric(int)
1593595433965:y1=(slope*x1)+as.numeric(int)
1593595434378:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595434399:, marker = list(size = 10,
1593595434418:color = 'rgba(255, 182, 193, .9)',
1593595434434:line = list(color = 'rgba(152, 0, 0, .8)',
1593595434449:width = 2)))
1593595434813:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595434834:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595434852:, marker = list(size=0, color='blue',
1593595434871:line = list(color = 'blue',
1593595434886:width = 0, size=0))
1593595434898:, line = list(color = 'blue', width = 4)
1593595434913:)
1593595435269:p <- layout(
1593595435286:p, showlegend = F
1593595435303:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0-1, x1+1))
1593595435320:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0-1, y1+1)))
1593595437350:p
1593595466820:x0=floor(as.numeric(min(plot_df$x)))-1
1593595467050:x1=ceiling(as.numeric(max(plot_df$x)))+1
1593595467190:y0=(slope*x0)+as.numeric(int)
1593595467346:y1=(slope*x1)+as.numeric(int)
1593595467543:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595467563:, marker = list(size = 10,
1593595467583:color = 'rgba(255, 182, 193, .9)',
1593595467597:line = list(color = 'rgba(152, 0, 0, .8)',
1593595467611:width = 2)))
1593595467740:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595467756:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595467778:, marker = list(size=0, color='blue',
1593595467795:line = list(color = 'blue',
1593595467815:width = 0, size=0))
1593595467830:, line = list(color = 'blue', width = 4)
1593595467848:)
1593595468149:p <- layout(
1593595468168:p, showlegend = F
1593595468185:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595468203:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595469092:p
1593595486083:x0=floor(as.numeric(min(plot_df$x)))
1593595486324:x1=ceiling(as.numeric(max(plot_df$x)))
1593595486508:y0=(slope*x0)+as.numeric(int)
1593595486707:y1=(slope*x1)+as.numeric(int)
1593595487375:p <- plot_ly(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595487391:, marker = list(size = 10,
1593595487407:color = 'rgba(255, 182, 193, .9)',
1593595487427:line = list(color = 'rgba(152, 0, 0, .8)',
1593595487441:width = 2)))
1593595487929:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595487948:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595487968:, marker = list(size=0, color='blue',
1593595487985:line = list(color = 'blue',
1593595488002:width = 0, size=0))
1593595488019:, line = list(color = 'blue', width = 4)
1593595488034:)
1593595489218:p <- layout(
1593595489238:p, showlegend = F
1593595489255:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595489275:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595490082:p
1593595637143:p <- plot_ly()
1593595638528:p
1593595662705:p <- plot_ly()
1593595663269:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595663288:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595663307:, marker = list(size=0, color='blue',
1593595663324:line = list(color = 'blue',
1593595663339:width = 0, size=0))
1593595663358:, line = list(color = 'blue', width = 4)
1593595663373:)
1593595663892:p <- add_trace(data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595663912:, marker = list(size = 10,
1593595663933:color = 'rgba(255, 182, 193, .9)',
1593595663951:line = list(color = 'rgba(152, 0, 0, .8)',
1593595663968:width = 2)))
1593595674393:p <- plot_ly()
1593595675171:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595675189:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595675206:, marker = list(size=0, color='blue',
1593595675231:line = list(color = 'blue',
1593595675249:width = 0, size=0))
1593595675263:, line = list(color = 'blue', width = 4)
1593595675279:)
1593595675570:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595675585:, marker = list(size = 10,
1593595675617:color = 'rgba(255, 182, 193, .9)',
1593595675639:line = list(color = 'rgba(152, 0, 0, .8)',
1593595675656:width = 2)))
1593595678710:p <- layout(
1593595678729:p, showlegend = F
1593595678750:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595678766:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595680344:p
1593595709667:p <- plot_ly()
1593595711123:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595711144:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595711161:#, marker = list(size=0, color='blue',
1593595711179:#                 line = list(color = 'blue',
1593595711196:#                             width = 0, size=0))
1593595711211:, line = list(color = 'blue', width = 4)
1593595711231:)
1593595711812:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595711832:, marker = list(size = 10,
1593595711854:color = 'rgba(255, 182, 193, .9)',
1593595711873:line = list(color = 'rgba(152, 0, 0, .8)',
1593595711896:width = 2)))
1593595712466:p <- layout(
1593595712485:p, showlegend = F
1593595712503:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595712527:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595713883:p
1593595785388:x0=floor(as.numeric(min(plot_df$x)))-0.5
1593595785769:x1=floor(as.numeric(max(plot_df$x)))+0.5
1593595786062:y0=(slope*x0)+as.numeric(int)
1593595786592:y1=(slope*x1)+as.numeric(int)
1593595787038:p <- plot_ly()
1593595787414:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595787433:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595787449:#, marker = list(size=0, color='blue',
1593595787466:#                 line = list(color = 'blue',
1593595787481:#                             width = 0, size=0))
1593595787495:, line = list(color = 'blue', width = 2)
1593595787511:)
1593595788039:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595788066:, marker = list(size = 10,
1593595788091:color = 'rgba(255, 182, 193, .9)',
1593595788111:line = list(color = 'rgba(152, 0, 0, .8)',
1593595788145:width = 2)))
1593595789002:p <- layout(
1593595789019:p, showlegend = F
1593595789039:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595789059:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595789821:p
1593595873158:x0=floor(as.numeric(min(plot_df$x)))-0.25
1593595873488:x1=floor(as.numeric(max(plot_df$x)))+0.25
1593595873760:y0=(slope*x0)+as.numeric(int)
1593595874277:y1=(slope*x1)+as.numeric(int)
1593595875104:p <- plot_ly()
1593595875336:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595875360:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595875377:#, marker = list(size=0, color='blue',
1593595875393:#                 line = list(color = 'blue',
1593595875410:#                             width = 0, size=0))
1593595875429:, line = list(color = 'blue', width = 2)
1593595875443:)
1593595875928:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595875949:, marker = list(size = 10,
1593595875969:color = 'rgba(255, 182, 193, .9)',
1593595875987:line = list(color = 'rgba(152, 0, 0, .8)',
1593595876003:width = 2)))
1593595876750:p <- layout(
1593595876767:p, showlegend = F
1593595876784:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595876803:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595877323:p
1593595893020:x0=floor(as.numeric(min(plot_df$x)))-0.25
1593595893516:x1=floor(as.numeric(max(plot_df$x)))+0.25
1593595894022:y0=(slope*x0)+as.numeric(int)
1593595894545:y1=(slope*x1)+as.numeric(int)
1593595895024:p <- plot_ly()
1593595895488:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595895510:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595895531:#, marker = list(size=0, color='blue',
1593595895552:#                 line = list(color = 'blue',
1593595895567:#                             width = 0, size=0))
1593595895583:, line = list(color = 'blue', width = 2)
1593595895599:)
1593595896253:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595896272:, marker = list(size = 10,
1593595896298:color = 'rgba(255, 182, 193, .9)',
1593595896318:line = list(color = 'rgba(152, 0, 0, .8)',
1593595896336:width = 2)))
1593595897049:p <- layout(
1593595897067:p, showlegend = F
1593595897084:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595897101:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595898002:p
1593595910424:x0=floor(as.numeric(min(plot_df$x)))-0.5
1593595911114:x1=floor(as.numeric(max(plot_df$x)))+0.5
1593595911695:y0=(slope*x0)+as.numeric(int)
1593595911941:y1=(slope*x1)+as.numeric(int)
1593595912435:p <- plot_ly()
1593595912829:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595912848:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595912865:#, marker = list(size=0, color='blue',
1593595912884:#                 line = list(color = 'blue',
1593595912899:#                             width = 0, size=0))
1593595912913:, line = list(color = 'blue', width = 2)
1593595912927:)
1593595913469:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595913486:, marker = list(size = 10,
1593595913503:color = 'rgba(255, 182, 193, .9)',
1593595913523:line = list(color = 'rgba(152, 0, 0, .8)',
1593595913536:width = 2)))
1593595914051:p <- layout(
1593595914071:p, showlegend = F
1593595914093:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595914109:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595915540:p
1593595951200:x0=floor(as.numeric(min(plot_df$x)))-0.5
1593595951497:x1=floor(as.numeric(max(plot_df$x)))+0.5
1593595952110:y0=(slope*x0)+as.numeric(int)
1593595952129:y1=(slope*x1)+as.numeric(int)
1593595952153:p <- plot_ly()
1593595952236:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595952256:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595952270:#, marker = list(size=0, color='blue',
1593595952292:#                 line = list(color = 'blue',
1593595952313:#                             width = 0, size=0))
1593595952332:, line = list(color = 'blue', width = 2)
1593595952351:)
1593595952473:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595952498:, marker = list(size = 10,
1593595952519:color = 'rgba(255, 182, 193, .9)',
1593595952541:line = list(color = 'rgba(152, 0, 0, .8)',
1593595952561:width = 4)))
1593595952999:p <- layout(
1593595953020:p, showlegend = F
1593595953041:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595953075:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595953926:p
1593595989088:x0=floor(as.numeric(min(plot_df$x)))-0.5
1593595989269:x1=floor(as.numeric(max(plot_df$x)))+0.5
1593595989438:y0=(slope*x0)+as.numeric(int)
1593595989580:y1=(slope*x1)+as.numeric(int)
1593595989782:p <- plot_ly()
1593595990157:p<-add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593595990178:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1)), mode="lines"
1593595990199:#, marker = list(size=0, color='blue',
1593595990214:#                 line = list(color = 'blue',
1593595990231:#                             width = 0, size=0))
1593595990246:, line = list(color = 'blue', width = 1)
1593595990263:)
1593595990527:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593595990545:, marker = list(size = 10,
1593595990566:color = 'red',
1593595990582:line = list(color = 'red',
1593595990603:width = 2)))
1593595991275:p <- layout(
1593595991295:p, showlegend = F
1593595991314:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range = c(x0, x1))
1593595991332:, yaxis = list(title = "sample", showline = T, zeroline = F, range = c(y0, y1)))
1593595991826:p
1593596094595:library(plotly)
1593596372089:ynames = NULL
1593596616739:library(plotly)
1593596617055:qqPlotly <- function(y, ynames = NULL) {
1593596617077:if (is.null(ynames)) names(y) <- ynames
1593596617093:y <- sort(y)
1593596617115:i <- 1:length(y)
1593596617130:fi <- (i - 0.5) / length(y)
1593596617148:x.norm <- qnorm(fi)
1593596617172:plot_df <- as.data.frame(cbind(x=as.double(x.norm), y=as.double(y), wid = names(y)))
1593596617192:# compute the intercept and slope of the line that passes
1593596617209:y <- as.numeric(quantile(y, c(0.25, 0.75), type = 5))
1593596617227:x <- qnorm( c(0.25, 0.75))
1593596617245:slope <- as.numeric(diff(y)) / diff(x)
1593596617263:int <- y[1] - slope * x[1]
1593596617290:x0=floor(as.numeric(min(plot_df$x)))-0.5
1593596617311:x1=floor(as.numeric(max(plot_df$x)))+0.5
1593596617327:y0=(slope*x0)+as.numeric(int)
1593596617344:y1=(slope*x1)+as.numeric(int)
1593596617372:p <- plot_ly()
1593596617392:p <- add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593596617410:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1))
1593596617424:, mode="lines", line=list(color='blue', width=1))
1593596617454:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593596617486:, marker = list(size=10, color='red', line = list(color='red', width=2)))
1593596617507:p <- layout(p, showlegend=F
1593596617525:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range=c(x0,x1))
1593596617546:, yaxis = list(title = "sample", showline = T, zeroline = F, range=c(y0,y1)))
1593596617566:return(p)
1593596617583:}
1593596647003:library(plotly)
1593596647517:qqPlotly <- function(y, ynames = NULL) {
1593596647550:if (is.null(ynames)) names(y) <- ynames
1593596647573:y <- sort(y)
1593596647596:i <- 1:length(y)
1593596647613:fi <- (i - 0.5) / length(y)
1593596647630:x.norm <- qnorm(fi)
1593596647651:plot_df <- as.data.frame(cbind(x=as.double(x.norm), y=as.double(y), wid = names(y)))
1593596647671:# compute the intercept and slope of the line that passes
1593596647689:y <- as.numeric(quantile(y, c(0.25, 0.75), type = 5))
1593596647703:x <- qnorm( c(0.25, 0.75))
1593596647717:slope <- as.numeric(diff(y)) / diff(x)
1593596647735:int <- y[1] - slope * x[1]
1593596647754:x0=floor(as.numeric(min(plot_df$x)))-0.5
1593596647772:x1=floor(as.numeric(max(plot_df$x)))+0.5
1593596647789:y0=(slope*x0)+as.numeric(int)
1593596647805:y1=(slope*x1)+as.numeric(int)
1593596647824:p <- plot_ly()
1593596647839:p <- add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593596647856:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1))
1593596647873:, mode="lines", line=list(color='blue', width=1))
1593596647888:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593596647903:, marker = list(size=10, color='red', line = list(color='red', width=2)))
1593596647922:p <- layout(p, showlegend=F
1593596647937:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range=c(x0,x1))
1593596647956:, yaxis = list(title = "sample", showline = T, zeroline = F, range=c(y0,y1)))
1593596647970:return(p)
1593596647985:}
1593596669121:source(paste0(getwd(),'/common/df2qqs.R'))
1593596669341:source(paste0(getwd(),'/common/qqPlotly.R'))
1593596670215:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593596670619:source(paste0(getwd(),'/common/dealing_with_groups.R'))
1593596671447:source(paste0(getwd(),'/modules/df2Table.R'))
1593596702985:qqPlotly(df$media)
1593596815345:y
1593596826839:is.name(y)
1593596849555:names(y) <- c('a','b')
1593596858091:is.name(y)
1593596872562:y
1593596915675:library(plotly)
1593596923000:qqPlotly <- function(x, y) {
1593596923015:names(y) <- x
1593596923035:y <- sort(y)
1593596923064:i <- 1:length(y)
1593596923079:fi <- (i - 0.5) / length(y)
1593596923091:x.norm <- qnorm(fi)
1593596923133:plot_df <- as.data.frame(cbind(x=as.double(x.norm), y=as.double(y), wid = names(y)))
1593596923164:# compute the intercept and slope of the line that passes
1593596923185:y <- as.numeric(quantile(y, c(0.25, 0.75), type = 5))
1593596923201:x <- qnorm( c(0.25, 0.75))
1593596923217:slope <- as.numeric(diff(y)) / diff(x)
1593596923233:int <- y[1] - slope * x[1]
1593596923255:x0=floor(as.numeric(min(plot_df$x)))-0.5
1593596923274:x1=floor(as.numeric(max(plot_df$x)))+0.5
1593596923288:y0=(slope*x0)+as.numeric(int)
1593596923319:y1=(slope*x1)+as.numeric(int)
1593596923361:p <- plot_ly()
1593596923382:p <- add_trace(p, x=seq(x0,x1, by=(x1-x0)/(nrow(plot_df)-1))
1593596923400:, y=seq(y0,y1, by=(y1-y0)/(nrow(plot_df)-1))
1593596923418:, mode="lines", line=list(color='blue', width=1))
1593596923436:p <- add_trace(p, data=plot_df, type='scatter', x=~x, y=~y, text=~wid
1593596923451:, marker = list(size=10, color='red', line = list(color='red', width=2)))
1593596923470:p <- layout(p, showlegend=F
1593596923487:, xaxis = list(title = "theoretical", showline = T, zeroline = F, range=c(x0,x1))
1593596923505:, yaxis = list(title = "sample", showline = T, zeroline = F, range=c(y0,y1)))
1593596923522:return(p)
1593596923540:}
1593596939148:qqPlotly(df$UserID, df$media)
1593596973394:car::qqPlot(as.formula(paste('~', dv)), data = df)
1593597002505:qqPlotly(df$UserID, df$media)
1593597011893:dv
1593597032814:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593597033024:df <- group_by_at(df, vars(ivs))
1593597033871:qqPlotly(df$UserID, df$media)
1593597042138:dv='media'
1593597042671:car::qqPlot(as.formula(paste('~', dv)), data = df)
1593597276407:dat <- df2qqs(as.data.frame(subset(data, var == dv)), ivs)
1593597277394:rownames(dat) <- dat[[wid]]
1593597279644:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593597280470:model <- lm(as.formula(sformula), data = dat)
1593597284519:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593597287885:freq_df
1593597293052:i=2
1593597300858:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593597301477:df <- group_by_at(df, vars(ivs))
1593597308942:qqPlotly(df$UserID, df$media)
1593597318259:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593597318632:model <- lm(as.formula(sformula), data = dat)
1593597318888:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593597319396:i=2
1593597321579:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593597323159:df <- group_by_at(df, vars(ivs))
1593597324209:qqPlotly(df$UserID, df$media)
1593597356230:dv
1593597375941:dv='media'
1593597376928:car::qqPlot(as.formula(paste('~', dv)), data = df)
1593597435561:df
1593597464521:sformula <- paste(dv ,'~', paste0(ivs, collapse = "*"))
1593597465005:model <- lm(as.formula(sformula), data = dat)
1593597466222:freq_df <- subset(freq_table(dat, vars = ivs), n > 4)
1593597467173:i=2
1593597479811:df <- subset_by_tbl(dat, freq_df[i,], ivs = ivs)
1593597483444:df <- group_by_at(df, vars(ivs))
1593597489594:df
1593597496004:qqPlotly(df$UserID, df$media)
1593597524920:dv='media'
1593597530427:car::qqPlot(as.formula(paste('~', dv)), data = df)
1593610197244:?qqPlot
1593611341850:?fixedRow
1593612275640:ivs
1593612282096:freq_df[i,c(ivs)]
1593612287488:i
1593612318700:freq_df[i,c(ivs)]
1593612393015:paste0(freq_df[i,c(ivs)], collapse = ':')
1593612404307:freq_df[i,c(ivs)]
1593612429613:paste0(as.character(freq_df[i,c(ivs)]), collapse = ':')
1593612439494:as.character(freq_df[i,c(ivs)])
1593612468573:as.character(freq_df[i,c(ivs)]$realizacao)
1593612519838:as.character(freq_df[i,c(ivs)])
1593612531617:as.character(freq_df[,c(ivs)])
1593612536025:as.character(freq_df[i,c(ivs)])
1593612544586:?factor
1593612562832:names(freq_df[i,c(ivs)])
1593612588152:paste0(names(freq_df[i,c(ivs)]), collapse = ':')
1593612698383:sapply(freq_df[i,c(ivs)], FUN = function(x) as.character(x))
1593612711452:sapply(freq_df[i,c(ivs)], FUN = function(x) as.character(x)), collapse=':')
1593612717034:sapply(freq_df[i,c(ivs)], FUN = function(x) as.character(x))
1593612835208:sapply(freq_df[i,c(ivs)], FUN = function(x) as.character(x))
1593613046443:tbl <- freq_df[i,c(ivs)]
1593613048593:tbl
1593613076675:sapply(tbl, as.character)
1593613099533:paste0(sapply(tbl, as.character), collapse = ":")
1593613219859:tbl_vars
1593613285691:tbl
1593613297289:paste(sapply(as.character(tbl), FUN = function(itbl) paste(names(itbl), '=', itbl)), collapse = ":")
1593613308619:as.character(tbl)
1593613318740:tbl <- freq_df[i,c(ivs)]
1593613321541:tbl
1593613355028:freq_df[i,c(ivs)]
1593613396139:tbl <- freq_df[i,c(ivs)]
1593613400337:as.character(tbl)
1593613411042:names(tbl)
1593613433130:names(tbl)
1593613548767:sapply(names(tbl), FUN = function(ncolumn) { paste0(ncolumn,':',tbt[[ncolumn]]) })
1593613557653:sapply(names(tbl), FUN = function(ncolumn) { paste0(ncolumn,':',tbl[[ncolumn]]) })
1593613602049:fieldname <- paste(sapply(names(tbl), FUN = function(ncolumn) { paste0(ncolumn,':',tbl[[ncolumn]]) }))
1593613604102:fieldname
1593613645138:fieldname <- paste(sapply(names(tbl), FUN = function(ncolumn) { paste0(ncolumn,':',tbl[[ncolumn]]) }), collapse = " ")
1593613647468:fieldname
1593613660353:fieldname <- paste(sapply(names(tbl), FUN = function(ncolumn) { paste0(ncolumn,':',tbl[[ncolumn]]) }), collapse = "-")
1593613662203:fieldname
1593613681037:fieldname <- paste(sapply(names(tbl), FUN = function(ncolumn) {
1593613681060:paste0(ncolumn,':',tbl[[ncolumn]]) })
1593613681079:, collapse = " - ")
1593613683185:fieldname
1593614069089:source(paste0(getwd(),'/common/qqPlotly.R'))
1593614102150:df[[dv]]
1593614112276:df[[wid]]
1593614321647:?layout
1593614344180:?renderPlotly
1593614408916:?layout
1593614429682:plot_ly()
1593614432635:plot_ly
1593614438512:?plot_ly
1593614799472:runApp()
1593615177104:runApp()
1593615529408:runApp()
1593616227645:runApp()
1593616350825:runApp()
1593617041197:runApp()
1593617155684:runApp()
1593617275934:runApp()
1593617387844:library(DT)
1593617388044:library(dplyr)
1593617388245:library(plotly)
1593617415874:runApp()
1593617587392:runApp()
1593617695667:runApp()
1593620556041:ggPlotAoV <- function(data, x, y, color, aov, pwc, linetype = color, by = c(), addParam = c() ) {
1593620556083:pwc <- add_xy_position(pwc, x = x)
1593620556112:bxp <- ggboxplot(data, x = x, y = y, color = color, palette = "jco", add=addParam, facet.by = by)
1593620556133:bxp <- bxp + stat_pvalue_manual(pwc, color = color, linetype = linetype, hide.ns = T
1593620556158:, tip.length = 0, step.increase = 0.1, step.group.by = by)
1593620556179:bxp <- bxp + labs(subtitle = get_test_label(aov, detailed = T), caption = get_pwc_label(pwc))
1593620556201:return(bxp)
1593620556227:}
1593620556801:threeWayAnovaPlots <- function(data, dv, ivs, aov, pwcs, addParam=c(), width = 800, height=800) {
1593620556821:do.call(verticalLayout, lapply(ivs, FUN = function(iv) {
1593620556840:pwc <- pwcs[[iv]]
1593620556862:do.call(verticalLayout, lapply(setdiff(ivs, iv), FUN = function(gby) {
1593620556881:color <- setdiff(setdiff(ivs, iv), gby)
1593620556901:verticalLayout(
1593620556925:br(), p(strong(paste("Gráficos com base de:", iv, "e separado por:", gby,"- Color:", color)))
1593620556945:, renderPlot({
1593620556964:ggPlotAoV(subset(data, var == dv), iv, dv, color=color, by=gby, aov=aov, pwc=pwc, addParam=addParam)
1593620556985:}
1593620557008:, width = width
1593620557031:, height = height)
1593620557051:)
1593620557070:}))
1593620557089:}))
1593620557109:}
1593620625063:length(c(1,2,3))
1593620630067:length(c(1,2,3,455))
1593621418026:runApp()
1593621975794:runApp()
1593622561893:runApp()
1593622629277:runApp()
1593622794152:runApp()
1593623021784:runApp()
1593623285323:runApp()
1593623380600:runApp()
1593623483226:runApp()
1593623603937:runApp()
1593623694979:runApp()
1593623774083:dat
1593623928050:runApp()
1593624109822:runApp()
1593624419963:runApp()
1593625108735:runApp()
1593625526965:runApp()
1593626903127:runApp()
1593635169425:?checkboxInput
1593636677070:runApp()
1593636838121:runApp()
1593637068835:runApp()
1593651906540:gather
1593651910706:gather
1593651924156:?gather
1593654614176:?pivot_longer
1593654680813:initData <- read_csv('data/fss-qpj.csv')
1593654724817:pivot_longer(initData, c("dimensao1","dimensao2","dimensao3"))
1593654747834:tidyr::pivot_longer(initData, c("dimensao1","dimensao2","dimensao3"))
1593654764920:pdf <- tidyr::pivot_longer(initData, c("dimensao1","dimensao2","dimensao3"))
1593654785859:View(initData)
1593654809817:View(pdf)
1593655201181:pdf <- tidyr::pivot_longer(initData, c("dimensao1","dimensao2","dimensao3"), names_to = "times", values_to = "score")
1593661027206:runApp()
1593661032990:runApp()
1593661045632:runApp()
1593661086267:runApp()
1593661090758:runApp()
1593661125969:runApp()
1593661156261:runApp()
1593661212565:runApp()
1593662127019:?selectte
1593662140450:?textInput
1593663426043:runApp()
1593663436835:runApp()
1593663465742:runApp()
1593663494664:runApp()
1593663544268:runApp()
1593663666402:runApp()
1593663774575:?textInput
1593665099655:?convert_as_factor
1593665617922:runApp()
1593665910201:runApp()
1593667795013:runApp()
1593668241949:runApp()
1593668456332:runApp()
1593669429176:runApp()
1593670171889:?anova_test
1593671304481:runApp()
1593671482930:runApp()
1593671554843:runApp()
1593671694009:runApp()
1593671864186:runApp()
1593671915944:runApp()
1593672267623:initData <- read_csv('data/fss-qpj.csv')
1593672353398:df <- tidyr::pivot_longer(initData, input$measuresInput
1593672353416:, names_to = input$timeInput, values_to = input$dvsInput)
1593672458480:df <- tidyr::pivot_longer(initData, c('dimensao1','dimensao2','dimensao3')
1593672458497:, names_to = 'tempo', values_to = 'medida')
1593672523606:df[['tempo']] <- factor(df[['tempo']], levels=c(c('dimensao1','dimensao2','dimensao3')))
1593672525465:df
1593672555565:df <- cbind(row.pos = seq(1:nrow(df)), df)
1593672583270:ivs
1593672663848:ivs = c('realizacao', 'cenario', 'tempo')
1593672725074:df
1593672768733:dat <- df2qqs(df, ivs)
1593672770162:ivs
1593672775508:dat
1593672797547:dv
1593672806583:dv = 'medida'
1593672814898:wid
1593672824081:wid = 'UserID'
1593672826619:ivs
1593672829126:df <- anova_test(dat, dv = dv, wid = wid, within = ivs, detailed = T)
1593672836129:dat
1593672911473:gdat <- group_by_at(dat, ivs)
1593672914718:gdat
1593672921433:df <- anova_test(gdat, dv = dv, wid = wid, within = ivs, detailed = T)
1593672937541:gdat <- group_by_at(dat, ivs)
1593672969045:ivs
1593672973163:wid
1593672977277:gdat <- group_by_at(dat, ivs)
1593672980737:gdat
1593672986471:df <- anova_test(gdat, dv = dv, wid = wid, within = ivs, detailed = T)
1593673040598:df <- tidyr::pivot_longer(initData, c('dimensao1','dimensao2','dimensao3')
1593673040616:, names_to = 'tempo', values_to = 'medida')
1593673055379:dat <- df
1593673056876:dat
1593673067206:df <- anova_test(dat, dv = dv, wid = wid, within = ivs, detailed = T)
1593673076512:gdat <- group_by_at(dat, ivs)
1593673079969:gdat
1593673091108:df <- anova_test(gdat, dv = dv, wid = wid, within = ivs, detailed = T)
1593673100092:colnames(gdat)
1593673125075:df <- anova_test(as.data.frame(gdat), dv = dv, wid = wid, within = ivs, detailed = T)
1593673144801:gdat
1593673155587:df <- anova_test(gdat, dv = dv, wid = wid, within = ivs, detailed = T)
1593673802203:ivs
1593673851712:ivs[-1]
1593673925812:wid
1593673950193:ivs
1593673979241:ivs[length(ivs)]
1593673995410:sformula = paste0(dv," ~ ", paste0(ivs[-1], collapse = "*"),"+Error(",wid,"/",ivs[length(ivs)],")")
1593673997221:sformula
1593674035279:df <- anova_test(gdat, as.formula(sformula), dv, wid = wid, within = ivs, detailed = T)
1593674040272:df
1593674050760:dat
1593674070193:dat <- as.data.frame(dat)
1593674072904:df <- anova_test(dat, as.formula(sformula), dv, wid = wid, within = ivs, detailed = T)
1593674074759:df
1593674295596:df <- get_anova_table(df)
1593674298719:d
1593674301817:df
1593674354940:input$aovtype =1
1593674362465:input <- list()
1593674363991:input$aovtype =1
1593674382038:input$effsize = "ges"
1593674385388:sformula = paste0(dv," ~ ", paste0(ivs[-1], collapse = "*"),"+Error(",wid,"/",ivs[length(ivs)],")")
1593674386639:df <- anova_test(dat, as.formula(sformula), dv, wid = wid, within = ivs
1593674386656:, type=input$aovtype, effect.size=input$effsize, detailed = T)
1593674394761:df <- get_anova_table(df)
1593674398701:d
1593674400148:df
1593674435307:ivs
1593674444352:sformula = paste0(dv," ~ ", paste0(ivs[-1], collapse = "*"),"+Error(",wid,"/",ivs[length(ivs)],")")
1593674446013:sformula
1593674460429:ivs[-1]
1593674486339:1:length(ivs)-1
1593674499087:(length(ivs)-1)
1593674502649:1:(length(ivs)-1)
1593674505833:sformula = paste0(dv," ~ ", paste0(ivs[1:(length(ivs)-1)], collapse = "*"),"+Error(",wid,"/",ivs[length(ivs)],")")
1593674507090:sformula
1593674509700:df <- anova_test(dat, as.formula(sformula), dv, wid = wid, within = ivs
1593674509715:, type=input$aovtype, effect.size=input$effsize, detailed = T)
1593674511598:df <- get_anova_table(df)
1593674516192:df
1593674790702:runApp()
1593674904133:runApp()
1593675020236:runApp()
1593675104725:runApp()
1593675184092:runApp()
1593675311139:dat
1593675393256:dat <- df2qqs(dat, 'realizacao','social','imersao')
1593675404370:dat <- df2qqs(dat, c('realizacao','social','imersao'))
1593675410197:sformula = paste0(dv," ~ ", paste0(ivs[1:(length(ivs)-1)], collapse = "*"),"+Error(",wid,"/",ivs[length(ivs)],")")
1593675410932:print(sformula)
1593675414980:df <- anova_test(
1593675414995:dat, as.formula(sformula), dv, wid = wid, within = ivs, type=input$aovtype
1593675415012:, effect.size=input$effsize, detailed = T)
1593675418207:df
1593675500143:runApp()
1593675602577:runApp()
1593675681354:dat <- group_by_at(dat, ivs)
1593675682678:df <- anova_test(
1593675682694:dat, as.formula(sformula), dv, wid = wid, within = ivs, type=input$aovtype
1593675682714:, effect.size=input$effsize, detailed = T)
1593675703755:dat<- as.data.frame(dat)
1593675707438:dat
1593675717257:df <- anova_test(
1593675717276:dat, as.formula(sformula), dv, wid = wid, within = ivs, type=input$aovtype
1593675717294:, effect.size=input$effsize, detailed = T)
1593675753657:runApp()
1593675937734:sformula = paste0(dv," ~ ", paste0(ivs[1:(length(ivs)-1)], collapse = "*"),"+Error(",wid,"/",ivs[length(ivs)],")")
1593676014054:runApp()
1593676018735:runApp()
1593676030205:runApp()
1593676221065:runApp()
1593676708867:for (iv in ivs) pdata[[iv]] <- factor(pdata[[iv]])
1593676724805:factor(c("a","d","a"))
1593676738615:runApp()
1593676957138:runApp()
1593677077858:runApp()
1593677280998:runApp()
1593677398643:df <- anova_test(
1593677398662:dat, as.formula(sformula), dv, wid = wid, within = ivs, type=input$aovtype
1593677398680:, effect.size=input$effsize, detailed = T)
1593677411420:input$aovtype <- 3
1593677414331:df <- anova_test(
1593677414349:dat, as.formula(sformula), dv, wid = wid, within = ivs, type=input$aovtype
1593677414366:, effect.size=input$effsize, detailed = T)
1593677431133:View(dat)
1593677482531:sformula = paste0(dv," ~ ", paste0(ivs[1:(length(ivs)-1)], collapse = "*")," + Error(",wid,"/",ivs[length(ivs)],")")
1593677483096:print(sformula)
1593677488002:#dat <- df2qqs(dat, c('realizacao','social','imersao'))
1593677488017:#dat <- df2qqs(dat, ivs)
1593677488031:#
1593677488052:for (ele in c(ivs, 'tempo', 'UserID')) print(unique(dat[[ele]]))
1593677521439:#dat <- df2qqs(dat, c('realizacao','social','imersao'))
1593677521456:#dat <- df2qqs(dat, ivs)
1593677521474:#
1593677521488:for (ele in c(ivs, 'UserID')) print(unique(dat[[ele]]))
1593677532364:df <- anova_test(
1593677532385:dat, as.formula(sformula), dv, wid = wid, within = ivs, type=input$aovtype
1593677532403:, effect.size=input$effsize, detailed = T)
1593677536580:df
1593677654096:df <- get_anova_table(df)
1593677658244:df
1593678008416:runApp()
1593678146241:debugSource('~/modules/hypothesisAnova.R')
1593678390237:<- fileInput("fileCSV", "Choose CSV File", multiple = F
1593678390256:, accept = c("text/csv","text/comma-separated-values,text/plain",".csv"))
1593678410952:value = list()
1593678419226:values = list()
1593678479353:values$initData <- read_csv('data/fss-qpj.csv')
1593678488843:values
1593678540680:initData
1593678790392:runApp()
1593678841497:runApp()
1593678936804:initData
1593678943967:values$initData
1593678997086:runApp()
1593679046578:ivs
1593679051941:input$ivsInput
1593679076358:input$ivsInput = c('realizacao','cenario')
1593679133905:runApp()
1593679199342:sformula
1593679237177:runApp()
1593679299461:values
1593679306071:values = list()
1593679338935:initData <- read_csv('data/fss-qpj.csv')
1593679362614:values$initData = initData
1593679369327:wid <- input$idInput
1593679385615:input$idInput <- 'UserID'
1593679388469:wid <- input$idInput
1593679402038:input = list()
1593679405800:wid <- input$idInput
1593679408192:wid
1593679426284:input$idInput = 'UserID'
1593679429220:wid <- input$idInput
1593679430693:wid
1593679434256:pdata <- do.call(rbind, lapply(input$dvsInput, FUN = function(dv) {
1593679434279:outlierIds <- c()
1593679434298:if (!is.null(values$outliers) && nrow(values$outliers) > 0) {
1593679434317:outlierIds <- values$outliers[[wid]][which(values$outliers$var == dv)]
1593679434333:}
1593679434353:nonNormalityIds <- c()
1593679434367:if (!is.null(values$nonNormality) && nrow(values$nonNormality) > 0) {
1593679434381:nonNormalityIds <- values$nonNormality[[wid]][which(values$nonNormality$var == dv)]
1593679434393:}
1593679434412:dat <- values$initData[!values$initData[[wid]] %in% c(outlierIds, nonNormalityIds),]
1593679434425:for (iv in input$ivsInput) {
1593679434440:if (is.numeric(dat[[iv]])) {
1593679434454:quantiles <- quantile(dat[[iv]])
1593679434467:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593679434485:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593679434499:})
1593679434513:dat[[iv]] <- factor(dat[[iv]], levels=c("low", "medium", "high"))
1593679434525:}
1593679434538:}
1593679434559:## ..
1593679434573:if (nrow(dat) > 0) return(cbind(var = dv, dat))
1593679434587:}))
1593679440304:pdata
1593679486006:input$dvsInput = c("measure")
1593679574739:df <- tidyr::pivot_longer(initData, input$measuresInput
1593679574758:, names_to = input$timeInput, values_to = input$dvsInput)
1593679580913:initData
1593679597878:df <- tidyr::pivot_longer(initData, input$measuresInput
1593679597896:, names_to = input$timeInput, values_to = input$dvsInput)
1593679648948:type = "within-subject"
1593679708512:measuresInput
1593679752889:input$measuresInput
1593679780144:input$measuresInput <- c('dimensao1','dimensao2')
1593679790272:input$dvsInput
1593679813050:input$tiemeInput='tempo'
1593679816606:df <- tidyr::pivot_longer(initData, input$measuresInput
1593679816626:, names_to = input$timeInput, values_to = input$dvsInput)
1593679824123:df <- tidyr::pivot_longer(initData, input$measuresInput
1593679824143:, names_to = input$timeInput, values_to = input$dvsInput)
1593679832964:initData
1593679847159:initData <- as.data.frame(initData)
1593679849568:df <- tidyr::pivot_longer(initData, input$measuresInput
1593679849581:, names_to = input$timeInput, values_to = input$dvsInput)
1593679856503:input$timeInput
1593679867175:input$timeInput = 'tempo'
1593679871336:df <- tidyr::pivot_longer(initData, input$measuresInput
1593679871355:, names_to = input$timeInput, values_to = input$dvsInput)
1593679873358:df
1593679895912:df[[input$timeInput]] <- factor(df[[input$timeInput]], levels=c(input$measuresInput))
1593679905873:values$initData <- cbind(row.pos = seq(1:nrow(df)), df)
1593679908772:values$isSetupVars <- TRUE
1593679913979:wid <- input$idInput
1593679915405:wid
1593679920590:pdata <- do.call(rbind, lapply(input$dvsInput, FUN = function(dv) {
1593679920614:outlierIds <- c()
1593679920628:if (!is.null(values$outliers) && nrow(values$outliers) > 0) {
1593679920643:outlierIds <- values$outliers[[wid]][which(values$outliers$var == dv)]
1593679920662:}
1593679920683:nonNormalityIds <- c()
1593679920699:if (!is.null(values$nonNormality) && nrow(values$nonNormality) > 0) {
1593679920713:nonNormalityIds <- values$nonNormality[[wid]][which(values$nonNormality$var == dv)]
1593679920728:}
1593679920746:dat <- values$initData[!values$initData[[wid]] %in% c(outlierIds, nonNormalityIds),]
1593679920760:for (iv in input$ivsInput) {
1593679920775:if (is.numeric(dat[[iv]])) {
1593679920787:quantiles <- quantile(dat[[iv]])
1593679920799:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593679920815:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593679920829:})
1593679920842:dat[[iv]] <- factor(dat[[iv]], levels=c("low", "medium", "high"))
1593679920856:}
1593679920874:}
1593679920894:## ..
1593679920908:if (nrow(dat) > 0) return(cbind(var = dv, dat))
1593679920923:}))
1593679925440:pdata
1593679954752:input$ivsInput
1593679975330:input$ivsInput = c('realizacao','cenario')
1593679979430:pdata <- do.call(rbind, lapply(input$dvsInput, FUN = function(dv) {
1593679979454:outlierIds <- c()
1593679979472:if (!is.null(values$outliers) && nrow(values$outliers) > 0) {
1593679979490:outlierIds <- values$outliers[[wid]][which(values$outliers$var == dv)]
1593679979504:}
1593679979523:nonNormalityIds <- c()
1593679979539:if (!is.null(values$nonNormality) && nrow(values$nonNormality) > 0) {
1593679979557:nonNormalityIds <- values$nonNormality[[wid]][which(values$nonNormality$var == dv)]
1593679979572:}
1593679979593:dat <- values$initData[!values$initData[[wid]] %in% c(outlierIds, nonNormalityIds),]
1593679979621:for (iv in input$ivsInput) {
1593679979639:if (is.numeric(dat[[iv]])) {
1593679979659:quantiles <- quantile(dat[[iv]])
1593679979681:dat[[iv]] <- sapply(dat[[iv]], FUN = function(x) {
1593679979695:if (x <= quantiles[[2]]) "low" else if (x >= quantiles[[4]]) "high" else "medium"
1593679979710:})
1593679979725:dat[[iv]] <- factor(dat[[iv]], levels=c("low", "medium", "high"))
1593679979742:}
1593679979777:}
1593679979803:## ..
1593679979820:if (nrow(dat) > 0) return(cbind(var = dv, dat))
1593679979837:}))
1593679987551:pdata
1593679998848:factors <- input$ivsInput
1593680010795:if (type == "within-subject") factors <- c(wid, input$ivsInput, input$timeInput)
1593680015960:for (fac in factors) pdata[[fac]] <- factor(pdata[[fac]])
1593680022637:values$data <- pdata
1593680030334:values$data
1593680054825:values$data
1593680059969:input$dvsInput
1593680062756:ivs
1593680066569:ivs <- input$ivsInput
1593680069463:type
1593680071809:ivs <- input$ivsInput
1593680072625:if (type == "within-subject") ivs <- c(input$ivsInput, input$timeInput)
1593680078565:ivs
1593680081067:type
1593680085011:input$idInput
1593680089929:values$data
1593680120109:data <- values$data
1593680145167:dvs <- input$dvsInput
1593680146436:dvs
1593680150516:ivs
1593680158716:type
1593680176691:ldvs <- as.list(dvs); names(ldvs) <- dvs
1593680177311:livs <- as.list(ivs); names(livs) <- ivs
1593680181733:livs
1593680183813:ldvs
1593680199982:(length(dvs) > 0 && length(ivs) > 0 && nrow(data) > 0 && length(intersect(dvs, ivs)) == 0)
1593680215776:values$aov <- lapply(ldvs, FUN = function(dv) {
1593680215793:dat <- as.data.frame(subset(data, var == dv))
1593680215813:if (type == 'between-subject') {
1593680215830:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593680215847:df <- tryCatch(anova_test(
1593680215862:dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593680215886:, error = function(e) return(NULL) )
1593680215909:} else if (type == 'within-subject') {
1593680215923:sformula = paste0(dv," ~ ", paste0(ivs[1:(length(ivs)-1)], collapse = "*")," + Error(",wid,"/",ivs[length(ivs)],")")
1593680215940:stopApp()
1593680215961:print(sformula)
1593680215979:#dat <- df2qqs(dat, c('realizacao','social','imersao'))
1593680215996:#dat <- df2qqs(dat, ivs)
1593680216012:#
1593680216027:for (ele in c(ivs, 'UserID')) print(unique(dat[[ele]]))
1593680216045:df <- anova_test(dat, as.formula(sformula), dv, wid = wid, within = ivs, type=input$aovtype
1593680216061:, effect.size=input$effsize, detailed = T)
1593680216077:#, error = function(e) { View(dat); stop(); return(NULL)})
1593680216097:print(df)
1593680216128:df <- get_anova_table(df)
1593680216149:}
1593680216178:if (!is.null(df) && nrow(df) > 0) return(df)
1593680216194:})
1593680235268:dv
1593680249038:dv <- ldvs$measure
1593680253744:dat <- as.data.frame(subset(data, var == dv))
1593680255782:dat
1593680268353:sformula <- as.formula(paste(dv, "~", paste0(ivs, collapse = "*")))
1593680270300:df <- tryCatch(anova_test(
1593680270318:dat, sformula, type=input$aovtype, effect.size=input$effsize, detailed=T)
1593680270336:, error = function(e) return(NULL) )
1593680275130:df
1593680282628:sformula = paste0(dv," ~ ", paste0(ivs[1:(length(ivs)-1)], collapse = "*")," + Error(",wid,"/",ivs[length(ivs)],")")
1593680290583:type
1593680296770:type == 'between-subject'
1593680302518:type == 'within-subject'
1593680304868:sformula = paste0(dv," ~ ", paste0(ivs[1:(length(ivs)-1)], collapse = "*")," + Error(",wid,"/",ivs[length(ivs)],")")
1593680312662:df <- anova_test(dat, as.formula(sformula), dv, wid = wid, within = ivs, type=input$aovtype
1593680312681:, effect.size=input$effsize, detailed = T)
1593680327581:dv
1593680330979:wid
1593680347278:df <- anova_test(dat, as.formula(sformula), dv = dv, wid = wid, within = ivs, type=input$aovtype
1593680347298:, effect.size=input$effsize, detailed = T)
1593680354285:input$effsize
1593680368890:input$effsize = "ges"
1593680375868:input$aovtype
1593680380450:input$aovtype=3
1593680383184:df <- anova_test(dat, as.formula(sformula), dv = dv, wid = wid, within = ivs, type=input$aovtype
1593680383201:, effect.size=input$effsize, detailed = T)
1593680389773:as.formula(sformula)
1593680407377:df <- anova_test(dat, dv = dv, wid = wid, within = ivs, type=input$aovtype
1593680407397:, effect.size=input$effsize, detailed = T)
1593680412151:#, as.formula(sformula)
1593680412172:df <- anova_test(dat, dv = dv, wid = wid, within = ivs, type=input$aovtype
1593680412189:, effect.size=input$effsize, detailed = T)
1593680432184:View(dat)
1593680458015:ivs
1593680499020:#, as.formula(sformula)
1593680499040:anova_test(dat, dv = dv, wid = wid, within = ivs, detailed = T)
1593680609219:time.effect <- dat %>%
1593680609237:group_by(realizacao, cenario) %>%
1593680609256:anova_test(dv = measure, wid = UserID, within = tempo)
1593680612311:time.effect
1593680618287:time.effect <- dat %>%
1593680618307:group_by(realizacao, cenario) %>%
1593680618324:anova_test(dv = measure, wid = UserID, within = tempo)
1593680654621:time.effect <- group_by(dat, realizacao, cenario)
1593680657286:anova_test(time.effect,dv = measure, wid = UserID, within = tempo)
1593680671382:time.effect <- group_by(dat, realizacao, cenario)
1593680671846:anova_test(time.effect, dv = 'measure', wid = 'UserID', within = 'tempo')
1593680684711:time.effect
1593680699337:time.effect <- group_by(dat, realizacao, cenario, tempo)
1593680702617:anova_test(time.effect, dv = 'measure', wid = 'UserID', within = 'tempo')
1593680711524:time.effect <- group_by(dat, realizacao, cenario)
1593680711973:anova_test(time.effect, dv = 'measure', wid = 'UserID', within = 'tempo')
1593680737305:anova_test(as.data.frame(time.effect), dv = 'measure', wid = 'UserID', within = 'tempo')
1593680743683:anova_test(as.data.frame(time.effect), dv = 'measure', wid = 'UserID', within = 'tempo')
1593680748471:as.data.frame(time.effect)
1593680760538:#, as.formula(sformula)
1593680760560:anova_test(dat, dv = dv, wid = wid, within = ivs, detailed = T)
1593680767590:df <- anova_test(dat, dv = dv, wid = wid, within = ivs, type=input$aovtype
1593680767607:, effect.size=input$effsize, detailed = T)
1593680773123:sformula = paste0(dv," ~ ", paste0(ivs[1:(length(ivs)-1)], collapse = "*")," + Error(",wid,"/",ivs[length(ivs)],")")
1593680785404:df <- anova_test(dat, as.formula(sformula), dv = dv, wid = wid, within = ivs, type=input$aovtype
1593680785423:, effect.size=input$effsize, detailed = T)
1593680989863:afex::aov_ez()
1593680994247:?afex::aov_ez
1593681073784:sformula
1593681113793:#, as.formula(sformula)
1593681113808:afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681113824:within = c("tempo"), factorize = T)
1593681193468:#, as.formula(sformula)
1593681193487:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681193503:within = c("tempo"), factorize = T)
1593681201399:aov_mod$anova_table
1593681214954:View(aov_mod$anova_table)
1593681274994:#, as.formula(sformula)
1593681275014:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681275029:within = c("tempo"), factorize = T, type = T)
1593681279172:#, as.formula(sformula)
1593681279193:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681279211:within = c("tempo"), factorize = T, type = 2)
1593681284352:#, as.formula(sformula)
1593681284370:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681284382:within = c("tempo"), factorize = T, type = 1)
1593681299300:#, as.formula(sformula)
1593681299319:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681299334:within = c("tempo"), factorize = T, type = as.character(1))
1593681304552:#, as.formula(sformula)
1593681304568:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681304587:within = c("tempo"), factorize = T, type = as.character(3))
1593681317544:afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681317562:within = c("tempo"), factorize = T, type = as.character(3))
1593681321816:afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593681321829:within = c("tempo"), factorize = T, type = as.character(1))
1593681377610:aov_mod$lm$call
1593681919815:ivs[1:(length(ivs)-1)]
1593681930357:paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593681943610:sfactors = paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593681980891:sfactors = paste0(ivs, collapse = "*")
1593682005017:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/(",sfactors,"))")
1593682007583:sformula
1593682053636:# df %>% anova_test(len ~ supp*dose + Error(id/(supp*dose)))
1593682053655:anova_test(dat, as.formula(sformula))
1593682069530:wid
1593682071068:# df %>% anova_test(len ~ supp*dose + Error(id/(supp*dose)))
1593682071084:anova_test(dat, as.formula(sformula), wid = wid)
1593682103701:# df %>% anova_test(len ~ supp*dose + Error(id/(supp*dose)))
1593682103717:anova_test(dat, as.formula(sformula), detailed = T)
1593682121910:?anova_test
1593682157150:sfactors = paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593682158852:sfactors
1593682161097:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/(",sfactors,"))")
1593682162566:sformula
1593682176887:# df %>% anova_test(len ~ supp*dose + Error(id/(supp*dose)))
1593682176903:anova_test(dat, as.formula(sformula), detailed = T)
1593682201292:#, as.formula(sformula)
1593682201312:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593682201326:within = c("tempo"), factorize = T)
1593682208542:View(aov_mod$anova_table)
1593682425299:anova_test(
1593682425316:data = dat, dv = score, wid = id,
1593682425332:within = c(diet, exercises, time)
1593682425345:)
1593682429373:dat
1593682499221:anova_test(
1593682499243:data = dat, dv = measure, wid = UserID,
1593682499262:within = c(realizacao, cenario, tempo)
1593682499278:)
1593682573232:gdat <- group_by(dat, realizacao, cenario)
1593682575042:anova_test(
1593682575055:data = gdat, dv = measure, wid = UserID,
1593682575078:within = c(realizacao, cenario, tempo)
1593682575092:)
1593682609917:anova_test(
1593682609935:data = dat, dv = measure, wid = UserID,
1593682609956:within = c(realizacao, cenario, tempo)
1593682609968:)
1593682699106:gdat <- convert_as_factor(dat, UserID, time)
1593682709106:gdat <- convert_as_factor(dat, UserID, tempo)
1593682710829:gdat
1593682728102:anova_test(
1593682728120:data = gdat, dv = measure, wid = UserID,
1593682728138:within = c(realizacao, cenario, tempo)
1593682728155:)
1593682737983:gdat$UserID
1593682744158:gdat$tempo
1593682758930:gdat <- convert_as_factor(dat, UserID, tempo, realizacao)
1593682760061:anova_test(
1593682760079:data = gdat, dv = measure, wid = UserID,
1593682760097:within = c(realizacao, cenario, tempo)
1593682760111:)
1593682768091:gdat$realizacao
1593682779052:anova_test(
1593682779072:data = gdat, dv = measure, wid = UserID,
1593682779088:within = c(realizacao, cenario, tempo)
1593682779102:)
1593682784529:anova_test(
1593682784548:data = dat, dv = measure, wid = UserID,
1593682784562:within = c(realizacao, cenario, tempo)
1593682784576:)
1593682789572:measure
1593682808525:#, as.formula(sformula)
1593682808545:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593682808563:within = c("tempo"), factorize = T)
1593682810838:View(aov_mod$anova_table)
1593682881928:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario","tempo"),
1593682881947:within = c("tempo"), factorize = T)
1593682883029:View(aov_mod$anova_table)
1593682896999:#, as.formula(sformula)
1593682897020:aov_mod <- afex::aov_ez("UserID", "measure", dat, between = c("realizacao", "cenario"),
1593682897038:within = c("tempo"), factorize = T)
1593682914142:aov_mod$Anova$test
1593682926738:aov_mod$Anova$icontrasts
1593682930700:aov_mod$Anova
1593682947193:aov_mod$aov
1593682963239:aov_mod$lm
1593683004133:aov_mod$lm$contrasts
1593683142900:devtools::install_github("kassambara/rstatix")
1593683187303:library(rstatix)
1593683197161:library(rstatix)
1593683200643:anova_test(
1593683200662:data = dat, dv = measure, wid = UserID,
1593683200681:within = c(realizacao, cenario, tempo)
1593683200696:)
1593683231860:anova_test(
1593683231876:data = dat, dv = 'measure', wid = 'UserID',
1593683231892:within = c('realizacao', 'cenario', 'tempo')
1593683231907:)
1593683244419:gdat <- group_by(dat, realizacao, cenario)
1593683245651:anova_test(
1593683245669:data = dat, dv = 'measure', wid = 'UserID',
1593683245687:within = c('realizacao', 'cenario', 'tempo')
1593683245706:)
1593683534681:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/(",sfactors,"))")
1593683536951:sfactors = paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593683537992:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/(",sfactors,"))")
1593683539917:sformula
1593683567114:sfactors = paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593683568234:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/tempo)")
1593683635514:anova_test(data = dat, formula = as.formula(sformula))
1593683651663:sformula
1593683667466:gdat <- convert_as_factor(dat, UserID, tempo, realizacao, cenario)
1593683676800:anova_test(data = dat, formula = as.formula(sformula))
1593683807926:# Load data
1593683807944:#:::::::::::::::::::::::::::::::::::::::
1593683807960:data("ToothGrowth")
1593683808240:df <- ToothGrowth
1593683809265:# Two-way repeated measures ANOVA
1593683809282:#:::::::::::::::::::::::::::::::::::::::::
1593683809293:df$id <- rep(1:10, 6) # Add individuals id
1593683810582:df %>% anova_test(len ~ supp*dose + Error(id/(supp*dose)))
1593683819481:df
1593683866722:df %>% anova_test(dv = len, wid = id, within = c(supp, dose))
1593683898791:df
1593683943725:dat
1593684022938:anova_test(dat, measure ~ realizacao*cenario + Error(UserID/tempo))
1593684049510:anova_test(dat, measure ~ realizacao*cenario*tempo + Error(UserID/tempo))
1593684076712:anova_test(dat, measure ~ realizacao*cenario*tempo + Error(UserID/tempo))
1593684091157:anova_test(dat, measure ~ realizacao*cenario*tempo + Error(UserID/tempo))
1593684115238:anova_test(dat, measure ~ realizacao*cenario + Error(UserID/(realizacao*cenario)))
1593684158845:dat <- convert_as_factor(dat, UserID, tempo)
1593684161348:anova_test(dat, measure ~ realizacao*cenario + Error(UserID/(realizacao*cenario)))
1593684178077:anova_test(dat, measure ~ realizacao*cenario + Error(UserID/tempo))
1593684210052:anova_test(dat, measure ~ realizacao*cenario + Error(UserID/tempo), detailed = T)
1593684576196:afex::aov_ez("UserID", "measure", dat, within = c('realizacao','cenario','tempo'))
1593684604903:afex::aov_ez("UserID", "measure", dat, between = c('realizacao','cenario')  within = c('tempo'))
1593685312590:sfactors = paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593685313657:sfactors = paste0(ivs, collapse = "*")
1593685314849:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/tempo)")
1593685317416:sformula
1593685372716:afex::aov_car(as.formula(sformula), dat)
1593685415148:anova_test(dat, as.formula(sformula))
1593685458413:anova_test(data = dat, formula = as.formula(sformula), dv = 'measure', wid = 'UserID', within = 'tempo')
1593685481503:anova_test(data = dat, formula = as.formula(sformula), between = c('cenario'),  dv = 'measure', wid = 'UserID', within = 'tempo')
1593685493518:anova_test(data = dat, formula = as.formula(sformula), between = c('realizacao','cenario'),  dv = 'measure', wid = 'UserID', within = 'tempo')
1593685512360:sfactors = paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593685512634:sfactors = paste0(ivs, collapse = "*")
1593685512969:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/tempo)")
1593685514704:sformula
1593685527935:sfactors = paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593685528166:sfactors = paste0(ivs, collapse = "*")
1593685528378:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/tempo)")
1593685529034:aov <- afex::aov_car(as.formula(sformula), dat)
1593688460820:anova_test(data = dat, formula = as.formula(sformula), between = c('realizacao','cenario'),  dv = 'measure', wid = 'UserID', within = 'tempo')
1593688775088:sfactors = paste0(ivs[1:(length(ivs)-1)], collapse = "*")
1593688775548:sfactors = paste0(ivs, collapse = "*")
1593688776674:sformula = paste0(dv," ~ ", sfactors," + Error(",wid,"/tempo)")
1593688778722:sformula
1593689439676:runApp()
1593689677710:runApp()
1593690384615:runApp()
1593696383403:runApp()
1593725015308:# Load data
1593725015381:#:::::::::::::::::::::::::::::::::::::::
1593725015393:data("ToothGrowth")
1593725015610:df <- ToothGrowth
1593725020884:df %>% anova_test(dv = len, wid = id, within = c(supp, dose))
1593725024679:# Load data
1593725024694:#:::::::::::::::::::::::::::::::::::::::
1593725024715:data("ToothGrowth")
1593725025005:df <- ToothGrowth
1593725025891:# Two-way repeated measures ANOVA
1593725025914:#:::::::::::::::::::::::::::::::::::::::::
1593725025927:df$id <- rep(1:10, 6) # Add individuals id
1593725047836:df %>% anova_test(dv = len, wid = id, within = c(supp, dose))
1593725078015:View(df)
1593725102343:df$id
1593725122178:unique$supp
1593725132993:unique$(df$supp)
1593725135744:unique(df$supp)
1593725149978:unique(df$dose)
1593725155952:unique(df$len)
1593725170131:dat
1593725524134:gdat <- gather(dat, key = "time", value = "score", dimensao1, dimensao2, dimensao3)
1593725529933:gdat
1593725579112:gdat <- convert_as_factor(gdat, UserID, time)
1593725666669:(res.aov <- anova_test(
1593725666686:data = gdat, dv = score, wid = UserID,
1593725666704:between = cenario, within = c(time)
1593725666719:))
1593725689991:(res.aov <- anova_test(
1593725690010:data = gdat, dv = score, wid = UserID,
1593725690025:between = c(realizacao, cenario), within = c(time)
1593725690040:))
1593725715697:View(gdat)
1593725727649:(res.aov <- anova_test(
1593725727665:data = gdat, dv = score, wid = UserID,
1593725727687:between = c(realizacao, social, cenario), within = c(time)
1593725727699:))
1593725769185:(res.aov <- anova_test(
1593725769201:data = gdat, dv = score, wid = UserID,
1593725769216:between = c(realizacao, social, cenario), within = c(time)
1593725769228:, detailed = T
1593725769241:))
1593725787861:(res.aov <- anova_test(
1593725787880:data = gdat, dv = score, wid = UserID,
1593725787898:between = c(realizacao, social, cenario), within = c(time)
1593725787912:, detailed = T, type = 2
1593725787926:))
1593726188351:?gather
1593726306915:gdat <- tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", value = "score")
1593726319361:gdat <- tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", values_to = "score")
1593726321645:gdat
1593726334025:(res.aov <- anova_test(
1593726334043:data = gdat, dv = score, wid = UserID,
1593726334058:between = c(realizacao, social, cenario), within = c(time)
1593726334081:, detailed = T, type = 2
1593726334100:))
1593726393775:gdat <- as.data.frame(tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", values_to = "score"))
1593726399563:gdat <- convert_as_factor(gdat, UserID, time)
1593726410597:gdat <- as.data.frame(tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", values_to = "score"))
1593726411473:gdat <- convert_as_factor(gdat, "UserID", "time")
1593726424883:?convert_as_factor
1593726458974:gdat <- gather(dat, key = "time", value = "score", dimensao1, dimensao2, dimensao3)
1593726459263:gdat <- as.data.frame(tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", values_to = "score"))
1593726460116:gdat <- convert_as_factor(gdat, vars=("UserID", "time"))
1593726474393:gdat <- gather(dat, key = "time", value = "score", dimensao1, dimensao2, dimensao3)
1593726475013:gdat <- as.data.frame(tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", values_to = "score"))
1593726476014:gdat <- convert_as_factor(gdat, vars=c("UserID", "time"))
1593726477270:(res.aov <- anova_test(
1593726477288:data = gdat, dv = score, wid = UserID,
1593726477310:between = c(realizacao, social, cenario), within = c(time)
1593726477325:, detailed = T, type = 2
1593726477340:))
1593726527926:(res.aov <- anova_test(
1593726527944:data = gdat, dv = "score", wid = "UserID",
1593726527958:between = c("realizacao", "social", "cenario"), within = c("time")
1593726527975:, detailed = T, type = 2
1593726527987:))
1593726536760:gdat <- as.data.frame(tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", values_to = "score"))
1593726537210:gdat <- convert_as_factor(gdat, vars=c("UserID", "time"))
1593726537802:(res.aov <- anova_test(
1593726537821:data = gdat, dv = "score", wid = "UserID",
1593726537836:between = c("realizacao", "social", "cenario"), within = c("time")
1593726537855:, detailed = T, type = 2
1593726537868:))
1593729243505:gdat <- as.data.frame(tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", values_to = "score"))
1593729252986:gdat <- convert_as_factor(gdat, vars=c("UserID", "time"))
1593729253951:(res.aov <- anova_test(
1593729253968:data = gdat, dv = "score", wid = "UserID",
1593729253984:between = c("realizacao", "social", "cenario"), within = c("time")
1593729254001:, detailed = T, type = 2
1593729254018:))
1593729321421:gdat <- as.data.frame(tidyr::pivot_longer(dat, c("dimensao1", "dimensao2", "dimensao3"),  names_to = "time", values_to = "score"))
1593729322074:gdat <- convert_as_factor(gdat, vars=c("UserID", "time"))
1593729324016:(res.aov <- anova_test(
1593729324042:data = gdat, dv = "score", wid = "UserID",
1593729324059:between = c("realizacao", "social", "cenario"), within = c("time")
1593729324076:, detailed = T, type = 2
1593729324093:))
1593729341907:get_anova_table(res.aov)
1593729717737:ivs
1593729751485:ivs = c(ivs, "time")
1593729990834:ivs[length(ivs)]
1593730006780:ivs[1:length(ivs)-1]
1593730036817:ivs[1:length(ivs)-1]
1593730180478:ivs[1:length(ivs)-1]
1593730267703:ivs[length(ivs)]
1593730607529:runApp()
1593730834427:runApp()
1593730935787:runApp()
1593731180891:runApp()
1593731237590:runApp()
1593731361979:runApp()
1593731524928:runApp()
1593731607245:runApp()
1593731843413:runApp()
1593731929677:runApp()
1593732008665:runApp()
1593732061141:runApp()
1593732738444:runApp()
1593732832869:runApp()
1593732838418:runApp()
1593733043199:runApp()
1593733101867:runApp()
1593733163249:runApp()
1593733297286:runApp()
1593733365976:vtime
1593733419688:runApp()
1593733571525:runApp()
1593733576418:runApp()
1593733623831:?anova_test
1593733923988:runApp()
1593734015646:runApp()
1593734096777:runApp()
1593734171228:pdat <- read_csv('data/fss-qpj.csv')
1593734171999:pdat <- tidyr::pivot_longer(pdat, c("dimensao1", "dimensao2", "dimensao3"), names_to = vtime, values_to = dv)
1593734177705:ivs
1593734231309:ivs
1593734250463:ivs = c("realizacao","cenario","time")
1593734253109:vtime <- ivs[length(ivs)]
1593734253827:between <- ivs[1:length(ivs)-1]
1593734254258:pdat <- read_csv('data/fss-qpj.csv')
1593734255911:pdat <- df2qqs(pdat, ivs)
1593734257120:pdat <- tidyr::pivot_longer(pdat, c("dimensao1", "dimensao2", "dimensao3"), names_to = vtime, values_to = dv)
1593734269610:vtime <- ivs[length(ivs)]
1593734269849:between <- ivs[1:length(ivs)-1]
1593734270071:pdat <- read_csv('data/fss-qpj.csv')
1593734272193:pdat <- df2qqs(pdat, ivs)
1593734275174:pdat
1593734294656:vtime
1593734296852:dv
1593734303694:dv = "measure"
1593734307806:pdat <- tidyr::pivot_longer(pdat, c("dimensao1", "dimensao2", "dimensao3"), names_to = vtime, values_to = dv)
1593734314039:res.aov <- anova_test(data = pdat, dv = as.character(dv), wid = as.character(wid), between = c(between)
1593734314057:, within = as.character(vtime), detailed = T)#, type = input$aovtype)
1593734317880:res.aov
1593734334588:runApp()
1593734407217:input$aovtype = 2
1593734429482:runApp()
1593734758341:pdat
1593734819399:runApp()
1593734859744:runApp()
1593734919108:runApp()
1593735911936:?radioButtons
1593736200184:?read_csv
1593736565068:?read.csv
1593736643068:runApp()
1593743883548:?callModule
1593748305773:runApp()
1593748797237:?anova_test
1593749204377:columns
1593750458003:#source(paste0(getwd(),'/modules/outliers.R'))
1593750458036:#source(paste0(getwd(),'/modules/nonNormality.R'))
1593750458053:#source(paste0(getwd(),'/modules/homogeneity.R'))
1593750458067:#source(paste0(getwd(),'/modules/hypothesisAnova.R'))
1593750458080:source(paste0(getwd(),'/modules/descriptiveStatistics.R'))
1593750502945:source(paste0(getwd(),'/modules/df2Table.R'))
1593750965867:#source(paste0(getwd(),'/modules/outliers.R'))
1593750965886:#source(paste0(getwd(),'/modules/nonNormality.R'))
1593750965904:#source(paste0(getwd(),'/modules/homogeneity.R'))
1593750965926:#source(paste0(getwd(),'/modules/hypothesisAnova.R'))
1593750965943:source(paste0(getwd(),'/modules/descriptiveStatistics.R'))
1593751051125:runApp()
1593751128272:?moduleServer
1593751142069:?moduleServer
1593751151557:?callModule
1593751213905:install.packages("shiny")
1593751336986:devtools::install_github("shiny", "rstudio")
1593751346265:devtools::install_github("shiny")
1593751532381:install.packages("shiny")
1593751720159:package_version()
1593751723595:package_version('shiny')
1593751728803:package_version(shiny)
1593751781673:install.packages("remotes")
1593751831133:install.packages("remotes")
1593751847276:remotes::install_github("rstudio/shiny")
1593751936201:install.packages("remotes")
1593751973235:remotes::install_github("rstudio/shiny")
1593773397973:runApp()
1593773773162:runApp()
1593775116462:runApp()
1593775204976:runApp()
1593775325003:runApp()
1593775437183:runApp()
1593777714096:#source(paste0(getwd(),'/modules/outliers.R'))
1593777714149:#source(paste0(getwd(),'/modules/nonNormality.R'))
1593777714167:#source(paste0(getwd(),'/modules/hypothesisAnova.R'))
1593777714184:source(paste0(getwd(),'/modules/homogeneity.R'))
1593777714825:source(paste0(getwd(),'/modules/descriptiveStatistics.R'))
1593778328539:source(paste0(getwd(),'/modules/df2Table.R'))
1593778328759:#source(paste0(getwd(),'/modules/outliers.R'))
1593778328780:#source(paste0(getwd(),'/modules/nonNormality.R'))
1593778328799:#source(paste0(getwd(),'/modules/hypothesisAnova.R'))
1593778328813:source(paste0(getwd(),'/modules/homogeneity.R'))
1593778329164:source(paste0(getwd(),'/modules/descriptiveStatistics.R'))
1593778329199:factorialAnovaUI <- function(id, title=id) {
1593778329215:ns <- NS(id)
1593778329232:fluidPage(
1593778329246:shinyjs::useShinyjs(),
1593778329261:titlePanel(title),
1593778329276:sidebarLayout(
1593778329293:sidebarPanel(width = 3, uiOutput(ns("anovaParamsUI"))),
1593778329311:mainPanel(width = 9, uiOutput(ns("anovaTabsetUI")))
1593778329326:)
1593778329345:)
1593778329363:}
1593778579995:runApp()
1593789029079:?tabPanel
1593792188810:runApp()
1593792263123:#source(paste0(getwd(),'/modules/hypothesisAnova.R'))
1593792263157:source(paste0(getwd(),'/modules/outliers.R'))
1593792411545:runApp()
1593792681384:runApp()
1593793264625:runApp()
1593805001618:runApp()
1593809247894:runApp()
1593809472721:runApp()
1593809536964:runApp()
1593809734653:runApp()
1593809793432:runApp()
1593810042823:runApp()
1593810092501:runApp()
1593810109586:runApp()
1593810271036:runApp()
1593810399404:runApp()
1593810472442:runApp()
1593810507961:runApp()
1593810574433:runApp()
1593810697574:runApp()
1593810790317:runApp()
1593810855996:runApp()
1593811203899:runApp()
1593811372535:runApp()
1593811471262:runApp()
1593811642601:runApp()
1593811798945:?freq_table
1593811871474:runApp()
1593811963983:dat <- read_csv('data/fss-qpj.csv')
1593811969065:dat
1593811976709:freq_table(dat, vars=group)
1593811990713:freq_table(dat, vars=c('cenario'))
1593812000516:source(paste0(getwd(),'/common/df2qqs.R'))
1593812026033:df <- df2qqs(dat, c('imersao','social','cenario'))
1593812035886:df
1593812080694:freq_table(df, c('imersao','social','cenario'))
1593812128379:runApp()
1593812135834:runApp()
1593812250565:runApp()
1593812444203:runApp()
1593812953535:runApp()
1593813760065:runApp()
1593814609349:?renderPlot
1593815272678:?column
1593817215599:?shapiro_test
1593817239464:?shapiro.test()
1593817411611:?shapiro_test
1593817502728:dat
1593817506623:data
1593817524845:data <- read_csv('data/fss-qpj.csv')
1593817536061:data
1593817574644:data <- df2qqs(data, c("social","realizacao","cenario"))
1593817588704:between <- c("social","realizacao","cenario")
1593817593842:sformula <- paste(dv ,'~', paste0(between, collapse = "*"))
1593817601799:dv = 'media'
1593817604269:sformula <- paste(dv ,'~', paste0(between, collapse = "*"))
1593817605708:sformula
1593817609179:model <- lm(as.formula(sformula), data = data)
1593817643152:shapiro.test(residuals(model))
1593817876240:shapiro <- shapiro.test(residuals(model))
1593817879095:shapiro
1593817886155:as.data.frame(shapiro)
1593817896839:shapiro$statistic
1593817916051:as.data.frame(shapiro)
1593817935625:shapiro_test
1593818004281:as.list(shapiro)
1593818012672:as.data.frame(as.list(shapiro))
1593818019942:sumary(shapiro)
1593818028142:shapiro$statistic
1593818035442:shapiro$data.name
1593818491785:?shapiro_test
1593818581128:shapiro_test(data, vars = c("cenario"))
1593818588409:shapiro_test(data, vars = "media")
1593818596508:shapiro_test(data, vars = "media", detailed=T)
1593818599779:shapiro_test(data, vars = "media")
1593818657254:shapiro$data.name
1593818704303:add_significance(data.frame(p=shapiro$p.value))
1593818855772:library(dplyr)
1593820129179:?shapiro.test
1593821862989:source(paste0(getwd(),'/common/shapiro.R'))
1593822994380:source(paste0(getwd(),'/common/df2qqs.R'))
1593822994547:source(paste0(getwd(),'/common/qqPlotly.R'))
1593822994688:source(paste0(getwd(),'/common/shapiro.R'))
1593822994849:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593822995262:source(paste0(getwd(),'/common/dealing_with_groups.R'))
1593822995507:source(paste0(getwd(),'/modules/df2Table.R'))
1593824589155:runApp()
1593824719386:runApp()
1593824990600:runApp()
1593825110370:runApp()
1593825256499:runApp()
1593825364446:runApp()
1593825479542:runApp()
1593825698678:runApp()
1593826042255:runApp()
1593826351855:runApp()
1593826466114:runApp()
1593826598991:runApp()
1593826674588:runApp()
1593826803963:runApp()
1593826930110:runApp()
1593827075565:runApp()
1593827204632:runApp()
1593827281401:runApp()
1593827424932:runApp()
1593827483237:runApp()
1593827515343:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593827515362:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827515381:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827515399:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827515415:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827515433:if (!is.null(df)) {
1593827515453:return(as.data.frame(var = dv, add_significance(df)))
1593827515471:}
1593827515490:}))
1593827515509:print(shapiro_df)
1593827515524:return(shapiro_df)
1593827515540:}
1593827524836:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593827524855:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827524870:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827524886:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827524902:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827524917:if (!is.null(df)) {
1593827524930:return(as.data.frame(var = dv, add_significance(df)))
1593827524945:}
1593827524960:}))
1593827524978:print(shapiro_df)
1593827524997:return(shapiro_df)
1593827525022:}
1593827631428:runApp()
1593827681763:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593827681791:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827681808:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827681825:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827681842:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827681859:if (!is.null(df)) {
1593827681873:df <- as.data.frame(add_significance(df))
1593827681889:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593827681905:return(df)
1593827681919:}
1593827681942:}))
1593827681959:print(shapiro_df)
1593827681978:return(shapiro_df)
1593827681997:}
1593827698933:data <- read_csv('data/fss-qpj.csv')
1593827721697:dvs = c('media', 'dimensao1', 'dimensao2')
1593827737308:group = c('cenario','social','realizacao')
1593827770587:data <- df2qqs(data, dvs, group)
1593827782905:data <- df2qqs(data, group)
1593827797757:data <- shapiro_per_group(data, dvs, group)
1593827826799:data <-  df2qqs(read_csv('data/fss-qpj.csv'), group)
1593827830067:data
1593827838391:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593827838421:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827838443:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827838462:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827838481:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827838499:if (!is.null(df)) {
1593827838517:df <- as.data.frame(add_significance(df))
1593827838535:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593827838554:return(df)
1593827838571:}
1593827838590:}))
1593827838609:print(shapiro_df)
1593827838626:return(shapiro_df)
1593827838643:}
1593827856386:shapiro_per_group(data, dvs, group)
1593827866950:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827866970:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827866988:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827867006:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827867021:if (!is.null(df)) {
1593827867043:df <- as.data.frame(add_significance(df))
1593827867062:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593827867076:return(df)
1593827867094:}
1593827867111:}))
1593827894518:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593827894542:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827894563:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827894581:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827894600:print(dv)
1593827894614:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827894631:if (!is.null(df)) {
1593827894649:df <- as.data.frame(add_significance(df))
1593827894666:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593827894685:return(df)
1593827894703:}
1593827894719:}))
1593827894736:print(shapiro_df)
1593827894761:return(shapiro_df)
1593827894779:}
1593827899798:shapiro_per_group(data, dvs, group)
1593827916320:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827916338:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827916353:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827916370:print(dv)
1593827916384:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827916400:if (!is.null(df)) {
1593827916416:df <- as.data.frame(add_significance(df))
1593827916433:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593827916448:return(df)
1593827916463:}
1593827916477:}))
1593827928061:group
1593827933570:dv.var
1593827940660:dv.var = NULL
1593827951119:do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827951136:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827951151:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827951167:print(dv)
1593827951183:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827951199:if (!is.null(df)) {
1593827951216:df <- as.data.frame(add_significance(df))
1593827951236:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593827951251:return(df)
1593827951267:}
1593827951281:}))
1593827973026:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593827973046:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593827973063:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593827973082:dat <- group_by_at(df2qqs(data, group), vars(group))
1593827973103:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593827973119:print(df)
1593827973139:if (!is.null(df)) {
1593827973154:df <- as.data.frame(add_significance(df))
1593827973172:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593827973190:return(df)
1593827973209:}
1593827973224:}))
1593827973240:print(shapiro_df)
1593827973255:return(shapiro_df)
1593827973272:}
1593827979356:shapiro_per_group(data, dvs, group)
1593827987845:data
1593827989205:dv
1593827993172:dv = 'media'
1593828001668:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593828003396:dat <- group_by_at(df2qqs(data, group), vars(group))
1593828005106:dat
1593828011784:shapiro_test(dat, vars=dv)
1593828069008:source(paste0(getwd(),'/common/dealing_with_groups.R'))
1593828162023:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593828162041:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593828162062:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593828162079:dat <- remove_min_per_group(data, group)
1593828162098:dat <- group_by_at(df2qqs(dat, group), vars(group))
1593828162113:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593828162134:if (!is.null(df)) {
1593828162153:df <- as.data.frame(add_significance(df))
1593828162173:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593828162189:return(df)
1593828162210:}
1593828162226:}))
1593828162241:return(shapiro_df)
1593828162257:}
1593828170688:shapiro_per_group(data, dvs, group)
1593828273706:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593828273726:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593828273744:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593828273760:dat <- remove_min_per_group(data, group)
1593828273781:dat <- group_by_at(df2qqs(dat, group), vars(group))
1593828273795:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593828273813:if (!is.null(df)) {
1593828273829:freq <- freq_table(dat, vars = group)
1593828273846:df <- as.data.frame(add_significance(df))
1593828273862:if (!is.null(dv.var)) df <- cbind(var = dv, merge(freq, df))
1593828273881:return(df)
1593828273898:}
1593828273919:}))
1593828273933:return(shapiro_df)
1593828273948:}
1593828277287:shapiro_per_group(data, dvs, group)
1593828292194:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593828292213:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593828292233:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593828292251:dat <- remove_min_per_group(data, group)
1593828292269:dat <- group_by_at(df2qqs(dat, group), vars(group))
1593828292286:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593828292301:if (!is.null(df)) {
1593828292315:freq <- freq_table(dat, vars = group)
1593828292331:df <- as.data.frame(add_significance(df))
1593828292346:if (!is.null(dv.var)) df <- cbind(var = dv, merge(freq, df))
1593828292361:return(df)
1593828292377:}
1593828292392:}))
1593828292408:return(shapiro_df)
1593828292426:}
1593828299091:shapiro_per_group(data, dvs, group)
1593828332945:dv = 'media'
1593828336386:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593828338539:dat <- remove_min_per_group(data, group)
1593828340673:dat <- group_by_at(df2qqs(dat, group), vars(group))
1593828342333:dat
1593828344317:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593828345962:df
1593828358713:freq <- freq_table(dat, vars = group)
1593828361175:freq
1593828365982:dat
1593828373998:freq_table(dat, vars = group)
1593828394291:freq <- freq_table(as.data.frame(dat), vars = group)
1593828396060:freq
1593828403290:freq <- freq_table(as.data.frame(dat), vars = group)
1593828403707:df <- as.data.frame(add_significance(df))
1593828437908:shapiro_per_group <- function(data, dvs, group, dv.var = NULL) {
1593828437925:shapiro_df <- do.call(rbind, lapply(dvs, FUN = function(dv) {
1593828437945:if (!is.null(dv.var)) data <- data[which(data[[dv.var]] == dv),]
1593828437961:dat <- remove_min_per_group(data, group)
1593828437974:dat <- group_by_at(df2qqs(dat, group), vars(group))
1593828437988:df <- tryCatch(shapiro_test(dat, vars=dv), error = function(e) NULL)
1593828438006:if (!is.null(df)) {
1593828438020:freq <- freq_table(as.data.frame(dat), vars = group)
1593828438038:df <- merge(freq, as.data.frame(add_significance(df)))
1593828438055:if (!is.null(dv.var)) df <- cbind(var = dv, df)
1593828438069:return(df)
1593828438085:}
1593828438101:}))
1593828438117:return(shapiro_df)
1593828438132:}
1593828450053:shapiro_per_group(data, dvs, group)
1593828474692:runApp()
1593828554994:runApp()
1593829489580:?qqPlot
1593829527906:?plotOutput
1593829871711:?tabsetPanel
1593829982922:?tabPanel
1593832710494:?tabsetPanel
1593832874944:?tabPanel
1593832963945:library(DT)
1593832963965:library(plotly)
1593832963984:library(rstatix)
1593832964007:source(paste0(getwd(),'/common/df2qqs.R'))
1593832964024:source(paste0(getwd(),'/common/qqPlotly.R'))
1593832964040:source(paste0(getwd(),'/common/identify_nonnormal.R'))
1593832964068:source(paste0(getwd(),'/modules/df2Table.R'))
1593832964114:qqPanelPlotsUI <- function(id, dv) {
1593832964132:ns <- NS(id)
1593832964152:tabPanel(
1593832964172:dv, value = dv,
1593832964194:br(), p(strong("Gráfico Q-Q do modelo residual")),
1593832964208:plotOutput(ns("qqPlotResidual")), br(), hr(),
1593832964226:uiOutput(ns("qqPlotGroups"))
1593832964243:)
1593832964265:}
1593832964288:qqPanelPlotsMD <- function(id, data, dv, between = c(), within = c(), wid = 'UserID', dv.var = NULL, width = 400, height = 400) {
1593832964306:moduleServer(
1593832964326:id,
1593832964347:function(input, output, session) {
1593832964366:ns <- session$ns
1593832964383:values <- reactiveValues()
1593832964407:output$qqPlotResidual <- renderPlot({
1593832964428:dat <- data
1593832964446:if (!is.null(dv.var)) dat <- dat[which(dat[[dv.var]] == dv),]
1593832964465:sformula <- paste(dv ,'~', paste0(between, collapse = "*"))
1593832964483:mdl <- lm(as.formula(sformula), data = dat)
1593832964499:car::qqPlot(residuals(mdl))
1593832964518:}, width = width, height = height)
1593832964540:output$qqPlotGroups <- renderUI({
1593832964558:group <- between
1593832964574:dat <- data
1593832964592:if (!is.null(dv.var)) dat <- dat[which(dat[[dv.var]] == dv),]
1593832964616:freq_df <- subset(freq_table(dat, vars = group), n >= 3)
1593832964635:do.call(verticalLayout, lapply(seq(1,nrow(freq_df)), FUN = function(i) {
1593832964652:tbl <- freq_df[i,c(group)]
1593832964671:df <- as.data.frame(subset_by_tbl(dat, tbl, group = group))
1593832964690:df <- group_by_at(df, vars(group))
1593832964713:ntitle <- paste(sapply(names(tbl), FUN = function(nc) paste0(nc,':', tbl[[nc]])), collapse = " - ")
1593832964730:verticalLayout(
1593832964747:br(), p(strong(paste("Gráfico Q-Q dos modelos por grupo, ", ntitle))),
1593832964764:splitLayout(
1593832964782:renderPlot({
1593832964801:car::qqPlot(as.formula(paste('~', dv)), data = df)
1593832964817:}, width = width, height = height),
1593832964835:renderPlotly({
1593832964854:plotly::layout(qqPlotly(df[[wid]], df[[dv]], width = width, height = height), title = 'Interative Q-Q')
1593832964872:})
1593832964910:)
1593832964931:)
1593832964954:}))
1593832964971:})
1593832964989:}
1593832965010:)
1593832965030:}
1593833256648:runApp()
1593833403676:runApp()
1593833630983:runApp()
1593833738294:runApp()
1593833845704:runApp()
1593833939629:runApp()
1593834097916:?tabPanel
1593834213420:runApp()
1593834562326:runApp()
1593834656023:runApp()
1593834991570:runApp()
1593835135741:runApp()
1593835382452:runApp()
1593835608469:runApp()
1593836719251:?ggboxplot
1593837757115:source(paste0(getwd(),'/modules/df2Table.R'))
1593837757357:source(paste0(getwd(),'/common/anova_plots.R'))
1593842286964:runApp()
1593842301814:runApp()
1593842391448:runApp()
1593842472143:runApp()
1593842621742:runApp()
1593842843309:runApp()
1593842910943:runApp()
1593843004856:runApp()
1593843223395:runApp()
1593843296771:dat <- read_csv('data/fss-qpj.csv')
1593843302514:dat
1593843337063:dat <- df2qqs(dat, c('cenario','imersao','realizacao','social'))
1593843357185:iv = 'cenario'
1593843359903:gdat <- group_by_at(as.data.frame(dat), vars(iv))
1593843361661:gdat
1593843373380:dv = "media"
1593843376266:#print(gdat)
1593843376284:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T,
1593843376303:p.adjust.method = input$pairwiseCompAdjustmethod)
1593843381867:#print(gdat)
1593843381883:emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T,
1593843381898:p.adjust.method = input$pairwiseCompAdjustmethod)
1593843401013:#print(gdat)
1593843401031:(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
1593843421462:?emmeans_test
1593843572366:gdat <- group_by_at(as.data.frame(dat), vars(iv))
1593843577526:gdat
1593843592170:#print(gdat)
1593843592186:(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
1593843622339:gdat <- group_by_at(as.data.frame(dat), vars(c('imersao','realizacao')))
1593843626274:gdat
1593843634126:#print(gdat)
1593843634146:(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
1593843715652:gdat <- group_by_at(as.data.frame(dat), vars(c('imersao','realizacao','cenario')))
1593843736458:gdat
1593843743233:#print(gdat)
1593843743252:(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
1593843798797:gdat <- group_by_at(as.data.frame(dat), vars(c('')))
1593843802892:gdat <- group_by_at(as.data.frame(dat), vars(c()))
1593843806809:gdat
1593843819113:#print(gdat)
1593843819129:(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
1593843948907:setdiff(c('a'), 'a')
1593844012846:group_by_at(dat, vars(setdiff(c('a'), 'a')))
1593844063234:gdat <- group_by_at(as.data.frame(dat), vars(setdiff(names(livs), iv)))
1593844064493:#print(gdat)
1593844064508:(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
1593844151247:runApp()
1593844351425:runApp()
1593844552919:runApp()
1593844702564:runApp()
1593844999146:runApp()
1593845164297:runApp()
1593845407857:runApp()
1593845695682:runApp()
1593846063372:runApp()
1593846784343:runApp()
1593846956179:runApp()
1593847227791:runApp()
1593847296762:runApp()
1593847961474:?navbarMenu
1593848793009:ggplot()
1593848828473:runApp()
1593848890050:runApp()
1593849364808:ggplot() + geom_text("adda")
1593870098110:runApp()
1593870121075:runApp()
1593870559662:runApp()
1593870610057:runApp()
1593870766585:runApp()
1593870896546:runApp()
1593871027216:runApp()
1593871138757:runApp()
1593871353682:runApp()
1593871562346:runApp()
1593871599571:runApp()
1593871843203:runApp()
1593871888609:runApp()
1593872008216:runApp()
1593872319178:runApp()
1593872352492:runApp()
1593872473762:runApp()
1593872602447:runApp()
1593872677958:runApp()
1593872959975:runApp()
1593873261538:runApp()
1593873363403:runApp()
1593873406189:runApp()
1593874575116:runApp()
1593874733810:runApp()
1593874898288:runApp()
1593875041756:runApp()
1593875847794:runApp()
1593875850990:runApp()
1593875873463:runApp()
1593875897714:runApp()
1593876070065:runApp()
1593876915436:?wilcox_test
1593877783772:?wilcox_test
1593877984308:?wilcox_test
1593878879341:runApp()
1593878885043:runApp()
1593878908697:runApp()
1593879287068:?wilcox_test
1593879652542:?wilcox_test
1593880065146:?wilcox_effsize
1593880184437:runApp()
1593880330365:runApp()
1593880334673:runApp()
1593880350349:runApp()
1593880492630:runApp()
1593880713686:runApp()
1593880907094:runApp()
1593881076965:runApp()
1593881191033:runApp()
1593881278087:runApp()
1593881768925:runApp()
1593882117784:runApp()
1593882312760:?median
1593882367539:runApp()
1593882435515:runApp()
1593882806022:?wilcox_test
1593883333447:?friedman_test
1593885469916:runApp()
1593885647619:runApp()
1593885713343:runApp()
1593885787276:runApp()
1593886106777:?kruskal_test
1593886171600:kruskal_effsize()
1593886173623:kruskal_effsize
1593886178468:?kruskal_effsize
1593886211170:?kruskal_test
1593886412038:?kruskal_test
1593886986749:?kruskal_effsize
1593887008283:?kruskal_test
1593887674199:?kruskal_test
1593888054758:?kruskal_effsize
1593888275788:dat <- read_csv('data/fss-qpj.csv')
1593888326403:(kwm <- kruskal_effsize(dat, media ~ cenario, ci = T))
1593888348970:(kwm <- kruskal_effsize(dat, media ~ cenario, ci = F))
1593888365520:(ezm <- kruskal_effsize(dat, media ~ cenario, ci = F))
1593888404436:(ez <- kruskal_effsize(dat, media ~ cenario, ci = T))
1593888447007:(df <- kruskal_test(dat, media ~ cenario))
1593888455604:merge(df, ez)
1593888495742:merge(as.data.frame(df), as.data.frame(ez))
1593888508962:as.data.frame(df); as.data.frame(ez)
1593888527727:cbind(as.data.frame(df), as.data.frame(ez))
1593888556579:add_significance(cbind(as.data.frame(df), as.data.frame(ez)))
1593888562997:add_significance(cbind(as.data.frame(df)))
1593888566783:add_significance(cbind(as.data.frame(df))
1593888568625:)
1593889248625:?dunn_test
1593889676224:runApp()
1593889786131:runApp()
1593889935040:runApp()
1593890176111:runApp()
1593890294377:runApp()
1593890387983:dat <- read_csv('data/fss-qpj.csv')
1593890418162:wilcox_test(dat, media ~ cenario)
1593890441666:wilcox_test(dat, media ~ cenario, detailed = T)
1593890525729:runApp()
1593890589113:runApp()
1593890760274:runApp()
1593890913082:runApp()
1593891150119:runApp()
1593892027339:runApp()
1593892073703:runApp()
1593892141149:dat
1593892157850:data <- as.data.frame(dat)
1593892159810:pwc
1593892201366:kwm <- kruskal_test(data, media ~ cenario)
1593892216179:pwcs = list()
1593892261736:pwc <- wilcox_test(data, media ~ cenario)
1593892276117:iv = 'cenario'
1593892278559:pwc <- tryCatch(add_xy_position(pwc, x = iv), error = function(e) NULL)
1593892280657:pwc
1593892286370:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892329066:addParam = c('jitter')
1593892337173:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892342380:dv = 'media'
1593892345699:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892347767:bxp
1593892352974:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892354817:bxp <- bxp + stat_pvalue_manual(pwc, color = iv, linetype = iv, hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892359086:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892360608:bxp
1593892372416:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892376341:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892377005:bxp
1593892404955:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892405313:bxp <- bxp + stat_pvalue_manual(pwc, linetype = iv, hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892405649:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892406250:bxp
1593892498722:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892499185:bxp <- bxp + stat_pvalue_manual(pwc, color = iv, linetype = c(), hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892499525:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892500263:bxp
1593892509939:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892510284:bxp <- bxp + stat_pvalue_manual(pwc, linetype = c(), hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892510964:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892511509:bxp
1593892663623:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892664064:bxp <- bxp + stat_pvalue_manual(pwc, linetype = c(), hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892664370:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892665639:bxp
1593892680685:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892680996:bxp <- bxp + stat_pvalue_manual(pwc, linetype = color, hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892681327:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892682356:bxp
1593892691136:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892691457:bxp <- bxp + stat_pvalue_manual(pwc, linetype = 'color', hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892691868:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892692437:bxp
1593892707356:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892707629:bxp <- bxp + stat_pvalue_manual(pwc, hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892707909:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892708408:bxp
1593892721148:bxp <- ggboxplot(data, x = iv, y = dv, color = iv, palette = "jco", add=addParam)
1593892721426:bxp <- bxp + stat_pvalue_manual(pwc, linetype = c(), hide.ns = T, tip.length = 0, step.increase = 0.1)
1593892721718:bxp <- bxp + labs(subtitle = get_test_label(kwm, detailed = T), caption = get_pwc_label(pwc))
1593892722090:bxp
1593892750583:runApp()
1593892927612:runApp()
1593892934188:runApp()
1593893051572:runApp()
1593893679426:source('~/modules/hypothesisScheirer.R')
1593893756219:?scheirerRayHare
1593893779263:rcompanion::scheirerRayHare
1593893783287:?rcompanion::scheirerRayHare
1593893865097:library(rcompanion)
1593893867388:library(emmeans)
1593893876652:data
1593893898704:dat <- read_csv('data/fss-qpj.csv')
1593893911889:library(stats)
1593893911917:df2qqs <- function(data, group) {
1593893911935:data <- as.data.frame(data)
1593893911954:for (iv in group) {
1593893911974:if (is.numeric(data[[iv]])) {
1593893911994:quantiles <- quantile(data[[iv]])
1593893912014:data[[iv]] <- sapply(data[[iv]], FUN = function(x) {
1593893912031:if (x <= quantiles[[2]]) "low"
1593893912049:else if (x >= quantiles[[4]]) "high"
1593893912068:else "medium"
1593893912088:})
1593893912109:data[[iv]] <- factor(data[[iv]], levels=c("low", "medium", "high"))
1593893912128:}
1593893912147:}
1593893912164:return(data)
1593893912183:}
1593893942899:data <- df2qqs(dat, c('cenario','realizacao','social','imersao'))
1593893946544:data
1593894012351:scheirerRayHare(data = data, formula = media ~ social*cenario)
1593894032582:srh <- scheirerRayHare(data = data, formula = media ~ social*cenario)
1593894047513:summary(srh)
1593894055924:srh$Df
1593894059665:srh$`Sum Sq`
1593894064520:srh
1593894076256:srh$H
1593894082468:srh$p.value
1593894087392:srh
1593894151365:as.data.frame(srh)
1593894160971:View(as.data.frame(srh))
1593894459350:srh <- scheirerRayHare(data = dat, formula = as.formula(sformula))
1593894486685:between = c('cenario','social')
1593894490931:data
1593894500975:dat <- data
1593894517585:dv = 'media'
1593894522484:sformula <- as.formula(paste(dv, "~", paste0(between, collapse = "*")))
1593894524708:sformula
1593894536014:sformula <- paste(dv, "~", paste0(between, collapse = "*"))
1593894536584:srh <- scheirerRayHare(data = dat, formula = as.formula(sformula))
1593894540238:sformula <- paste(dv, "~", paste0(between, collapse = "*"))
1593894540701:srh <- scheirerRayHare(data = dat, formula = as.formula(sformula))
1593894561820:srh <- as.data.frame(scheirerRayHare(data = dat, formula = as.formula(sformula)))
1593894566788:srh
1593894651199:srh <- as.data.frame(scheirerRayHare(data = dat, formula = as.formula(sformula)))
1593894651852:srh_df <- cbind(Effect = rownames(srh), srh)
1593894653339:srh_df
1593895302271:dat <- as.data.frame(data[which(data[[dv.var]] == dv),])
1593895303763:sformula <- paste(dv, "~", paste0(between, collapse = "*"))
1593895304262:srh <- as.data.frame(scheirerRayHare(data = dat, formula = as.formula(sformula)))
1593895304612:srh_df <- cbind(Effect = rownames(srh), srh)
1593895308656:srh_df
1593895327778:add_significance(srh_df)
1593895862479:?scheirerRayHare
1593895882035:scheirerRayHare(data = dat, formula = as.formula(sformula), verbose = F)
1593895891638:srh <- tryCatch(scheirerRayHare(data = dat, formula = as.formula(sformula), verbose = F)
1593895891656:, error = function(e) return(NULL))
1593895894255:srh
1593896988191:runApp()
1593897086309:runApp()
1593897125649:runApp()
1593897278749:runApp()
1593897322440:runApp()
1593897417503:runApp()
1593897546055:runApp()
1593897624051:runApp()
1593897764843:runApp()
1593897884451:runApp()
1593897989369:runApp()
1593898147124:runApp()
1593898339019:runApp()
1593898941209:runApp()
1593899246797:runApp()
1593899483794:runApp()
1593899992920:repeat(NA, 4)
1593900002027:repeat(NA, 4)
1593900008875:rep(NA, 4)
1593900185616:runApp()
1593900287850:runApp()
1593900382002:runApp()
1593900440613:runApp()
1593900501412:runApp()
1593900620045:runApp()
1593900623489:runApp()
1593900850321:runApp()
1593900973262:runApp()
1593901226772:runApp()
1593901330358:runApp()
1593901437231:runApp()
1593901732631:runApp()
1593901852207:runApp()
1593901971870:runApp()
1593902117995:runApp()
1593902955769:runApp()
1593903179069:runApp()
1593903183378:runApp()
1593903274144:runApp()
1593903331440:runApp()
1593903503930:runApp()
1593903570268:runApp()
1593904090633:runApp()
1593904212654:?get_test_label
1593904276738:runApp()
1593904369444:runApp()
1593904540931:runApp()
1593905289434:runApp()
1593905402859:runApp()
1593905578020:runApp()
1593905645494:?round
1593905708086:runApp()
1593905752186:runApp()
1593905859349:runApp()
1593906034030:runApp()
1593960768285:wants <- c('digest', 'readr', 'dplyr')
1593960768497:has <- wants %in% rownames(installed.packages())
1593960768669:if (any(!has)) install.packages(wants[!has])
1593960768851:library(readr)      # biblioteca para leitura de arquivos CVS
1593960768998:library(digest)     # biblioteca para anonimizar dados
1593960769536:library(dplyr)      # biblioteca para manipular data.frames
1593960770578:participants <- read_csv("raw-data/participants.csv")
1593960770925:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1593960770940:digest(x, algo = "crc32")
1593960770958:})
1593960792701:pre_fss <- read_csv("raw-data/survey-0-fss.csv")
1593960806597:(fss <- merge(participants, pre_fss, by='email'))
1593960866489:fss <- select(fss, starts_with("UserID"), starts_with("cenario")
1593960866507:, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1593960869339:fss
1593960885133:fss
1594406073904:library(readr)
1594406073985:survey_0_fss <- read_csv("raw-data/survey-0-fss.csv")
1594406074016:View(survey_0_fss)
1594406098037:library(readr)
1594406098056:participants <- read_csv("raw-data/participants.csv")
1594406098081:View(participants)
1594406112506:library(readr)
1594406112529:survey_0_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594406112560:View(survey_0_qpj)
1594406124204:wants <- c('digest', 'readr', 'dplyr')
1594406124754:has <- wants %in% rownames(installed.packages())
1594406129050:if (any(!has)) install.packages(wants[!has])
1594406129063:library(readr)      # biblioteca para leitura de arquivos CVS
1594406129081:library(digest)     # biblioteca para anonimizar dados
1594406145231:library(digest)     # biblioteca para anonimizar dados
1594406151288:library(dplyr)      # biblioteca para manipular data.frames
1594406154275:participants <- read_csv("raw-data/participants.csv")
1594406165108:sapply(participants$email, FUN = function(x) { # anonimizando por email
1594406165127:digest(x, algo = "crc32")
1594406165145:})
1594406177650:participants <- read_csv("raw-data/participants.csv")
1594406188537:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1594406188558:digest(x, algo = "crc32")
1594406188588:})
1594406193670:View(participants)
1594406203113:write_csv(participants[,c("UserID","cenario")], "data/participants.csv") # escrevendo resultados anonimizados
1594406242212:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594406250994:dfs <- merge(participants, pre_dfs, by='email')
1594406252460:dfs <- select(dfs,
1594406252482:starts_with("UserID"),
1594406252504:starts_with("cenario"),
1594406252525:starts_with("media"),
1594406252544:starts_with("dimensao"),
1594406252561:starts_with("Q"))
1594406256104:dfs
1594406269129:write_csv(dfs, "data/survey-dfs.csv")
1594406455957:has <- wants %in% rownames(installed.packages())
1594406456171:if (any(!has)) install.packages(wants[!has])
1594406456877:library(readr)      # biblioteca para leitura de arquivos CVS
1594406456907:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594406456929:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594406457337:library(dplyr)      # biblioteca para manipular data.frames
1594406457791:qpj_dat <- read_csv("data/survey-qpj.csv")
1594406463753:qpj_dat
1594406472503:View(qpj_dat)
1594406481290:resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
1594406488079:(careless_qpj_long <- longstring(resp_qpj_dat))
1594406508929:Boxplot(careless_qpj_long, main = "Boxplot do Longstring para o QPJ") # nemhum > 12 => não há careless
1594406651850:wants <- c('readr', 'careless', 'car','dplyr')
1594406652242:has <- wants %in% rownames(installed.packages())
1594406652941:if (any(!has)) install.packages(wants[!has])
1594406653491:library(readr)      # biblioteca para leitura de arquivos CVS
1594406653773:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594406653974:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594406654345:library(dplyr)      # biblioteca para manipular data.frames
1594406654726:dfs_dat <- read_csv("data/survey-dfs.csv")
1594406655360:resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
1594406655779:(careless_dfs_long <- longstring(resp_dfs_dat))
1594406656837:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS") # careless 3,20
1594406694934:View(dfs_dat)
1594406811106:careless_qpj_irv <- irv(resp_qpj_dat)
1594406815313:(careless_qpj_long <- longstring(resp_qpj_dat))
1594406817763:wants <- c('readr', 'careless', 'car','dplyr')
1594406817928:has <- wants %in% rownames(installed.packages())
1594406818075:if (any(!has)) install.packages(wants[!has])
1594406818266:library(readr)      # biblioteca para leitura de arquivos CVS
1594406818426:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594406818600:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594406819259:library(dplyr)      # biblioteca para manipular data.frames
1594406821141:(careless_qpj_long <- longstring(resp_qpj_dat))
1594406824360:qpj_dat <- read_csv("data/survey-qpj.csv")
1594406824561:resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
1594406833354:dfs_dat <- read_csv("data/survey-dfs.csv")
1594406833588:resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
1594406833942:(careless_dfs_long <- longstring(resp_dfs_dat))
1594406835112:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS") # careless 3,20
1594406836405:careless_dfs_irv <- irv(resp_dfs_dat)
1594406839447:careless_dfs_irv_idx <- order(careless_dfs_irv)
1594406840442:careless_irv_df <- cbind(resp = careless_dfs_irv_idx
1594406840466:, IRV=careless_dfs_irv[careless_dfs_irv_idx]
1594406840489:, resp_dfs_dat[careless_dfs_irv_idx,])
1594406841448:head(careless_irv_df) # careless 3, 20, 6
1594406962859:wants <- c('plotly','dplyr','rstatix','readr')
1594406963100:has <- wants %in% rownames(installed.packages())
1594406963272:if (any(!has)) install.packages(wants[!has])
1594406963447:options(scipen = 999)
1594406963631:library(plotly)
1594406963814:library(readr)
1594406964020:library(dplyr)
1594406964305:library(rstatix)
1594406964632:fss <- read_csv("data/fss.csv")
1594406966585:participants <- read_csv("data/participants.csv")
1594406967256:dat <- merge(participants, fss, by="UserID")
1594406968276:dat$cenario <- factor(dat$cenario)
1594406971423:fss <- read_csv("data/fss.csv")
1594406971959:participants <- read_csv("data/participants.csv")
1594406972525:dat <- merge(participants, fss, by="UserID")
1594406984553:p <- plot_ly(data=dat, type = "box", boxpoints = "outliers"#, jitter = 0.3
1594406984583:, x=as.formula("~cenario"), y=~media, color=~cenario, text=~UserID)
1594406985829:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1594406986874:print(p)
1594406987824:p <- p + geom_boxplot()
1594406988023:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1594406988525:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1594406989032:p <- p + geom_text(aes_string(label="UserID"), position = "dodge")
1594406989918:ggplotly(p)
1594406990784:print(p)
1594407003584:fss <- read_csv("data/fss.csv")
1594407003870:participants <- read_csv("data/participants.csv")
1594407004411:dat <- merge(participants, fss, by="UserID")
1594407005077:dat$cenario <- factor(dat$cenario)
1594408682259:runApp()
1594496070426:dfs <- read_csv('data/qpj-dfs.csv')
1594496082676:qpj_fss <- read_csv('data/qpj-fss.csv')
1594496111908:qpj_fss <- read_csv('data/fss-qpj.csv')
1594496452620:qpj_fss <- read_csv('data/fss-qpj.csv')
1594496504345:write(qpj_fss, 'data/qpj-fss.csv')
1594496513676:qpj_fss <- read_csv('data/fss-qpj.csv')
1594496514492:write_csv(qpj_fss, 'data/qpj-fss.csv')
1594496558652:qpj <- select(qpj_fss, -starts_with("dimensao"), -starts_with("media"))
1594496565881:colnames(qpj)
1594496587658:write_csv(qpj, 'data/qpj.csv')
1594496703197:library(readr)
1594496704136:dfs <- read_csv("data/dfs.csv")
1594496712559:colnames(dfs)
1594497173950:library(readr)
1594497174279:dfs <- read_csv("data/dfs.csv")
1594497186248:colnames(dfs)
1594497222478:dfs <- select(dfs, -starts_with("Q"))
1594497230060:colnames(dfs)
1594497249323:write_csv(dfs, 'data/dfs.csv')
1594497289064:library(readr)
1594497289085:qpj <- read_csv("data/qpj.csv")
1594497289111:View(qpj)
1594497339319:qpj <- select(qpj, -starts_with("cenario"))
1594497344786:colnames(qpj)
1594497365237:write_csv(qpj, 'data/qpj.csv')
1594497403534:library(readr)
1594497403565:fss <- read_csv("data/fss.csv")
1594497403594:View(fss)
1594497416989:library(readr)
1594497417012:qpj <- read_csv("data/qpj.csv")
1594497417034:View(qpj)
1594497436515:library(readr)
1594497436543:dfs <- read_csv("data/dfs.csv")
1594497436581:View(dfs)
1594497484044:dat <- merge(dfs, fss)
1594497490355:colnames(dat)
1594497501328:colnames(dfs)
1594497507137:colnames(fss)
1594497535487:dfs <- read_csv('data/dfs.csv')
1594497536296:fss <- read_csv('data/fss.csv')
1594497572519:dat <- merge(dfs, fss, by=c('UserID','cenario'))
1594497576454:View(dat)
1594497605567:?merge
1594497644378:dat <- merge(dfs, fss, by=c('UserID','cenario'), suffixes = c(".dfs",".fss"))
1594497651671:View(dat)
1594497966604:dfs <- read_csv('data/dfs.csv')
1594497966870:fss <- read_csv('data/fss.csv')
1594497969405:dat <- merge(dfs, fss, by=c('UserID','cenario'), suffixes = c(".dfs",".fss"))
1594497995834:dfs <- read_csv('data/dfs.csv')
1594497996108:fss <- read_csv('data/fss.csv')
1594497996727:dat <- merge(dfs, fss, by=c('UserID','cenario'), suffixes = c(".dfs",".fss"))
1594498000698:View(dat)
1594498017374:write_csv(dat, "data/dfs-fss.csv")
1594499014439:View(dat)
1594499169917:dfs_fss <- read_csv('data/dfs-fss.csv')
1594499191645:qpj <- read_csv('data/qpj.csv')
1594499200050:colnames(dfs_fss)
1594499207242:colnames(qpj)
1594499241926:dat <- merge(qpj, dfs_fss)
1594499245002:View(dat)
1594499377790:dat <- merge(qpj, dfs_fss)
1594499391385:data <- select(dat, starts_with("UserID"), starts_with("cenario"))
1594499406578:dat <- merge(data, dat)
1594499409730:View(dat)
1594499443551:write_csv(dat, "data/qpj-dfs-fss.csv")
1594500238056:data
1594500264362:norm(12)
1594500269020:?norm
1594500372360:?Random
1594500950641:runif(30)
1594501153710:?runif
1594501176596:runif(30, 1, 100)
1594501191175:integer(runif(30, 1, 100))
1594501205132:floor(runif(30, 1, 100))
1594501252196:data$pontos <- floor(runif(nrow(data), 100, 500))
1594501255069:data
1594501293649:data[["tempo.permanencia"]] <- floor(runif(nrow(data), 1000, 5000))
1594501313144:data[["tentativas"]] <- floor(runif(nrow(data), 300, 500))
1594501544159:data[["submissoes"]] <- floor(runif(nrow(data), 200, 400))
1594501865191:data[["rep.erradas"]] <- floor(runif(nrow(data), 10, 40))
1594501886739:data[["escolhas"]] <- floor(runif(nrow(data), 1, 20))
1594501906321:write_csv(data, 'data/engagement.csv')
1594501940543:View(data)
1594501947389:View(data)
1594503631741:merge(qpj, data)
1594503676054:qpj_eng <- merge(qpj, data)
1594503688093:data <- select(dat, starts_with("UserID"), starts_with("cenario"))
1594503703026:merge(data, qpj_eng)
1594503707583:dat <- merge(data, qpj_eng)
1594503710192:View(dat)
1594503736829:write_csv(dat, 'data/qpj-engagement.csv')
1594503818386:engagement <- read_csv('data/engagement.csv')
1594503824091:dat2 <- merge(dfs, engagement)
1594503826672:View(dat2)
1594503830617:View(dat2)
1594503830637:View(dat2)
1594503854815:write_csv(dat2, 'data/dfs-engagement.csv')
1594503877003:dat3 <- merge(qpj, dfs)
1594503880445:View(dat3)
1594503949797:colnames(qpj)
1594503981534:qpj <- select(qpj, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao"))
1594504009116:dat3 <- merge(dfs[,c("UserID","cenario")], qpj)
1594504026466:dat3 <- merge(dat3, dfs)
1594504037185:dat3 <- merge(dat3, engagement)
1594504041046:View(dat3)
1594504067412:View(dat3)
1594504084358:write_csv(dat3, 'data/qpj-dfs-engagament.csv')
1594510576357:data <- select(dat3, starts_with("UserID"), starts_with("cenario"))
1594510579330:data
1594510647803:data[["pos.nota"]] <- runif(nrow(data), 5, 10)
1594510650622:data
1594510667627:data[["pre.nota"]] <- runif(nrow(data), 1, 5)
1594510693560:data[["dif.nota"]] <- data$pos.nota - data$pre.nota
1594510695678:data
1594510806695:write_csv(data, "data/prepos.csv")
1594510834100:dat <- select(dat3, starts_with("UserID"), starts_with("cenario"))
1594510838351:dat <- select(data, starts_with("UserID"), starts_with("cenario"))
1594521134650:dat <- select(data, starts_with("UserID"), starts_with("cenario"))
1594521135195:dat <- merge(dat, qpj)
1594521135770:dat <- merge(dat, data)
1594521156493:View(dat)
1594521187144:write(dat, 'data/qpj-prepos.csv')
1594521194966:write_csv(dat, 'data/qpj-prepos.csv')
1594521274540:dat <- select(data, starts_with("UserID"), starts_with("cenario"))
1594521286965:dat <- merge(dat, qpj)
1594521290525:dat <- select(data, starts_with("UserID"), starts_with("cenario"))
1594521294797:dat <- merge(dat, dfs)
1594521303709:dat <- merge(dat, data)
1594521310302:write_csv(dat, 'data/dfs-prepos.csv')
1594521319791:colnames(dat)
1594521336893:dat <- select(data, starts_with("UserID"), starts_with("cenario"))
1594521338017:dat <- merge(dat, qpj)
1594521342457:dat <- merge(dat, dfs)
1594521344882:dat <- merge(dat, data)
1594521348943:dat
1594521354370:colnames(dat)
1594521370374:write_csv(dat, 'data/qpj-dfs-prepos.csv')
1594521377626:View(dat)
1594521852320:library(readr)
1594521852340:participants <- read_csv("raw-data/participants.csv")
1594521852361:View(participants)
1594529513858:library(readr)
1594529514385:qpj <- read_csv("data/qpj.csv")
1594529514432:View(qpj)
1594529541778:library(readr)
1594529541800:qpj_prepos <- read_csv("data/qpj-prepos.csv")
1594529541838:View(qpj_prepos)
1594529588527:dat <- merge(qpj, qpj_prepos)
1594529592144:View(dat)
1594529620886:library(readr)
1594529620907:participants <- read_csv("data/participants.csv")
1594529620931:View(participants)
1594529653141:par <- dat[,c("UserID","cenario")]
1594529655277:par
1594529681108:write_csv(par, "data/participants.csv")
1594530194312:library(readr)
1594530194332:participants <- read_csv("raw-data/participants.csv")
1594530194355:View(participants)
1594530202241:library(readr)
1594530202494:participants <- read_csv("raw-data/participants.csv")
1594530203388:View(participants)
1594530235039:dat <- merge(participants, par)
1594530239148:View(dat)
1594530263445:par
1594530268203:participants
1594530301838:dat <- cbind(participants, par)
1594531743973:nrow(participants)
1594531749489:nrow(par)
1594531938583:library(readr)
1594531938604:dfs_careless <- read_csv("data/dfs-careless.csv")
1594531938629:View(dfs_careless)
1594531950060:dfs_careless <- read_csv("data/dfs-careless.csv")
1594532015638:View(dfs_careless)
1594532048580:library(readr)
1594532048601:survey_dfs <- read_csv("data/survey-dfs.csv")
1594532048629:View(survey_dfs)
1594532060672:dfs_careless <- read_csv("data/dfs-careless.csv")
1594532061224:survey_dfs <- read_csv("data/survey-dfs.csv")
1594532064378:View(dfs_careless)
1594532066474:View(survey_dfs)
1594532096701:library(readr)
1594532096731:dfs <- read_csv("data/dfs.csv")
1594532096764:View(dfs)
1594532108303:dfs_careless <- read_csv("data/dfs-careless.csv")
1594532108496:survey_dfs <- read_csv("data/survey-dfs.csv")
1594532108684:dfs <- read_csv("data/dfs.csv")
1594532111941:View(dfs)
1594532288461:dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
1594532290099:dat
1594532348421:?merge
1594532378207:dat <- merge(dfs, dat, by="UserID", all.x = T, all.y = F)
1594532382424:View(dat)
1594532443483:dfs_careless
1594532617141:View(dat)
1594532645336:dfs_careless <- read_csv("data/dfs-careless.csv")
1594532645669:survey_dfs <- read_csv("data/survey-dfs.csv")
1594532647471:dfs <- read_csv("data/dfs.csv")
1594532657592:dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
1594532679637:dat <- merge(dat, dfs, by="UserID", all.x = T, all.y = F)
1594532683038:View(dat)
1594532755724:dfs_careless <- read_csv("data/dfs-careless.csv")
1594532755910:survey_dfs <- read_csv("data/survey-dfs.csv")
1594532756079:dfs <- read_csv("data/dfs.csv")
1594532756233:dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
1594532756927:dat <- merge(dfs, dat, by="UserID", all.x = F, all.y = T)
1594532922928:dfs_careless <- read_csv("data/dfs-careless.csv")
1594532923242:survey_dfs <- read_csv("data/survey-dfs.csv")
1594532923951:dfs <- read_csv("data/dfs.csv")
1594532927809:dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
1594533114799:tmp <- rbind(dfs, dfs_careless)
1594533123936:colnames(dfs)
1594533127903:colnames(dfs_careless)
1594533197540:dfs_careless <- read_csv("data/dfs-careless.csv")
1594533197697:survey_dfs <- read_csv("data/survey-dfs.csv")
1594533197867:dfs <- read_csv("data/dfs.csv")
1594533198019:dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
1594533199534:tmp <- rbind(dfs, select(dfs_careless, starts_with("UserID"), starts_with("cenario"), starts_with("media"), starts_with("dimensao")))
1594533222088:dat <- merge(tmp, dat, by="UserID", all.x = F, all.y = T)
1594533272986:write_csv(dat, "data/survey-dfs.csv")
1594535060852:fss_careless <- read_csv("data/fss-careless.csv")
1594535068475:survey_fss <- read_csv("data/survey-fss.csv")
1594535075602:fss <- read_csv("data/fss.csv")
1594535084270:dat <- select(survey_fss, starts_with("UserID"), starts_with("Q"))
1594535105521:tmp <- rbind(fss, select(fss_careless, starts_with("UserID"), starts_with("cenario"), starts_with("media"), starts_with("dimensao")))
1594535109239:View(tmp)
1594535129207:dat <- merge(tmp, dat, by="UserID", all.x = F, all.y = T)
1594535134062:View(dat)
1594535714648:dat <- dat[which(is.na(dat$cenario)),]
1594535723936:dat <- select(survey_fss, starts_with("UserID"), starts_with("Q"))
1594535724236:tmp <- rbind(fss, select(fss_careless, starts_with("UserID"), starts_with("cenario"), starts_with("media"), starts_with("dimensao")))
1594535724493:dat <- merge(tmp, dat, by="UserID", all.x = F, all.y = T)
1594535725322:dat <- dat[which(!is.na(dat$cenario)),]
1594535736990:write_csv(dat, "data/survey-fss.csv")
1594536205715:qpj_careless <- read_csv("data/qpj-careless.csv")
1594536216682:survey_qpj <- read_csv("data/survey-qpj.csv")
1594536224299:qpj <- read_csv("data/qpj.csv")
1594536252843:dat <- select(survey_qpj, starts_with("UserID"), starts_with("Item"))
1594536536106:qpj_careless
1594536557988:qpj_careless <- read_csv("data/qpj-careless.csv")
1594536558196:survey_qpj <- read_csv("data/survey-qpj.csv")
1594536558359:qpj <- read_csv("data/qpj.csv")
1594536558880:dat <- select(survey_qpj, starts_with("UserID"), starts_with("Item"))
1594536559605:tmp <- rbind(qpj, select(qpj_careless, starts_with("UserID"), starts_with("cenario"), starts_with("Item")))
1594536565931:qpj
1594536615737:qpj_careless <- read_csv("data/qpj-careless.csv")
1594536615953:survey_qpj <- read_csv("data/survey-qpj.csv")
1594536616128:qpj <- read_csv("data/qpj.csv")
1594536618912:survey_qpj
1594536664083:qpj_careless <- read_csv("data/qpj-careless.csv")
1594536664296:survey_qpj <- read_csv("data/survey-qpj.csv")
1594536664436:qpj <- read_csv("data/qpj.csv")
1594536664621:dat <- select(survey_qpj, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao"), starts_with("Item"))
1594536738480:qpj_careless
1594536743641:qpj
1594536768304:tmp <- rbind(qpj, select(qpj_careless, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao")))
1594536773109:tmp
1594536791975:dat <- merge(tmp, dat, by="UserID", all.x = F, all.y = T)
1594537735837:qpj_careless <- read_csv("data/qpj-careless.csv")
1594537736123:survey_qpj <- read_csv("data/survey-qpj.csv")
1594537736430:qpj <- read_csv("data/qpj.csv")
1594537738485:dat <- select(survey_qpj, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao"), starts_with("Item"))
1594537740693:tmp <- rbind(qpj, select(qpj_careless, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao")))
1594537743821:tmp
1594537765319:dat <- merge(select(tmp, starts_with("UserID")), dat, by="UserID", all.x = F, all.y = T)
1594537767392:dat <- dat[which(!is.na(dat$cenario)),]
1594537775663:qpj_careless <- read_csv("data/qpj-careless.csv")
1594537775874:survey_qpj <- read_csv("data/survey-qpj.csv")
1594537776036:qpj <- read_csv("data/qpj.csv")
1594537776187:dat <- select(survey_qpj, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao"), starts_with("Item"))
1594537776660:tmp <- rbind(qpj, select(qpj_careless, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao")))
1594537777510:dat <- merge(select(tmp, starts_with("UserID")), dat, by="UserID", all.x = F, all.y = T)
1594537799787:write_csv(dat, "data/survey-qpj.csv")
1594538304828:library(readr)
1594538305080:survey_dfs <- read_csv("data/survey-dfs.csv")
1594538305387:survey_fss <- read_csv("data/survey-fss.csv")
1594538306937:survey_qpj <- read_csv("data/survey-qpj.csv")
1594572242706:library(readr)
1594572242726:survey_dfs <- read_csv("data/survey-dfs.csv")
1594572242778:survey_fss <- read_csv("data/survey-fss.csv")
1594572242851:survey_qpj <- read_csv("data/survey-qpj.csv")
1594572262684:survey_dfs <- read_csv("data/survey-dfs.csv")
1594572262911:survey_fss <- read_csv("data/survey-fss.csv")
1594572263076:survey_qpj <- read_csv("data/survey-qpj.csv")
1594572263267:raw_survey_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594572264321:raw_survey_fss <- read_csv("raw-data/survey-0-fss.csv")
1594572264720:raw_survey_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594572285584:View(survey_fss)
1594572292679:View(raw_survey_fss)
1594572433198:View(survey_qpj)
1594572438511:View(raw_survey_qpj)
1594572533802:dat <- cbind(select(survey_qpj, starts_with("UserID")), select(raw_survey_qpj, starts_with("email")))
1594572536442:dat
1594572550747:bemail <- cbind(select(survey_qpj, starts_with("UserID")), select(raw_survey_qpj, starts_with("email")))
1594572564088:colnames(qpj)
1594572573560:colnames(survey_qpj)
1594572618438:colnames(raw_survey_qpj)
1594573072731:bemail <- cbind(select(survey_dfs, starts_with("UserID")), select(raw_survey_dfs, starts_with("email")))
1594573074952:bemail
1594573089368:bemail <- cbind(select(survey_qpj, starts_with("UserID")), select(raw_survey_qpj, starts_with("email")))
1594573178413:library(readr)
1594573178433:dataset <- read_csv(NULL)
1594573179243:View(dataset)
1594573205399:participants <- read_csv("raw-data/participants.csv")
1594573213521:colnames(participants)
1594573229926:participants
1594573362075:bemail <- merge(bemail, participants)
1594573364324:bemail
1594573387821:colnames(survey_dfs)
1594573393724:colnames(raw_survey_dfs)
1594573436254:merge(bemail, raw_survey_dfs, by="email")
1594573478414:colnames(raw_survey_dfs)
1594573489351:raw_survey_dfs
1594573528676:bemail
1594573580272:select(survey_dfs, -starts_with('media'), -starts_with('dimensao'))
1594573608820:select(raw_survey_dfs, -starts_with('media'), -starts_with('dimensao'), starts_with('Q'))
1594573621728:select(raw_survey_dfs, -starts_with('media'), -starts_with('dimensao'), -starts_with('Q'))
1594573637756:pre_dfs <- select(raw_survey_dfs, -starts_with('media'), -starts_with('dimensao'), -starts_with('Q'))
1594573652077:bemail <- cbind(select(survey_qpj, starts_with("UserID")), select(raw_survey_qpj, starts_with("email")))
1594573653162:bemail
1594573671557:dat <- merge(bemail, pre_dfs)
1594573674763:dat
1594573718701:dat <- merge(merge(pre_dfs, bemail), survey_dfs)
1594573720183:dat
1594573767834:colnames(raw_survey_dfs)
1594573946853:participants <- read_csv("raw-data/participants.csv")
1594573947057:survey_dfs <- read_csv("data/survey-dfs.csv")
1594573947217:survey_fss <- read_csv("data/survey-fss.csv")
1594573947361:survey_qpj <- read_csv("data/survey-qpj.csv")
1594573947492:raw_survey_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594573947792:raw_survey_fss <- read_csv("raw-data/survey-0-fss.csv")
1594573947965:raw_survey_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594573950382:bemail <- cbind(select(survey_qpj, starts_with("UserID")), select(raw_survey_qpj, starts_with("email")))
1594573954758:participants <- read_csv("raw-data/participants.csv")
1594573954906:survey_dfs <- read_csv("data/survey-dfs.csv")
1594573955051:survey_fss <- read_csv("data/survey-fss.csv")
1594573955219:survey_qpj <- read_csv("data/survey-qpj.csv")
1594573955421:raw_survey_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594573955815:raw_survey_fss <- read_csv("raw-data/survey-0-fss.csv")
1594573956240:raw_survey_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594573958902:library(readr)
1594573959090:participants <- read_csv("raw-data/participants.csv")
1594573960368:survey_dfs <- read_csv("data/survey-dfs.csv")
1594573960934:survey_fss <- read_csv("data/survey-fss.csv")
1594573961442:survey_qpj <- read_csv("data/survey-qpj.csv")
1594573962008:raw_survey_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594573963047:raw_survey_fss <- read_csv("raw-data/survey-0-fss.csv")
1594573964001:raw_survey_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594573979272:raw_survey_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594573979441:raw_survey_fss <- read_csv("raw-data/survey-0-fss.csv")
1594573979638:raw_survey_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594573986694:bemail <- cbind(select(survey_qpj, starts_with("UserID")), select(raw_survey_qpj, starts_with("email")))
1594574008970:survey_dfs
1594574013803:bemail <- cbind(select(survey_qpj, starts_with("UserID")), select(raw_survey_qpj, starts_with("email")))
1594574015093:pre_dfs <- select(raw_survey_dfs, -starts_with('media'), -starts_with('dimensao'), -starts_with('Q'))
1594574016995:pre_dfs
1594574027990:dat <- merge(merge(pre_dfs, bemail), survey_dfs)
1594574030215:sdat <- select(dat, starts_with("nome"), starts_with("nome"), starts_with("nascimento"), starts_with("email"), starts_with("genero"), starts_with("estado_civil"), starts_with("etinia"), starts_with("familia"), starts_with("orientacao_sexual"), starts_with("atividade"), starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1594574032057:sdat
1594574074220:write_csv(sdat, 'raw-data/survey-0-dfs.csv')
1594574094378:bemail <- cbind(select(survey_qpj, starts_with("UserID")), select(raw_survey_qpj, starts_with("email")))
1594574095117:pre_fss <- select(raw_survey_fss, -starts_with('media'), -starts_with('dimensao'), -starts_with('Q'))
1594574102691:dat <- merge(merge(pre_fss, bemail), survey_fss)
1594574105511:dat
1594574109826:sdat <- select(dat, starts_with("nome"), starts_with("nome"), starts_with("nascimento"), starts_with("email"), starts_with("genero"), starts_with("estado_civil"), starts_with("etinia"), starts_with("familia"), starts_with("orientacao_sexual"), starts_with("atividade"), starts_with("media"), starts_with("dimensao"), starts_with("Q"))
1594574113601:sdat
1594574127017:write_csv(sdat, 'raw-data/survey-0-fss.csv')
1594574210092:View(pre_fss)
1594574226732:View(survey_fss)
1594574240995:participants <- read_csv("raw-data/participants.csv")
1594574268738:bemail <- cbind(select(survey_fss, starts_with("UserID"), starts_with("cenario")), select(raw_survey_qpj, starts_with("email")))
1594574284260:bemail <- cbind(select(survey_fss, starts_with("UserID"), starts_with("cenario")), select(raw_survey_fss, starts_with("email")))
1594574291893:raw_survey_fss
1594574297893:participants <- read_csv("raw-data/participants.csv")
1594574298089:survey_dfs <- read_csv("data/survey-dfs.csv")
1594574298244:survey_fss <- read_csv("data/survey-fss.csv")
1594574298382:survey_qpj <- read_csv("data/survey-qpj.csv")
1594574298530:raw_survey_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594574298700:raw_survey_fss <- read_csv("raw-data/survey-0-fss.csv")
1594574299175:raw_survey_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594574299968:bemail <- cbind(select(survey_fss, starts_with("UserID"), starts_with("cenario")), select(raw_survey_fss, starts_with("email")))
1594574302785:bemail
1594574310687:participants <- read_csv("raw-data/participants.csv")
1594574408507:par <- merge(select(participants, starts_with("email")), bemail, all.x = T, all.y = F)
1594574410244:par
1594574445020:participants
1594574467785:View(par)
1594574551824:par$UserID[1] <- digest::digest(par$email[1], algo='crc32')
1594574570890:par$cenario[1] <- 'gamificado'
1594574645114:select(par, starts_with("UserID"), starts_with("cenario"))
1594574659670:write_csv(select(par, starts_with("UserID"), starts_with("cenario")), 'data/participants.csv')
1594574674532:participants <- read_csv("raw-data/participants.csv")
1594574703303:dat <- merge(participants, par, by='email')
1594574706631:View(dat)
1594574744654:colnames(participants)
1594574760174:dat <- merge(select(participants, -starts_with("cenario")), par, by='email')
1594574762547:dat
1594574830640:select(dat, starts_with("nome"), starts_with("email"), starts_with("cenario"))
1594574842488:write_csv(select(dat, starts_with("nome"), starts_with("email"), starts_with("cenario")), "raw-data/participants.csv")
1594574890088:library(readr)
1594574890116:prepos <- read_csv("data/prepos.csv")
1594574890143:View(prepos)
1594575921578:library(readr)
1594575921602:participants <- read_csv("data/participants.csv")
1594575921626:View(participants)
1594575947952:library(readr)
1594575947979:participants <- read_csv("raw-data/participants.csv")
1594575948005:View(participants)
1594576004997:pretest <- participants
1594576042703:pretest$nota <- runif(nrow(pretest), 1, 7)
1594576044370:pretest
1594576070326:write_csv('raw-data/pre-test.csv')
1594576077382:write_csv(pretest, 'raw-data/pre-test.csv')
1594576088225:postest <- participants
1594576099372:postest$nota <- runif(nrow(pretest), 4, 10)
1594576107997:write_csv(postest, 'raw-data/pos-test.csv')
1594576114341:postest
1594576205593:wants <- c('digest', 'readr', 'dplyr')
1594576205920:has <- wants %in% rownames(installed.packages())
1594576206223:if (any(!has)) install.packages(wants[!has])
1594576207043:library(readr)      # biblioteca para leitura de arquivos CVS
1594576207314:library(digest)     # biblioteca para anonimizar dados
1594576207599:library(dplyr)      # biblioteca para manipular data.frames
1594576208135:participants <- read_csv("raw-data/participants.csv")
1594576213616:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1594576213636:digest(x, algo = "crc32")
1594576213651:})
1594576225314:write_csv(participants[,c("UserID","cenario")], "data/participants.csv") # escrevendo resultados anonimizados
1594576230216:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594576256287:dfs <- merge(participants, pre_dfs, by='email') # combinando tabelas pelo emails
1594576261680:dfs <- select(dfs,
1594576261701:starts_with("UserID"),
1594576261720:starts_with("cenario"),
1594576261739:starts_with("media"),
1594576261753:starts_with("dimensao"),
1594576261766:starts_with("Q"))
1594576267418:dfs
1594576275039:write_csv(dfs, "data/survey-dfs.csv")
1594576278334:pre_fss <- read_csv("raw-data/survey-0-fss.csv")
1594576284021:fss <- merge(participants, pre_fss, by='email')
1594576320906:pre_fss <- read_csv("raw-data/survey-0-fss.csv")
1594576322078:fss <- merge(participants, pre_fss, by='email')
1594576323523:(fss <- select(fss,
1594576323542:starts_with("UserID"),     # identificado único
1594576323556:starts_with("cenario"),    # distribuição do participante entre cenário gamificado e não gamificado
1594576323571:starts_with("media"),      # score da media de fluxo
1594576323584:starts_with("dimensao"),   # score da dimensao 1 até 9
1594576323598:starts_with("Q")))         # resposta no item Q1 até Q36
1594576331666:write_csv(fss, "data/survey-fss.csv")
1594576337922:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594576341021:pre_qpj <- data.frame(
1594576341037:nome = pre_qpj$`Nome completo`
1594576341056:, email = pre_qpj$email
1594576341073:# componente 1 - realização
1594576341089:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1594576341103:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1594576341118:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1594576341130:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1594576341145:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1594576341159:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1594576341173:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1594576341186:# componente 2 - imersão
1594576341202:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1594576341216:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1594576341229:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1594576341244:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1594576341260:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1594576341274:# componente 3 - social
1594576341293:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1594576341305:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1594576341317:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1594576341330:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1594576341343:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1594576341357:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1594576341371:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1594576341385:)
1594576344622:pre_qpj[["ItemIcus9"]] <- sapply(pre_qpj$ItemIcus9, FUN = function(x) {
1594576344641:if (x == 'Sempre') return(5)
1594576344661:if (x == 'Frequentemente') return(4)
1594576344676:if (x == 'Não sei ao certo') return(3)
1594576344689:if (x == 'Pouco tempo') return(2)
1594576344708:if (x == 'Pouquíssimo tempo') return(1)
1594576344721:})
1594576347799:pre_qpj <- mutate(
1594576347817:pre_qpj
1594576347833:, "realizacao" = (ItemAcom0+ItemAcom3+ItemAcom5+ItemAcom6+ItemAcom8+ItemAcom9+ItemAAva2)/7
1594576347849:, "imersao" = (ItemIcus0+ItemIcus1+ItemIcus3+ItemIcus9+ItemIrol8)/5
1594576347863:, "social" = (ItemSrel0+ItemSrel1+ItemSrel9+ItemSsoc7+ItemSsoc8+ItemSsoc9+ItemStra2)/7
1594576347879:)
1594576351020:qpj <- merge(participants, pre_qpj, by='email')
1594576354087:qpj <- select(qpj,
1594576354105:starts_with("UserID"),
1594576354120:starts_with("cenario"),
1594576354133:starts_with("Item"),
1594576354151:starts_with("realizacao"),
1594576354164:starts_with("imersao"),
1594576354177:starts_with("social"))
1594576356811:write_csv(qpj, "data/survey-qpj.csv")
1594576427034:View(qpj)
1594577344785:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577350304:dfs <- merge(participants, pre_pre, by='email') # combinando tabelas pelo emails
1594577357184:pre <- merge(participants, pre_pre, by='email') # combinando tabelas pelo emails
1594577360430:pre
1594577433607:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577435118:pre_pre
1594577468356:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577468891:write_csv(select(pre_pre, -starts_with('cenario')),'pre-test.csv')
1594577484267:write_csv(select(pos_pre, -starts_with('cenario')),'pos-test.csv')
1594577493212:pre_pre <- read_csv("raw-data/pos-test.csv")
1594577493988:pre <- merge(participants, pre_pre, by='email') # combinando tabelas pelo emails
1594577503742:pre <- select(pre,
1594577503761:starts_with("UserID"),
1594577503774:starts_with("cenario"),
1594577503789:starts_with("nota"))               #selecionando dados não sensiveis
1594577521073:pre_pre <- read_csv("raw-data/pos-test.csv")
1594577521239:pre <- merge(participants, pre_pre, by='email') # combinando tabelas pelo emails
1594577521405:pre <- select(pre,
1594577521441:starts_with("UserID"),
1594577521462:starts_with("cenario"),
1594577521480:starts_with("nota"))               #selecionando dados não sensiveis
1594577522491:write_csv(pre, "data/pre-test.csv")
1594577525644:View(pre)
1594577532739:pre_pre <- read_csv("raw-data/pos-test.csv")
1594577534240:pre_pre
1594577568659:pre_pre <- read_csv("raw-data/pos-test.csv")
1594577568922:write_csv(select(pre_pre, -starts_with("cenario")), 'raw-data/pos-test.csv')
1594577571344:pre_pre <- read_csv("raw-data/pos-test.csv")
1594577572827:pre_pre
1594577587478:write_csv(select(pos_pre, -starts_with("cenario")), 'raw-data/pos-test.csv')
1594577592514:pos_pre <- read_csv("raw-data/pos-test.csv")
1594577599132:write_csv(select(pos_pre, -starts_with("cenario")), 'raw-data/pos-test.csv')
1594577607518:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577608823:pre_pre
1594577615608:View(pre)
1594577619182:View(pre)
1594577634126:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577674799:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577675298:pre_pre$nota <- runif(nrow(pre_pre), 1, 4)
1594577681177:write_csv(select(pre_pre, -starts_with("cenario")), 'raw-data/pre-test.csv')
1594577685400:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577686936:pre_pre
1594577698558:pre <- merge(participants, pre_pre, by='email') # combinando tabelas pelo emails
1594577700251:pre <- select(pre,
1594577700268:starts_with("UserID"),
1594577700290:starts_with("cenario"),
1594577700304:starts_with("nota"))               #selecionando dados não sensiveis
1594577707241:write_csv(pre, "data/pre-test.csv")
1594577717873:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577718141:pre <- merge(participants, pre_pre, by='email') # combinando tabelas pelo emails
1594577719058:pre <- select(pre,
1594577719077:starts_with("UserID"),
1594577719095:starts_with("cenario"),
1594577719108:starts_with("nota"))               #selecionando dados não sensiveis
1594577721618:pre
1594577728819:write_csv(pre, "data/pre-test.csv")
1594577765573:pre_pre <- read_csv("raw-data/pre-test.csv")
1594577765732:pre <- merge(participants, pre_pre, by='email') # combinando tabelas pelo emails
1594577765888:pre <- select(pre,
1594577765913:starts_with("UserID"),
1594577765930:starts_with("cenario"),
1594577765948:starts_with("nota"))               #selecionando dados não sensiveis
1594577766042:write_csv(pre, "data/pre-test.csv")
1594577766445:pos_pre <- read_csv("raw-data/pos-test.csv")
1594577766814:pos <- merge(participants, pos_pre, by='email') # combinando tabelas pelo emails
1594577767255:pos <- select(pos,
1594577767274:starts_with("UserID"),
1594577767294:starts_with("cenario"),
1594577767308:starts_with("nota"))               #selecionando dados não sensiveis
1594577768094:write_csv(pos, "data/pos-test.csv")
1594577800303:wants <- c('readr', 'careless', 'car','dplyr')
1594577800456:has <- wants %in% rownames(installed.packages())
1594577800835:if (any(!has)) install.packages(wants[!has])
1594577801006:library(readr)      # biblioteca para leitura de arquivos CVS
1594577801224:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594577801357:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594577801520:library(dplyr)      # biblioteca para manipular data.frames
1594577802668:dfs_dat <- read_csv("data/survey-dfs.csv")
1594577804423:resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
1594577805174:(careless_dfs_long <- longstring(resp_dfs_dat))
1594577809495:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS") # careless 3,20
1594577819211:careless_dfs_irv <- irv(resp_dfs_dat)
1594577821633:careless_dfs_irv_idx <- order(careless_dfs_irv)
1594577846605:# .. metodo irv
1594577846624:careless_dfs_irv <- irv(resp_dfs_dat)
1594577847124:careless_dfs_irv_idx <- order(careless_dfs_irv)
1594577849226:careless_irv_df <- cbind(resp = careless_dfs_irv_idx
1594577849244:, IRV=careless_dfs_irv[careless_dfs_irv_idx]
1594577849265:, resp_dfs_dat[careless_dfs_irv_idx,])
1594577852955:head(careless_irv_df)
1594577917433:# .. metodo irv
1594577917454:careless_dfs_irv <- irv(resp_dfs_dat)
1594577917621:careless_dfs_irv_idx <- order(careless_dfs_irv)
1594577917804:careless_irv_df <- cbind(resp = careless_dfs_irv_idx
1594577917822:, IRV=careless_dfs_irv[careless_dfs_irv_idx]
1594577917841:, resp_dfs_dat[careless_dfs_irv_idx,])
1594577917965:head(careless_irv_df) # careless 2, 54, 59
1594577931163:write_csv(dfs_dat[c(2,54,59),], 'data/dfs-careless.csv')
1594577933654:write_csv(dfs_dat[-c(2,54,59),], 'data/dfs.csv')
1594577939728:dfs_dat[c(2,54,59),]
1594577953616:dfs_dat[-c(2,54,59),]
1594577994086:library(readr)
1594577994111:dfs <- read_csv("data/dfs.csv")
1594577994137:View(dfs)
1594578056567:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594578056755:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594578056967:library(dplyr)      # biblioteca para manipular data.frames
1594578057483:## Leitura do questionario DFS usando arquivo CSV
1594578057503:fss_dat <- read_csv("data/survey-fss.csv")
1594578057690:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1594578058322:## Tratamento de respostas descuidadas (careless response)
1594578058340:(careless_fss_long <- longstring(resp_fss_dat))
1594578058668:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 3,20,38 respostas a ser eliminada
1594578080497:## Leitura do questionario DFS usando arquivo CSV
1594578080514:fss_dat <- read_csv("data/survey-fss.csv")
1594578080678:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1594578080892:## Tratamento de respostas descuidadas (careless response)
1594578080919:(careless_fss_long <- longstring(resp_fss_dat))
1594578081460:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 49,3,38 respostas a ser eliminada
1594578082393:careless_fss_irv <- irv(resp_fss_dat)
1594578082767:careless_fss_irv_idx <- order(careless_fss_irv)
1594578083694:careless_irv_df <- cbind(resp = careless_fss_irv_idx
1594578083710:, IRV=careless_fss_irv[careless_fss_irv_idx]
1594578083729:, resp_fss_dat[careless_fss_irv_idx,])
1594578084965:head(careless_irv_df) # 3,20,5,6
1594578104678:head(careless_irv_df) # 49,3,27,13
1594578143223:fss_dat[c(49,3,27,13),]
1594578147834:View(fss_dat[c(49,3,27,13),])
1594578158483:write_csv(fss_dat[c(49,3,27,13),], 'data/fss-careless.csv')
1594578159304:write_csv(fss_dat[-c(49,3,27,13),], 'data/fss.csv')
1594578289587:wants <- c('readr', 'careless', 'car','dplyr')
1594578289767:has <- wants %in% rownames(installed.packages())
1594578289906:if (any(!has)) install.packages(wants[!has])
1594578290043:library(readr)      # biblioteca para leitura de arquivos CVS
1594578290184:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594578290334:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594578290481:library(dplyr)      # biblioteca para manipular data.frames
1594578290616:qpj_dat <- read_csv("data/survey-qpj.csv")
1594578290776:resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
1594578292392:(careless_qpj_long <- longstring(resp_qpj_dat))
1594578292952:Boxplot(careless_qpj_long, main = "Boxplot do Longstring para o QPJ") # nemhum > 12 => não há careless
1594578295018:careless_qpj_irv <- irv(resp_qpj_dat)
1594578295277:careless_qpj_irv_idx <- order(careless_qpj_irv)
1594578298587:careless_irv_df <- cbind(resp = careless_qpj_irv_idx
1594578298604:, IRV=careless_qpj_irv[careless_qpj_irv_idx]
1594578298620:, resp_qpj_dat[careless_qpj_irv_idx,])
1594578299223:head(careless_irv_df) # careless 40
1594578311357:write_csv(qpj_dat[c(40),], 'data/qpj-careless.csv')
1594578313016:write_csv(qpj_dat[-c(40),], 'data/qpj.csv')
1594578634016:wants <- c('readr', 'careless', 'car','dplyr')
1594578634151:has <- wants %in% rownames(installed.packages())
1594578634304:if (any(!has)) install.packages(wants[!has])
1594578634539:library(readr)      # biblioteca para leitura de arquivos CVS
1594578634651:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594578634775:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594578634904:library(dplyr)      # biblioteca para manipular data.frames
1594578635033:qpj_dat <- read_csv("data/survey-qpj.csv")
1594578635163:resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
1594578635300:(careless_qpj_long <- longstring(resp_qpj_dat))
1594578635418:Boxplot(careless_qpj_long, main = "Boxplot do Longstring para o QPJ") # nemhum > 12 => não há careless
1594578635562:careless_qpj_irv <- irv(resp_qpj_dat)
1594578635797:careless_qpj_irv_idx <- order(careless_qpj_irv)
1594578636257:careless_irv_df <- cbind(resp = careless_qpj_irv_idx
1594578636273:, IRV=careless_qpj_irv[careless_qpj_irv_idx]
1594578636295:, resp_qpj_dat[careless_qpj_irv_idx,])
1594578636522:head(careless_irv_df) # careless 40
1594578637102:write_csv(qpj_dat[c(40),], 'data/qpj-careless.csv')
1594578637541:write_csv(qpj_dat[-c(40),], 'data/qpj.csv')
1594579216484:library(readr)
1594579216661:fss <- read_csv("data/fss.csv")
1594579216815:dfs <- read_csv("data/dfs.csv")
1594579217091:qpj <- read_csv("data/qpj.csv")
1594579217855:participants <- read_csv("data/participants.csv")
1594579226085:colnames(fss)
1594579258661:colnames(qpj)
1594579269216:qpj_fss <- merge(qpj, fss)
1594579272191:View(qpj_fss)
1594579381745:fss <- read_csv("data/fss.csv")
1594579381902:dfs <- read_csv("data/dfs.csv")
1594579382032:qpj <- read_csv("data/qpj.csv")
1594579382161:participants <- read_csv("data/participants.csv")
1594579382304:qpj_fss <- merge(qpj, fss)
1594579382539:qpj_fss <- select(qpj_fss,
1594579382553:starts_with("UserID"), starts_with("cenario"),
1594579382571:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594579382584:starts_with("media"), starts_with("dimensao"))
1594579385739:View(qpj_fss)
1594579428662:qpj_fss <- merge(qpj, fss)
1594579428863:qpj_fss <- select(qpj_fss,
1594579428888:starts_with("UserID"), starts_with("cenario"),
1594579428908:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594579428930:starts_with("media"), starts_with("dimensao"))
1594579429070:write_csv(qpj_fss, 'data/qpj-fss.csv')
1594579434945:qpj_fss
1594579443829:fss
1594579534987:dfs_fss <- merge(dfs, fss, sufixes = c(".dfs",".fss"))
1594579538674:View(dfs_fss)
1594579559088:dfs_fss <- merge(dfs, fss, by="UserID", sufixes = c(".dfs",".fss"))
1594579563041:View(dfs_fss)
1594579628807:library(readr)
1594579629672:fss <- select(read_csv("data/fss.csv")
1594579629688:, starts_with("UserID"), starts_with("cenario")
1594579629708:, starts_with("media"), starts_with("dimensao"))
1594579665978:library(readr)
1594579666183:fss <- read_csv("data/fss.csv")
1594579666361:dfs <- read_csv("data/dfs.csv")
1594579667773:qpj <- read_csv("data/qpj.csv")
1594579668845:participants <- read_csv("data/participants.csv")
1594579718495:## generate tabelas para testes estatisticos das médias em referência à experiencia de fluxo
1594579718513:fss <- select(fss,
1594579718534:starts_with("UserID"), starts_with("cenario"),
1594579718548:starts_with("media"), starts_with("dimensao"))
1594579735049:library(readr)
1594579735183:fss <- read_csv("data/fss.csv")
1594579735443:dfs <- read_csv("data/dfs.csv")
1594579735656:qpj <- read_csv("data/qpj.csv")
1594579735862:participants <- read_csv("data/participants.csv")
1594579736256:## generate tabelas para testes estatisticos das médias em referência à experiencia de fluxo
1594579736270:fss <- select(fss,
1594579736297:starts_with("UserID"), starts_with("cenario"),
1594579736313:starts_with("media"), starts_with("dimensao"))
1594579737742:write_csv(fss, "data/fss.csv")
1594579740029:View(fss)
1594579793160:# .. qpj + fss
1594579793178:qpj_fss <- merge(qpj, fss)
1594579796969:qpj_fss <- select(qpj_fss,
1594579796988:starts_with("UserID"), starts_with("cenario"),
1594579797004:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594579797019:starts_with("media"), starts_with("dimensao"))
1594579799808:qpj_fss
1594579810949:write_csv(qpj_fss, 'data/qpj-fss.csv')
1594579827190:# .. dfs + fss
1594579827208:dfs_fss <- merge(dfs, fss, by=c("UserID","cenario"), sufixes = c(".dfs",".fss"))
1594579835344:View(dfs_fss)
1594579858096:?merge
1594579866496:# .. dfs + fss
1594579866514:dfs_fss <- merge(dfs, fss, by=c("UserID","cenario"), suffixes = c(".dfs",".fss"))
1594579869534:View(dfs_fss)
1594579887151:# .. dfs + fss
1594579887170:dfs_fss <- merge(dfs, fss, by=c("UserID","cenario"), suffixes = c(".dfs",".fss"))
1594579924512:# .. dfs + fss
1594579924528:dfs_fss <- merge(dfs, fss, by=c("UserID","cenario"), suffixes = c(".dfs",".fss"))
1594579924811:dfs_fss <- select(dfs_fss,
1594579924827:starts_with("UserID"), starts_with("cenario"),
1594579924844:starts_with("media"), starts_with("dimensao"))
1594579929374:View(dfs_fss)
1594579969500:# .. dfs + fss
1594579969516:dfs_fss <- merge(dfs, fss, by=c("UserID","cenario"), suffixes = c(".dfs",".fss"))
1594579969710:dfs_fss <- select(dfs_fss,
1594579969729:starts_with("UserID"), starts_with("cenario"),
1594579969745:ends_with(".dfs"), ends_with(".fss"))
1594579972665:View(dfs_fss)
1594579993277:write_csv(dfs_fss, 'data/dfs-fss.csv')
1594580039737:# .. qpj+ dfs + fss
1594580039758:qpj_dfs_fss <- merge(qpj, dfs)
1594580043365:View(qpj_dfs_fss)
1594580073049:qpj_dfs_fss <- merge(qpj_dfs_fss, fss, by=c("UserID","cenario"), suffixes = c(".dfs",".fss"))
1594580079079:View(qpj_dfs_fss)
1594580122138:# .. qpj+ dfs + fss
1594580122163:qpj_dfs_fss <- merge(qpj, dfs)
1594580122356:qpj_dfs_fss <- merge(qpj_dfs_fss, fss, by=c("UserID","cenario"), suffixes = c(".dfs",".fss"))
1594580124009:qpj_dfs_fss <- select(qpj_dfs_fss,
1594580124030:starts_with("UserID"), starts_with("cenario"),
1594580124044:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594580124061:ends_with(".dfs"), ends_with(".fss"))
1594580127019:View(qpj_dfs_fss)
1594580156032:write_csv(qpj_dfs_fss, 'data/qpj-dfs-fss.csv')
1594580325652:engagement <- read_csv("data/engagement.csv")
1594580442409:dat <- read_csv('data/engagement.csv')
1594580466393:participants <- read_csv('data/participants.csv')
1594580469015:participants
1594580482621:participants <- read_csv('raw-data/participants.csv')
1594580484977:dat <- read_csv('data/engagement.csv')
1594580503554:cbind(participants, dat)
1594580523923:dat <- cbind(participants[1:50,], dat)
1594580525416:dat
1594580628350:write_csv(select(dat, starts_with("nome"), starts_with("email"), starts_with("pontos"), starts_with("tempo"), starts_with("tentativas"), starts_with("submissoes"), starts_with("rep.erradas"), starts_with("escolhas")))
1594580644991:dat2 <- select(dat, starts_with("nome"), starts_with("email"), starts_with("pontos"), starts_with("tempo"), starts_with("tentativas"), starts_with("submissoes"), starts_with("rep.erradas"), starts_with("escolhas"))
1594580649127:dat
1594580656172:dat2 <- select(dat, starts_with("nome"), starts_with("email"), starts_with("pontos"), starts_with("tempo"), starts_with("tentativas"), starts_with("submissoes"), starts_with("rep.erradas"), starts_with("escolhas"))
1594580702071:dat2 <- select(dat
1594580702088:, starts_with("nome")
1594580702104:#, starts_with("email"),
1594580702118:#starts_with("pontos"), starts_with("tempo"), starts_with("tentativas"),
1594580702131:#starts_with("submissoes"), starts_with("rep.erradas"), starts_with("escolhas")
1594580702144:)
1594580707255:dat
1594580760545:dat2 <- dat[,c("nome","email","pontos","tempo.permanencia","tentativas")]
1594580766744:dat2
1594580796810:dat <- cbind(participants[1:50,], dat)
1594580797063:dat2 <- dat[,c("nome","email","pontos","tempo.permanencia","tentativas", "submissoes","rep.erradas","escolhas")]
1594580810102:write_csv(dat2, 'raw-data/engagement.csv')
1594580905774:wants <- c('digest', 'readr', 'dplyr')
1594580905970:has <- wants %in% rownames(installed.packages())
1594580906137:if (any(!has)) install.packages(wants[!has])
1594580906301:library(readr)      # biblioteca para leitura de arquivos CVS
1594580906438:library(digest)     # biblioteca para anonimizar dados
1594580906585:library(dplyr)      # biblioteca para manipular data.frames
1594580906743:participants <- read_csv("raw-data/participants.csv")
1594580906923:participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
1594580906943:digest(x, algo = "crc32")
1594580906962:})
1594580907235:write_csv(participants[,c("UserID","cenario")], "data/participants.csv") # escrevendo resultados anonimizados
1594580907462:pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
1594580907980:dfs <- merge(participants, pre_dfs, by='email') # combinando tabelas pelo emails
1594580908096:dfs <- select(dfs,
1594580908119:starts_with("UserID"),
1594580908141:starts_with("cenario"),
1594580908161:starts_with("media"),
1594580908178:starts_with("dimensao"),
1594580908196:starts_with("Q"))               #selecionando dados não sensiveis
1594580908350:write_csv(dfs, "data/survey-dfs.csv")
1594580908735:pre_fss <- read_csv("raw-data/survey-0-fss.csv")
1594580908965:fss <- merge(participants, pre_fss, by='email')
1594580909185:(fss <- select(fss,
1594580909204:starts_with("UserID"),     # identificado único
1594580909224:starts_with("cenario"),    # distribuição do participante entre cenário gamificado e não gamificado
1594580909239:starts_with("media"),      # score da media de fluxo
1594580909280:starts_with("dimensao"),   # score da dimensao 1 até 9
1594580909306:starts_with("Q")))         # resposta no item Q1 até Q36
1594580909398:write_csv(fss, "data/survey-fss.csv")
1594580909747:pre_qpj <- read_csv("raw-data/survey-0-qpj.csv")
1594580910102:pre_qpj <- data.frame(
1594580910119:nome = pre_qpj$`Nome completo`
1594580910139:, email = pre_qpj$email
1594580910153:# componente 1 - realização
1594580910168:, ItemAcom0 = pre_qpj$`...estar em vantagem em relação aos outros jogadores?`
1594580910183:, ItemAcom3 = pre_qpj$`... observar seu desempenho em relação a outros jogadores?`
1594580910198:, ItemAcom5 = pre_qpj$`... derrotar outros jogadores?`
1594580910215:, ItemAcom6 = pre_qpj$`... tenta provocar ou irritar de propósito outros jogadores?`
1594580910230:, ItemAcom8 = pre_qpj$`... fazer coisas que incomodam outros jogadores?`
1594580910244:, ItemAcom9 = pre_qpj$`... competir com outros jogadores?`
1594580910263:, ItemAAva2 = pre_qpj$`... tornar-se muito bom em um jogo?`
1594580910282:# componente 2 - imersão
1594580910307:, ItemIcus0 = pre_qpj$`... pensa em itens ou características que poderiam ser mudadas para customizar a aparência do seu personagem ou o jogo em si?`
1594580910323:, ItemIcus1 = pre_qpj$`... que estejam combinando em cor e estilo as armadura ou roupas de seu personagem ou que as peças do jogo tenham uma aparência interessante?`
1594580910340:, ItemIcus3 = pre_qpj$`... que a aparência do seu personagem seja diferente da aparência de outros personagens?`
1594580910354:, ItemIcus9 = pre_qpj$`4 - Quanto tempo você passa customizando seu personagem durante a criação dele?`
1594580910368:, ItemIrol8 = pre_qpj$`... estar imerso em um mundo de fantasia?`
1594580910382:# componente 3 - social
1594580910401:, ItemSrel0 = pre_qpj$`... conversa com outros jogadores (on-line) sobre seus problemas/questões pessoais?`
1594580910417:, ItemSrel1 = pre_qpj$`... outros jogadores (on-line) te ofereceram ajuda quando você teve um problema na vida real?`
1594580910438:, ItemSrel9 = pre_qpj$`... tem conversas significativas com outros jogadores?`
1594580910454:, ItemSsoc7 = pre_qpj$`... ajudar outros jogadores?`
1594580910475:, ItemSsoc8 = pre_qpj$`... conhecer outros jogadores?`
1594580910490:, ItemSsoc9 = pre_qpj$`... conversar com outros jogadores?`
1594580910506:, ItemStra2 = pre_qpj$`... procura fazer parte de um grupo em jogos?`
1594580910519:)
1594580910533:pre_qpj[["ItemIcus9"]] <- sapply(pre_qpj$ItemIcus9, FUN = function(x) {
1594580910566:if (x == 'Sempre') return(5)
1594580910589:if (x == 'Frequentemente') return(4)
1594580910608:if (x == 'Não sei ao certo') return(3)
1594580910624:if (x == 'Pouco tempo') return(2)
1594580910639:if (x == 'Pouquíssimo tempo') return(1)
1594580910693:})
1594580911315:pre_qpj <- mutate(
1594580911334:pre_qpj
1594580911350:, "realizacao" = (ItemAcom0+ItemAcom3+ItemAcom5+ItemAcom6+ItemAcom8+ItemAcom9+ItemAAva2)/7
1594580911364:, "imersao" = (ItemIcus0+ItemIcus1+ItemIcus3+ItemIcus9+ItemIrol8)/5
1594580911380:, "social" = (ItemSrel0+ItemSrel1+ItemSrel9+ItemSsoc7+ItemSsoc8+ItemSsoc9+ItemStra2)/7
1594580911394:)
1594580911718:qpj <- merge(participants, pre_qpj, by='email')
1594580912025:qpj <- select(qpj,
1594580912046:starts_with("UserID"),
1594580912063:starts_with("cenario"),
1594580912077:starts_with("Item"),
1594580912091:starts_with("realizacao"),
1594580912104:starts_with("imersao"),
1594580912118:starts_with("social"))
1594580912546:write_csv(qpj, "data/survey-qpj.csv")
1594580913112:pre_pre <- read_csv("raw-data/pre-test.csv")
1594580913519:pre <- merge(participants, pre_pre, by='email') # combinando tabelas pelo emails
1594580913989:pre <- select(pre,
1594580914009:starts_with("UserID"),
1594580914023:starts_with("cenario"),
1594580914037:starts_with("nota"))               #selecionando dados não sensiveis
1594580916567:write_csv(pre, "data/pre-test.csv")
1594580917157:pos_pre <- read_csv("raw-data/pos-test.csv")
1594580917460:pos <- merge(participants, pos_pre, by='email') # combinando tabelas pelo emails
1594580917730:pos <- select(pos,
1594580917747:starts_with("UserID"),
1594580917764:starts_with("cenario"),
1594580917777:starts_with("nota"))               #selecionando dados não sensiveis
1594580918517:write_csv(pos, "data/pos-test.csv")
1594580920372:engagement_pre <- read_csv("raw-data/engagement.csv")
1594580923484:engagement <- merge(participants, engagement_pre, by='email') # combinando tabelas pelo emails
1594580925560:engagement
1594580944738:engagement_pre <- read_csv("raw-data/engagement.csv")
1594580946521:engagement_pre
1594580957789:engagement <- merge(participants, engagement_pre, by='email') # combinando tabelas pelo emails
1594580959050:engagement
1594580975549:engagement_pre <- read_csv("raw-data/engagement.csv")
1594580978272:View(engagement_pre)
1594580985655:participants
1594580999495:pos
1594581016387:engagement_pre <- read_csv("raw-data/engagement.csv")
1594581018186:engagement <- merge(participants, engagement_pre, by='email') # combinando tabelas pelo emails
1594581020560:engagement
1594581057388:engagement_pre <- read_csv("raw-data/engagement.csv")
1594581057603:engagement <- merge(participants, engagement_pre, by='email') # combinando tabelas pelo emails
1594581058149:engagement <- select(engagement,
1594581058169:starts_with("UserID"),
1594581058185:starts_with("cenario"),
1594581058199:-starts_with("nome"), -starts_with("email"))               #selecionando dados não sensiveis
1594581061005:View(engagement)
1594581069360:engagement_pre <- read_csv("raw-data/engagement.csv")
1594581069562:engagement <- merge(participants, engagement_pre, by='email') # combinando tabelas pelo emails
1594581079081:colnames(engagement)
1594581190290:engagement_pre <- read_csv("raw-data/engagement.csv")
1594581190462:engagement <- merge(participants, engagement_pre, by='email') # combinando tabelas pelo emails
1594581190635:engagement <- select(engagement,
1594581190657:starts_with("UserID"),
1594581190672:starts_with("cenario"),
1594581190687:starts_with("pontos"),
1594581190730:starts_with("tempo.permanencia"),
1594581190745:starts_with("tentativas"),
1594581190769:starts_with("submissoes"),
1594581190788:starts_with("rep.erradas"),
1594581190805:starts_with("escolhas"))               #selecionando dados não sensiveis
1594581191542:write_csv(engagement, "data/engagement.csv")
1594581202146:wants <- c('readr', 'careless', 'car','dplyr')
1594581202342:has <- wants %in% rownames(installed.packages())
1594581202483:if (any(!has)) install.packages(wants[!has])
1594581202625:library(readr)      # biblioteca para leitura de arquivos CVS
1594581202797:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594581203034:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594581203201:library(dplyr)      # biblioteca para manipular data.frames
1594581203368:dfs_dat <- read_csv("data/survey-dfs.csv")
1594581203549:resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
1594581203807:# .. metodo longstring
1594581203824:(careless_dfs_long <- longstring(resp_dfs_dat))
1594581204023:Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS") # careless 2,54
1594581204200:# .. metodo irv
1594581204221:careless_dfs_irv <- irv(resp_dfs_dat)
1594581204401:careless_dfs_irv_idx <- order(careless_dfs_irv)
1594581205646:careless_irv_df <- cbind(resp = careless_dfs_irv_idx
1594581205666:, IRV=careless_dfs_irv[careless_dfs_irv_idx]
1594581205683:, resp_dfs_dat[careless_dfs_irv_idx,])
1594581206395:head(careless_irv_df) # careless 2, 54, 59
1594581206751:write_csv(dfs_dat[c(2,54,59),], 'data/dfs-careless.csv')
1594581207229:write_csv(dfs_dat[-c(2,54,59),], 'data/dfs.csv')
1594581223432:wants <- c('readr', 'careless', 'car','dplyr')
1594581223614:has <- wants %in% rownames(installed.packages())
1594581223741:if (any(!has)) install.packages(wants[!has])
1594581223887:library(readr)      # biblioteca para leitura de arquivos CVS
1594581224022:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594581224167:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594581224297:library(dplyr)      # biblioteca para manipular data.frames
1594581224430:## Leitura do questionario DFS usando arquivo CSV
1594581224451:fss_dat <- read_csv("data/survey-fss.csv")
1594581224576:resp_fss_dat <- select(fss_dat, starts_with("Q"))
1594581224664:## Tratamento de respostas descuidadas (careless response)
1594581224684:(careless_fss_long <- longstring(resp_fss_dat))
1594581224820:Boxplot(careless_fss_long, main = "Boxplot do Longstring para o FSS") # 49,3,38 respostas a ser eliminada
1594581224966:careless_fss_irv <- irv(resp_fss_dat)
1594581225078:careless_fss_irv_idx <- order(careless_fss_irv)
1594581225228:careless_irv_df <- cbind(resp = careless_fss_irv_idx
1594581225250:, IRV=careless_fss_irv[careless_fss_irv_idx]
1594581225290:, resp_fss_dat[careless_fss_irv_idx,])
1594581225373:head(careless_irv_df) # 49, 3, 27 e 13 < 0.5
1594581225516:write_csv(fss_dat[c(49,3,27,13),], 'data/fss-careless.csv')
1594581225627:write_csv(fss_dat[-c(49,3,27,13),], 'data/fss.csv')
1594581232977:wants <- c('readr', 'careless', 'car','dplyr')
1594581233467:has <- wants %in% rownames(installed.packages())
1594581233498:if (any(!has)) install.packages(wants[!has])
1594581233527:library(readr)      # biblioteca para leitura de arquivos CVS
1594581233563:library(careless)   # biblioteca para tratamento de respostas descuidadas
1594581233622:library(car)        # biblioteca para graficar Boxplots com identificação de pontos
1594581233654:library(dplyr)      # biblioteca para manipular data.frames
1594581233683:qpj_dat <- read_csv("data/survey-qpj.csv")
1594581233751:resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
1594581233790:(careless_qpj_long <- longstring(resp_qpj_dat))
1594581233826:Boxplot(careless_qpj_long, main = "Boxplot do Longstring para o QPJ") # nemhum > 12 => não há careless
1594581233919:careless_qpj_irv <- irv(resp_qpj_dat)
1594581233972:careless_qpj_irv_idx <- order(careless_qpj_irv)
1594581234012:careless_irv_df <- cbind(resp = careless_qpj_irv_idx
1594581234038:, IRV=careless_qpj_irv[careless_qpj_irv_idx]
1594581234056:, resp_qpj_dat[careless_qpj_irv_idx,])
1594581234075:head(careless_irv_df) # careless 40
1594581234126:write_csv(qpj_dat[c(40),], 'data/qpj-careless.csv')
1594581234170:write_csv(qpj_dat[-c(40),], 'data/qpj.csv')
1594581253116:library(readr)
1594581253294:fss <- read_csv("data/fss.csv")
1594581253456:dfs <- read_csv("data/dfs.csv")
1594581253603:qpj <- read_csv("data/qpj.csv")
1594581253737:engagement <- read_csv("data/engagement.csv")
1594581253922:participants <- read_csv("data/participants.csv")
1594581254351:fss <- select(fss,
1594581254370:starts_with("UserID"), starts_with("cenario"),
1594581254388:starts_with("media"), starts_with("dimensao"))
1594581254593:write_csv(fss, "data/fss.csv")
1594581254928:# .. qpj + fss
1594581254950:qpj_fss <- merge(qpj, fss)
1594581255258:qpj_fss <- select(qpj_fss,
1594581255275:starts_with("UserID"), starts_with("cenario"),
1594581255298:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594581255313:starts_with("media"), starts_with("dimensao"))
1594581255560:write_csv(qpj_fss, 'data/qpj-fss.csv')
1594581255976:# .. dfs + fss
1594581256001:dfs_fss <- merge(dfs, fss, by=c("UserID","cenario"), suffixes = c(".dfs",".fss"))
1594581256318:dfs_fss <- select(dfs_fss,
1594581256335:starts_with("UserID"), starts_with("cenario"),
1594581256353:ends_with(".dfs"), ends_with(".fss"))
1594581256865:write_csv(dfs_fss, 'data/dfs-fss.csv')
1594581258072:# .. qpj+ dfs + fss
1594581258087:qpj_dfs_fss <- merge(qpj, dfs)
1594581258762:qpj_dfs_fss <- merge(qpj_dfs_fss, fss, by=c("UserID","cenario"), suffixes = c(".dfs",".fss"))
1594581258959:qpj_dfs_fss <- select(qpj_dfs_fss,
1594581258976:starts_with("UserID"), starts_with("cenario"),
1594581258995:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594581259009:ends_with(".dfs"), ends_with(".fss"))
1594581259802:write_csv(qpj_dfs_fss, 'data/qpj-dfs-fss.csv')
1594581271712:View(engagement)
1594581335372:# .. qpj + engagement
1594581335390:qpj_engagement <- merge(qpj, engagement)
1594581338490:qpj_engagement
1594581367149:colnames(engagement)
1594581419351:# .. qpj + engagement
1594581419371:qpj_engagement <- merge(qpj, engagement)
1594581420262:qpj_engagement <- select(qpj_engagement,
1594581420279:starts_with("UserID"), starts_with("cenario"),
1594581420297:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594581420311:starts_with("pontos"), starts_with("tempo.permanencia"), starts_with("tentativas"),
1594581420323:starts_with("submissoes"), starts_with("rep.erradas"), starts_with("escolhas"))
1594581422883:qpj_engagement
1594581442230:write_csv(qpj_engagement, 'data/qpj-engagement.csv')
1594581479507:# .. dfs + engagement
1594581479527:dfs_engagement <- merge(dfs, engagement, by=c("UserID","cenario"))
1594581480846:dfs_engagement
1594581540095:# .. dfs + engagement
1594581540128:dfs_engagement <- merge(dfs, engagement, by=c("UserID","cenario"))
1594581540338:dfs_engagement <- select(dfs_engagement,
1594581540358:starts_with("UserID"), starts_with("cenario"),
1594581540374:starts_with("media"), starts_with("dimensao"),
1594581540393:starts_with("pontos"), starts_with("tempo.permanencia"), starts_with("tentativas"),
1594581540407:starts_with("submissoes"), starts_with("rep.erradas"), starts_with("escolhas"))
1594581543461:dfs_engagement
1594581563909:write_csv(dfs_engagement, 'data/dfs-engagement.csv')
1594581600652:# .. qpj+ dfs + engagement
1594581600670:qpj_dfs_engagement <- merge(qpj, dfs)
1594581618176:qpj_dfs_engagement <- merge(qpj_dfs_engagement, engagement, by=c("UserID","cenario"))
1594581619814:qpj_dfs_engagement
1594581656310:# .. qpj+ dfs + engagement
1594581656328:qpj_dfs_engagement <- merge(qpj, dfs)
1594581656516:qpj_dfs_engagement <- merge(qpj_dfs_engagement, engagement, by=c("UserID","cenario"))
1594581657154:qpj_dfs_engagement <- select(qpj_dfs_engagement,
1594581657170:starts_with("UserID"), starts_with("cenario"),
1594581657189:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594581657202:starts_with("media"), starts_with("dimensao"),
1594581657217:starts_with("pontos"), starts_with("tempo.permanencia"), starts_with("tentativas"),
1594581657235:starts_with("submissoes"), starts_with("rep.erradas"), starts_with("escolhas"))
1594581659701:qpj_dfs_engagement
1594581669430:write_csv(qpj_dfs_engagement, 'data/qpj-dfs-engagement.csv')
1594581742762:pre <- read_csv('data/pre-test.csv')
1594581742990:pos <- read_csv('data/pos-test.csv')
1594581781995:gain_score <- merge(pos, pre)
1594581783605:gain_score
1594581786536:pre <- read_csv('data/pre-test.csv')
1594581786789:pos <- read_csv('data/pos-test.csv')
1594581788186:pre
1594581789578:pos
1594581827802:pre <- read_csv('data/pre-test.csv')
1594581828065:pos <- read_csv('data/pos-test.csv')
1594581828442:gain_score <- merge(pos, pre, by=c("UserID", "cenario"), suffixes = c(".pos",".pre"))
1594581830634:gain_score
1594581849148:pre <- read_csv('data/pre-test.csv')
1594581849376:pos <- read_csv('data/pos-test.csv')
1594581870577:prepos <- merge(pos, pre, by=c("UserID", "cenario"), suffixes = c(".pos",".pre"))
1594581955948:pre <- read_csv('data/pre-test.csv')
1594581956171:pos <- read_csv('data/pos-test.csv')
1594581956424:prepos <- merge(pos, pre, by=c("UserID", "cenario"), suffixes = c(".pos",".pre"))
1594581958408:prepos[["dif.nota"]] <- prepos$nota.pos - prepos$nota.pre
1594581980133:prepos
1594582002774:pre <- read_csv('data/pre-test.csv')
1594582002953:pos <- read_csv('data/pos-test.csv')
1594582003203:prepos <- merge(pos, pre, by=c("UserID", "cenario"), suffixes = c(".pos",".pre"))
1594582003891:prepos[["dif.nota"]] <- prepos$nota.pos - prepos$nota.pre
1594582004681:write_csv(prepos, 'data/prepos.csv')
1594582047886:prepos <- merge(pos, pre, by=c("UserID", "cenario"), suffixes = c(".pos",".pre"))
1594582048060:prepos[["dif.nota"]] <- prepos$nota.pos - prepos$nota.pre
1594582048244:write_csv(prepos, 'data/prepos.csv')
1594582049918:# .. qpj + prepos
1594582049938:qpj_prepos <- merge(qpj, prepos)
1594582051071:qpj_prepos
1594582088242:# .. qpj + prepos
1594582088261:qpj_prepos <- merge(qpj, prepos)
1594582088606:qpj_prepos <- select(qpj_prepos,
1594582088620:starts_with("UserID"), starts_with("cenario"),
1594582088636:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594582088650:starts_with("nota"), starts_with("dif.nota"))
1594582091343:qpj_prepos
1594582113230:# .. qpj + prepos
1594582113248:qpj_prepos <- merge(qpj, prepos)
1594582114635:qpj_prepos <- select(qpj_prepos,
1594582114653:starts_with("UserID"), starts_with("cenario"),
1594582114668:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594582114683:starts_with("nota"), starts_with("dif.nota"))
1594582131136:# .. qpj + prepos
1594582131153:qpj_prepos <- merge(qpj, prepos)
1594582131329:qpj_prepos <- select(qpj_prepos,
1594582131346:starts_with("UserID"), starts_with("cenario"),
1594582131361:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594582131375:starts_with("nota"), starts_with("dif.nota"))
1594582132224:write_csv(qpj_prepos, 'data/qpj-prepos.csv')
1594582135761:qpj_prepos
1594582178786:# .. dfs + prepos
1594582178804:dfs_prepos <- merge(dfs, prepos, by=c("UserID","cenario"))
1594582180194:dfs_prepos <- select(dfs_prepos,
1594582180215:starts_with("UserID"), starts_with("cenario"),
1594582180228:starts_with("media"), starts_with("dimensao"),
1594582180243:starts_with("nota"), starts_with("dif.nota"))
1594582182491:dfs_prepos
1594582204648:# .. dfs + prepos
1594582204667:dfs_prepos <- merge(dfs, prepos, by=c("UserID","cenario"))
1594582204828:dfs_prepos <- select(dfs_prepos,
1594582204846:starts_with("UserID"), starts_with("cenario"),
1594582204863:starts_with("media"), starts_with("dimensao"),
1594582204880:starts_with("nota"), starts_with("dif.nota"))
1594582205005:write_csv(dfs_prepos, 'data/dfs-prepos.csv')
1594582272606:# .. qpj+ dfs + prepos
1594582272626:qpj_dfs_prepos <- merge(qpj, dfs)
1594582272908:qpj_dfs_prepos <- merge(qpj_dfs_prepos, prepos, by=c("UserID","cenario"))
1594582273658:qpj_dfs_prepos <- select(qpj_dfs_prepos,
1594582273680:starts_with("UserID"), starts_with("cenario"),
1594582273698:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594582273713:starts_with("media"), starts_with("dimensao"),
1594582273729:starts_with("nota"), starts_with("dif.nota"))
1594582275940:qpj_dfs_prepos
1594582303594:# .. qpj+ dfs + prepos
1594582303614:qpj_dfs_prepos <- merge(qpj, dfs)
1594582303788:qpj_dfs_prepos <- merge(qpj_dfs_prepos, prepos, by=c("UserID","cenario"))
1594582304267:qpj_dfs_prepos <- select(qpj_dfs_prepos,
1594582304283:starts_with("UserID"), starts_with("cenario"),
1594582304301:starts_with("realizacao"), starts_with("social"), starts_with("imersao"),
1594582304317:starts_with("media"), starts_with("dimensao"),
1594582304329:starts_with("nota"), starts_with("dif.nota"))
1594582305729:write_csv(qpj_dfs_prepos, 'data/qpj-dfs-prepos.csv')
1594582355862:wants <- c('plotly','dplyr','rstatix','readr')
1594582356044:has <- wants %in% rownames(installed.packages())
1594582356199:if (any(!has)) install.packages(wants[!has])
1594582356333:options(scipen = 999)
1594582356566:library(plotly)
1594582356789:library(readr)
1594582356964:library(dplyr)
1594582357298:library(rstatix)
1594582357509:dat <- read_csv("data/fss.csv")
1594582358542:(frequency <- freq_table(dat, cenario))
1594582359460:(summary <- get_summary_stats(group_by(dat, cenario)))
1594582360793:write_csv(frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1594582361113:write_csv(summary, 'report/h1-experiencia-fluxo/summary.csv')
1594582361617:p <- plot_ly(data=dat, type = "box", boxpoints = "outliers"#, jitter = 0.3
1594582361635:, x=as.formula("~cenario"), y=~media, color=~cenario, text=~UserID)
1594582362795:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1594582363060:print(p)
1594582365198:p <- p + geom_boxplot()
1594582365584:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1594582365857:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1594582366754:p <- p + geom_text(aes_string(label="UserID"), position = "dodge")
1594582367473:ggplotly(p)
1594582367720:print(p)
1594582370391:for (param in list(list("dimensao1", "balanço desafio/habilidade")
1594582370411:, list("dimensao2", "fusão ação e atenção")
1594582370427:, list("dimensao3", "objetivos claros")
1594582370440:, list("dimensao4", "feedback")
1594582370456:, list("dimensao5", "concentração")
1594582370472:, list("dimensao6", "controle")
1594582370489:, list("dimensao7", "perda autoconsciência")
1594582370503:, list("dimensao8", "transformação do tempo")
1594582370518:, list("dimensao9", "experiência autotélica")
1594582370532:, list("media", "média do fluxo"))) {
1594582370547:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1594582370563:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1594582370580:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1594582370594:print(p)
1594582370616:readline(prompt=paste0("Current graph: ",param[[1]]," >> Press [enter] to continue"))
1594582370631:}
1594582382092:(shapiro <- shapiro_test(group_by(media_dat, cenario), media))
1594582382820:write_csv(media_dat, 'report/h1-experiencia-fluxo/media-data.csv')
1594582383111:write_csv(shapiro, 'report/h1-experiencia-fluxo/media-shapiro.csv')
1594582383595:(levene <- levene_test(media ~ cenario, data = media_dat))
1594582383990:write_csv(levene, 'report/h1-experiencia-fluxo/media-shapiro.csv')
1594582384381:(tt <- t_test(media ~ cenario, data = media_dat))
1594582384793:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater", detailed = T))
1594582385239:add_significance(tt)
1594582385606:(ez <- cohens_d(media ~ cenario, data = media_dat, var.equal = T))
1594582385962:(t_test <- add_significance(merge(tt, ez)))
1594582386339:write_csv(t_test, 'report/h1-experiencia-fluxo/media-ttest.csv')
1594582386711:## ... criamos novamente a gráfica do boxplot para a média do fluxo (porque foram removidos dados)
1594582386730:p <- plot_ly(data=media_dat, type = "box", boxpoints = "all", jitter = 0.3
1594582386744:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1594582387032:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1594582387399:print(p)
1594582387784:## ... criamos novamente a estatistica descritiva da média do fluxo
1594582387805:(media_summary <- get_summary_stats(media_dat, media))
1594582388210:wilcox_test(media~cenario, data = dat, alternative = "greater")
1594582388442:wilcox_effsize(media~cenario, data = dat, alternative = "greater")
1594582388935:non_param_test <- do.call(rbind, lapply(param_list, FUN = function(param) {
1594582388953:formula <- as.formula(paste0(param[[1]],'~cenario'))
1594582388970:cbind("fator latente" = param[[2]]
1594582388988:, merge(wilcox_test(formula, data = dat, alternative="greater")
1594582389001:, wilcox_effsize(formula, data = dat)))
1594582389017:}))
1594582389243:non_param_test
1594582389565:write_csv(non_param_test, "report/h1-experiencia-fluxo/non-parametric-test.csv")
1594582389919:## Efetuar plot
1594582389941:library(plotly)
1594582422521:## ... criamos novamente a estatistica descritiva da média do fluxo
1594582422542:(media_summary <- get_summary_stats(media_dat, media))
1594582428648:wants <- c('plotly','dplyr','rstatix','readr')
1594582428845:has <- wants %in% rownames(installed.packages())
1594582428974:if (any(!has)) install.packages(wants[!has])
1594582429111:options(scipen = 999)
1594582429248:library(plotly)
1594582429618:library(readr)
1594582429711:library(dplyr)
1594582429878:library(rstatix)
1594582430110:dat <- read_csv("data/fss.csv")
1594582430150:(frequency <- freq_table(dat, cenario))
1594582430283:(summary <- get_summary_stats(group_by(dat, cenario)))
1594582430456:write_csv(frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1594582430575:write_csv(summary, 'report/h1-experiencia-fluxo/summary.csv')
1594582430727:p <- plot_ly(data=dat, type = "box", boxpoints = "outliers"#, jitter = 0.3
1594582430746:, x=as.formula("~cenario"), y=~media, color=~cenario, text=~UserID)
1594582430900:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1594582431047:print(p)
1594582431409:p <- p + geom_boxplot()
1594582432005:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1594582432094:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1594582432311:p <- p + geom_text(aes_string(label="UserID"), position = "dodge")
1594582432529:ggplotly(p)
1594582433692:print(p)
1594582434819:for (param in list(list("dimensao1", "balanço desafio/habilidade")
1594582434832:, list("dimensao2", "fusão ação e atenção")
1594582434845:, list("dimensao3", "objetivos claros")
1594582434859:, list("dimensao4", "feedback")
1594582434873:, list("dimensao5", "concentração")
1594582434887:, list("dimensao6", "controle")
1594582434903:, list("dimensao7", "perda autoconsciência")
1594582434923:, list("dimensao8", "transformação do tempo")
1594582434944:, list("dimensao9", "experiência autotélica")
1594582434962:, list("media", "média do fluxo"))) {
1594582434978:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1594582434996:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1594582435012:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1594582435031:print(p)
1594582435053:readline(prompt=paste0("Current graph: ",param[[1]]," >> Press [enter] to continue"))
1594582435067:}
1594582537431:shapiro_test(group_by(media_dat, cenario), media)
1594582540887:shapiro_test(group_by(media_dat, cenario), media)
1594582541156:rownames(media_dat) <- media_dat$UserID
1594582541372:car::qqPlot(~media, subset(media_dat, cenario == "gamificado"))
1594582551587:wants <- c('plotly','dplyr','rstatix','readr')
1594582551762:has <- wants %in% rownames(installed.packages())
1594582551900:if (any(!has)) install.packages(wants[!has])
1594582552023:options(scipen = 999)
1594582552175:library(plotly)
1594582552543:library(readr)
1594582552702:library(dplyr)
1594582552849:library(rstatix)
1594582553056:dat <- read_csv("data/fss.csv")
1594582553283:(frequency <- freq_table(dat, cenario))
1594582553820:(summary <- get_summary_stats(group_by(dat, cenario)))
1594582554128:write_csv(frequency, 'report/h1-experiencia-fluxo/frequency.csv')
1594582554391:write_csv(summary, 'report/h1-experiencia-fluxo/summary.csv')
1594582554772:p <- plot_ly(data=dat, type = "box", boxpoints = "outliers"#, jitter = 0.3
1594582554793:, x=as.formula("~cenario"), y=~media, color=~cenario, text=~UserID)
1594582555191:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1594582555513:print(p)
1594582556277:p <- p + geom_boxplot()
1594582556846:p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
1594582557053:p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
1594582557218:p <- p + geom_text(aes_string(label="UserID"), position = "dodge")
1594582557656:ggplotly(p)
1594582558012:print(p)
1594582559167:for (param in list(list("dimensao1", "balanço desafio/habilidade")
1594582559180:, list("dimensao2", "fusão ação e atenção")
1594582559193:, list("dimensao3", "objetivos claros")
1594582559206:, list("dimensao4", "feedback")
1594582559219:, list("dimensao5", "concentração")
1594582559233:, list("dimensao6", "controle")
1594582559246:, list("dimensao7", "perda autoconsciência")
1594582559260:, list("dimensao8", "transformação do tempo")
1594582559273:, list("dimensao9", "experiência autotélica")
1594582559292:, list("media", "média do fluxo"))) {
1594582559309:p <- plot_ly(data=dat, type = "box", boxpoints = "all", jitter = 0.3
1594582559323:, x=~cenario, y=as.formula(paste0("~", param[[1]])), color=~cenario, text=~UserID)
1594582559336:p <- layout(p, yaxis = list(title=param[[2]]), showlegend = F)
1594582559349:print(p)
1594582559367:readline(prompt=paste0("Current graph: ",param[[1]]," >> Press [enter] to continue"))
1594582559383:}
1594582574696:(media_outliers <- identify_outliers(group_by(dat, cenario), media))
1594582575240:media_dat <- dat[!dat$UserID %in% media_outliers$UserID,]
1594582576332:shapiro_test(group_by(media_dat, cenario), media)
1594582577100:rownames(media_dat) <- media_dat$UserID
1594582578300:car::qqPlot(~media, subset(media_dat, cenario == "gamificado"))
1594582579799:media_dat <- media_dat[!media_dat$UserID %in% c("60099c38","cc15d10e"),]
1594582581063:shapiro_test(group_by(media_dat, cenario), media)
1594582581848:source('common/identify_nonnormal.R')
1594582583307:(non_normal_ids <- identify_nonnormal(subset(media_dat, cenario == "gamificado"), "media", wid = "UserID"))
1594582588782:Q
1594582592107:identify_nonnormal_by_groups <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1594582592126:gdat <- df2qqs(data[,c(wid,dv,ivs)], ivs)
1594582592145:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1594582592162:repeat{
1594582592176:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1594582592190:to_remove <- c(get_ids_of_min_per_groups(gdat, ivs, wid), to_remove)
1594582592203:gdat <- group_by_at(gdat[which(!gdat[[wid]] %in% to_remove),], vars(ivs))
1594582592223:shapiro <- subset(shapiro_test(gdat, vars = dv), p < 0.05)
1594582592236:if (nrow(shapiro) == 0) break()
1594582592251:for (i in seq(1:nrow(shapiro))) {
1594582592264:df <- subset_by_tbl(gdat, shapiro[i,], ivs = ivs)
1594582592279:rownames(df) <- df[[wid]]
1594582592296:nonNormalityIds <- names(car::qqPlot(as.formula(paste('~', dv)), data = df))
1594582592310:to_remove <- c(nonNormalityIds, to_remove)
1594582592322:}
1594582592335:}
1594582592349:return(setdiff(unique(to_remove), NA))
1594582592366:}
1594582592600:identify_nonnormal <- function(data, dv, ivs, wid = "row.pos", to_remove = c()) {
1594582592615:nonNormalityIds <- identify_nonnormal_by_residuals(data, dv, ivs, wid, to_remove)
1594582592633:nonNormalityIds <- c(identify_nonnormal_by_groups(data, dv, ivs, wid, nonNormalityIds), nonNormalityIds)
1594582592652:return(unique(nonNormalityIds))
1594582592669:}
1594582635787:(levene <- levene_test(media ~ cenario, data = media_dat))
1594582635977:write_csv(levene, 'report/h1-experiencia-fluxo/media-shapiro.csv')
1594582636552:(tt <- t_test(media ~ cenario, data = media_dat))
1594582637513:(tt <- t_test(media ~ cenario, data = media_dat, alternative = "greater", detailed = T))
1594582638363:add_significance(tt)
1594582638847:(ez <- cohens_d(media ~ cenario, data = media_dat, var.equal = T))
1594582639332:(t_test <- add_significance(merge(tt, ez)))
1594582639633:write_csv(t_test, 'report/h1-experiencia-fluxo/media-ttest.csv')
1594582640240:## ... criamos novamente a gráfica do boxplot para a média do fluxo (porque foram removidos dados)
1594582640259:p <- plot_ly(data=media_dat, type = "box", boxpoints = "all", jitter = 0.3
1594582640280:, x=~cenario, y=~media, color=~cenario, text=~UserID)
1594582640654:p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
1594582641082:print(p)
1594582642614:## ... criamos novamente a estatistica descritiva da média do fluxo
1594582642632:(media_summary <- get_summary_stats(media_dat, media))
1594582643327:wilcox_test(media~cenario, data = dat, alternative = "greater")
1594582643873:wilcox_effsize(media~cenario, data = dat, alternative = "greater")
