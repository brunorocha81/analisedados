output$qqPlotGroups <- renderUI({
group <- between
dat <- data
if (!is.null(dv.var)) dat <- dat[which(dat[[dv.var]] == dv),]
freq_df <- subset(freq_table(dat, vars = group), n >= 3)
do.call(verticalLayout, lapply(seq(1,nrow(freq_df)), FUN = function(i) {
tbl <- freq_df[i,c(group)]
df <- as.data.frame(subset_by_tbl(dat, tbl, group = group))
df <- group_by_at(df, vars(group))
ntitle <- paste(sapply(names(tbl), FUN = function(nc) paste0(nc,':', tbl[[nc]])), collapse = " - ")
verticalLayout(
br(), p(strong(paste("Gráfico Q-Q dos modelos por grupo, ", ntitle))),
splitLayout(
renderPlot({
car::qqPlot(as.formula(paste('~', dv)), data = df)
}, width = width, height = height),
renderPlotly({
plotly::layout(qqPlotly(df[[wid]], df[[dv]], width = width, height = height), title = 'Interative Q-Q')
})
)
)
}))
})
}
)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?tabPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggboxplot
source(paste0(getwd(),'/modules/df2Table.R'))
source(paste0(getwd(),'/common/anova_plots.R'))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat <- read_csv('data/fss-qpj.csv')
dat
dat <- df2qqs(dat, c('cenario','imersao','realizacao','social'))
iv = 'cenario'
gdat <- group_by_at(as.data.frame(dat), vars(iv))
gdat
dv = "media"
#print(gdat)
emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T,
p.adjust.method = input$pairwiseCompAdjustmethod)
#print(gdat)
emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T,
p.adjust.method = input$pairwiseCompAdjustmethod)
#print(gdat)
(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
?emmeans_test
gdat <- group_by_at(as.data.frame(dat), vars(iv))
gdat
#print(gdat)
(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
gdat <- group_by_at(as.data.frame(dat), vars(c('imersao','realizacao')))
gdat
#print(gdat)
(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
gdat <- group_by_at(as.data.frame(dat), vars(c('imersao','realizacao','cenario')))
gdat
#print(gdat)
(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
gdat <- group_by_at(as.data.frame(dat), vars(c('')))
gdat <- group_by_at(as.data.frame(dat), vars(c()))
gdat
#print(gdat)
(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
setdiff(c('a'), 'a')
group_by_at(dat, vars(setdiff(c('a'), 'a')))
gdat <- group_by_at(as.data.frame(dat), vars(setdiff(names(livs), iv)))
#print(gdat)
(emm <- emmeans_test(gdat, as.formula(paste(dv, "~", iv)), detailed=T))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?navbarMenu
ggplot()
runApp()
runApp()
ggplot() + geom_text("adda")
wants <- c('digest', 'readr', 'dplyr')
has <- wants %in% rownames(installed.packages())
if (any(!has)) install.packages(wants[!has])
library(readr)      # biblioteca para leitura de arquivos CVS
library(digest)     # biblioteca para anonimizar dados
library(dplyr)      # biblioteca para manipular data.frames
participants <- read_csv("raw-data/participants.csv")
participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
digest(x, algo = "crc32")
})
pre_fss <- read_csv("raw-data/survey-0-fss.csv")
(fss <- merge(participants, pre_fss, by='email'))
fss <- select(fss, starts_with("UserID"), starts_with("cenario")
, starts_with("media"), starts_with("dimensao"), starts_with("Q"))
fss
fss
library(readr)
survey_0_fss <- read_csv("raw-data/survey-0-fss.csv")
View(survey_0_fss)
library(readr)
participants <- read_csv("raw-data/participants.csv")
View(participants)
library(readr)
survey_0_qpj <- read_csv("raw-data/survey-0-qpj.csv")
View(survey_0_qpj)
wants <- c('digest', 'readr', 'dplyr')
has <- wants %in% rownames(installed.packages())
if (any(!has)) install.packages(wants[!has])
library(readr)      # biblioteca para leitura de arquivos CVS
library(digest)     # biblioteca para anonimizar dados
library(digest)     # biblioteca para anonimizar dados
library(dplyr)      # biblioteca para manipular data.frames
participants <- read_csv("raw-data/participants.csv")
sapply(participants$email, FUN = function(x) { # anonimizando por email
digest(x, algo = "crc32")
})
participants <- read_csv("raw-data/participants.csv")
participants[["UserID"]] <- sapply(participants$email, FUN = function(x) { # anonimizando por email
digest(x, algo = "crc32")
})
View(participants)
write_csv(participants[,c("UserID","cenario")], "data/participants.csv") # escrevendo resultados anonimizados
pre_dfs <- read_csv("raw-data/survey-0-dfs.csv")
dfs <- merge(participants, pre_dfs, by='email')
dfs <- select(dfs,
starts_with("UserID"),
starts_with("cenario"),
starts_with("media"),
starts_with("dimensao"),
starts_with("Q"))
dfs
write_csv(dfs, "data/survey-dfs.csv")
has <- wants %in% rownames(installed.packages())
if (any(!has)) install.packages(wants[!has])
library(readr)      # biblioteca para leitura de arquivos CVS
library(careless)   # biblioteca para tratamento de respostas descuidadas
library(car)        # biblioteca para graficar Boxplots com identificação de pontos
library(dplyr)      # biblioteca para manipular data.frames
qpj_dat <- read_csv("data/survey-qpj.csv")
qpj_dat
View(qpj_dat)
resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
(careless_qpj_long <- longstring(resp_qpj_dat))
Boxplot(careless_qpj_long, main = "Boxplot do Longstring para o QPJ") # nemhum > 12 => não há careless
wants <- c('readr', 'careless', 'car','dplyr')
has <- wants %in% rownames(installed.packages())
if (any(!has)) install.packages(wants[!has])
library(readr)      # biblioteca para leitura de arquivos CVS
library(careless)   # biblioteca para tratamento de respostas descuidadas
library(car)        # biblioteca para graficar Boxplots com identificação de pontos
library(dplyr)      # biblioteca para manipular data.frames
dfs_dat <- read_csv("data/survey-dfs.csv")
resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
(careless_dfs_long <- longstring(resp_dfs_dat))
Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS") # careless 3,20
View(dfs_dat)
careless_qpj_irv <- irv(resp_qpj_dat)
(careless_qpj_long <- longstring(resp_qpj_dat))
wants <- c('readr', 'careless', 'car','dplyr')
has <- wants %in% rownames(installed.packages())
if (any(!has)) install.packages(wants[!has])
library(readr)      # biblioteca para leitura de arquivos CVS
library(careless)   # biblioteca para tratamento de respostas descuidadas
library(car)        # biblioteca para graficar Boxplots com identificação de pontos
library(dplyr)      # biblioteca para manipular data.frames
(careless_qpj_long <- longstring(resp_qpj_dat))
qpj_dat <- read_csv("data/survey-qpj.csv")
resp_qpj_dat <- select(qpj_dat, starts_with("Item")) # selecionar apenas respostas das questões "Item"
dfs_dat <- read_csv("data/survey-dfs.csv")
resp_dfs_dat <- select(dfs_dat, starts_with("Q")) # selecionar apenas respostas das questões "Q"
(careless_dfs_long <- longstring(resp_dfs_dat))
Boxplot(careless_dfs_long, main = "Boxplot do Longstring para o DFS") # careless 3,20
careless_dfs_irv <- irv(resp_dfs_dat)
careless_dfs_irv_idx <- order(careless_dfs_irv)
careless_irv_df <- cbind(resp = careless_dfs_irv_idx
, IRV=careless_dfs_irv[careless_dfs_irv_idx]
, resp_dfs_dat[careless_dfs_irv_idx,])
head(careless_irv_df) # careless 3, 20, 6
wants <- c('plotly','dplyr','rstatix','readr')
has <- wants %in% rownames(installed.packages())
if (any(!has)) install.packages(wants[!has])
options(scipen = 999)
library(plotly)
library(readr)
library(dplyr)
library(rstatix)
fss <- read_csv("data/fss.csv")
participants <- read_csv("data/participants.csv")
dat <- merge(participants, fss, by="UserID")
dat$cenario <- factor(dat$cenario)
fss <- read_csv("data/fss.csv")
participants <- read_csv("data/participants.csv")
dat <- merge(participants, fss, by="UserID")
p <- plot_ly(data=dat, type = "box", boxpoints = "outliers"#, jitter = 0.3
, x=as.formula("~cenario"), y=~media, color=~cenario, text=~UserID)
p <- layout(p, yaxis = list(title="média do fluxo"), showlegend = F)
print(p)
p <- p + geom_boxplot()
p <- ggplot(dat, aes_string("cenario", "media", colour = "cenario"))
p <- p + geom_boxplot(outlier.colour = "red", outlier.size = 1.5)
p <- p + geom_text(aes_string(label="UserID"), position = "dodge")
ggplotly(p)
print(p)
fss <- read_csv("data/fss.csv")
participants <- read_csv("data/participants.csv")
dat <- merge(participants, fss, by="UserID")
dat$cenario <- factor(dat$cenario)
runApp()
dfs <- read_csv('data/qpj-dfs.csv')
qpj_fss <- read_csv('data/qpj-fss.csv')
qpj_fss <- read_csv('data/fss-qpj.csv')
qpj_fss <- read_csv('data/fss-qpj.csv')
write(qpj_fss, 'data/qpj-fss.csv')
qpj_fss <- read_csv('data/fss-qpj.csv')
write_csv(qpj_fss, 'data/qpj-fss.csv')
qpj <- select(qpj_fss, -starts_with("dimensao"), -starts_with("media"))
colnames(qpj)
write_csv(qpj, 'data/qpj.csv')
library(readr)
dfs <- read_csv("data/dfs.csv")
colnames(dfs)
library(readr)
dfs <- read_csv("data/dfs.csv")
colnames(dfs)
dfs <- select(dfs, -starts_with("Q"))
colnames(dfs)
write_csv(dfs, 'data/dfs.csv')
library(readr)
qpj <- read_csv("data/qpj.csv")
View(qpj)
qpj <- select(qpj, -starts_with("cenario"))
colnames(qpj)
write_csv(qpj, 'data/qpj.csv')
library(readr)
fss <- read_csv("data/fss.csv")
View(fss)
library(readr)
qpj <- read_csv("data/qpj.csv")
View(qpj)
library(readr)
dfs <- read_csv("data/dfs.csv")
View(dfs)
dat <- merge(dfs, fss)
colnames(dat)
colnames(dfs)
colnames(fss)
dfs <- read_csv('data/dfs.csv')
fss <- read_csv('data/fss.csv')
dat <- merge(dfs, fss, by=c('UserID','cenario'))
View(dat)
?merge
dat <- merge(dfs, fss, by=c('UserID','cenario'), suffixes = c(".dfs",".fss"))
View(dat)
dfs <- read_csv('data/dfs.csv')
fss <- read_csv('data/fss.csv')
dat <- merge(dfs, fss, by=c('UserID','cenario'), suffixes = c(".dfs",".fss"))
dfs <- read_csv('data/dfs.csv')
fss <- read_csv('data/fss.csv')
dat <- merge(dfs, fss, by=c('UserID','cenario'), suffixes = c(".dfs",".fss"))
View(dat)
write_csv(dat, "data/dfs-fss.csv")
View(dat)
dfs_fss <- read_csv('data/dfs-fss.csv')
qpj <- read_csv('data/qpj.csv')
colnames(dfs_fss)
colnames(qpj)
dat <- merge(qpj, dfs_fss)
View(dat)
dat <- merge(qpj, dfs_fss)
data <- select(dat, starts_with("UserID"), starts_with("cenario"))
dat <- merge(data, dat)
View(dat)
write_csv(dat, "data/qpj-dfs-fss.csv")
data
norm(12)
?norm
?Random
runif(30)
?runif
runif(30, 1, 100)
integer(runif(30, 1, 100))
floor(runif(30, 1, 100))
data$pontos <- floor(runif(nrow(data), 100, 500))
data
data[["tempo.permanencia"]] <- floor(runif(nrow(data), 1000, 5000))
data[["tentativas"]] <- floor(runif(nrow(data), 300, 500))
data[["submissoes"]] <- floor(runif(nrow(data), 200, 400))
data[["rep.erradas"]] <- floor(runif(nrow(data), 10, 40))
data[["escolhas"]] <- floor(runif(nrow(data), 1, 20))
write_csv(data, 'data/engagement.csv')
View(data)
View(data)
merge(qpj, data)
qpj_eng <- merge(qpj, data)
data <- select(dat, starts_with("UserID"), starts_with("cenario"))
merge(data, qpj_eng)
dat <- merge(data, qpj_eng)
View(dat)
write_csv(dat, 'data/qpj-engagement.csv')
engagement <- read_csv('data/engagement.csv')
dat2 <- merge(dfs, engagement)
View(dat2)
View(dat2)
View(dat2)
write_csv(dat2, 'data/dfs-engagement.csv')
dat3 <- merge(qpj, dfs)
View(dat3)
colnames(qpj)
qpj <- select(qpj, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao"))
dat3 <- merge(dfs[,c("UserID","cenario")], qpj)
dat3 <- merge(dat3, dfs)
dat3 <- merge(dat3, engagement)
View(dat3)
View(dat3)
write_csv(dat3, 'data/qpj-dfs-engagament.csv')
data <- select(dat3, starts_with("UserID"), starts_with("cenario"))
data
data[["pos.nota"]] <- runif(nrow(data), 5, 10)
data
data[["pre.nota"]] <- runif(nrow(data), 1, 5)
data[["dif.nota"]] <- data$pos.nota - data$pre.nota
data
write_csv(data, "data/prepos.csv")
dat <- select(dat3, starts_with("UserID"), starts_with("cenario"))
dat <- select(data, starts_with("UserID"), starts_with("cenario"))
dat <- select(data, starts_with("UserID"), starts_with("cenario"))
dat <- merge(dat, qpj)
dat <- merge(dat, data)
View(dat)
write(dat, 'data/qpj-prepos.csv')
write_csv(dat, 'data/qpj-prepos.csv')
dat <- select(data, starts_with("UserID"), starts_with("cenario"))
dat <- merge(dat, qpj)
dat <- select(data, starts_with("UserID"), starts_with("cenario"))
dat <- merge(dat, dfs)
dat <- merge(dat, data)
write_csv(dat, 'data/dfs-prepos.csv')
colnames(dat)
dat <- select(data, starts_with("UserID"), starts_with("cenario"))
dat <- merge(dat, qpj)
dat <- merge(dat, dfs)
dat <- merge(dat, data)
dat
colnames(dat)
write_csv(dat, 'data/qpj-dfs-prepos.csv')
View(dat)
library(readr)
participants <- read_csv("raw-data/participants.csv")
View(participants)
library(readr)
qpj <- read_csv("data/qpj.csv")
View(qpj)
library(readr)
qpj_prepos <- read_csv("data/qpj-prepos.csv")
View(qpj_prepos)
dat <- merge(qpj, qpj_prepos)
View(dat)
library(readr)
participants <- read_csv("data/participants.csv")
View(participants)
par <- dat[,c("UserID","cenario")]
par
write_csv(par, "data/participants.csv")
library(readr)
participants <- read_csv("raw-data/participants.csv")
View(participants)
library(readr)
participants <- read_csv("raw-data/participants.csv")
View(participants)
dat <- merge(participants, par)
View(dat)
par
participants
dat <- cbind(participants, par)
nrow(participants)
nrow(par)
library(readr)
dfs_careless <- read_csv("data/dfs-careless.csv")
View(dfs_careless)
dfs_careless <- read_csv("data/dfs-careless.csv")
View(dfs_careless)
library(readr)
survey_dfs <- read_csv("data/survey-dfs.csv")
View(survey_dfs)
dfs_careless <- read_csv("data/dfs-careless.csv")
survey_dfs <- read_csv("data/survey-dfs.csv")
View(dfs_careless)
View(survey_dfs)
library(readr)
dfs <- read_csv("data/dfs.csv")
View(dfs)
dfs_careless <- read_csv("data/dfs-careless.csv")
survey_dfs <- read_csv("data/survey-dfs.csv")
dfs <- read_csv("data/dfs.csv")
View(dfs)
dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
dat
?merge
dat <- merge(dfs, dat, by="UserID", all.x = T, all.y = F)
View(dat)
dfs_careless
View(dat)
dfs_careless <- read_csv("data/dfs-careless.csv")
survey_dfs <- read_csv("data/survey-dfs.csv")
dfs <- read_csv("data/dfs.csv")
dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
dat <- merge(dat, dfs, by="UserID", all.x = T, all.y = F)
View(dat)
dfs_careless <- read_csv("data/dfs-careless.csv")
survey_dfs <- read_csv("data/survey-dfs.csv")
dfs <- read_csv("data/dfs.csv")
dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
dat <- merge(dfs, dat, by="UserID", all.x = F, all.y = T)
dfs_careless <- read_csv("data/dfs-careless.csv")
survey_dfs <- read_csv("data/survey-dfs.csv")
dfs <- read_csv("data/dfs.csv")
dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
tmp <- rbind(dfs, dfs_careless)
colnames(dfs)
colnames(dfs_careless)
dfs_careless <- read_csv("data/dfs-careless.csv")
survey_dfs <- read_csv("data/survey-dfs.csv")
dfs <- read_csv("data/dfs.csv")
dat <- select(survey_dfs, starts_with("UserID"), starts_with("Q"))
tmp <- rbind(dfs, select(dfs_careless, starts_with("UserID"), starts_with("cenario"), starts_with("media"), starts_with("dimensao")))
dat <- merge(tmp, dat, by="UserID", all.x = F, all.y = T)
write_csv(dat, "data/survey-dfs.csv")
fss_careless <- read_csv("data/fss-careless.csv")
survey_fss <- read_csv("data/survey-fss.csv")
fss <- read_csv("data/fss.csv")
dat <- select(survey_fss, starts_with("UserID"), starts_with("Q"))
tmp <- rbind(fss, select(fss_careless, starts_with("UserID"), starts_with("cenario"), starts_with("media"), starts_with("dimensao")))
View(tmp)
dat <- merge(tmp, dat, by="UserID", all.x = F, all.y = T)
View(dat)
dat <- dat[which(is.na(dat$cenario)),]
dat <- select(survey_fss, starts_with("UserID"), starts_with("Q"))
tmp <- rbind(fss, select(fss_careless, starts_with("UserID"), starts_with("cenario"), starts_with("media"), starts_with("dimensao")))
dat <- merge(tmp, dat, by="UserID", all.x = F, all.y = T)
dat <- dat[which(!is.na(dat$cenario)),]
write_csv(dat, "data/survey-fss.csv")
qpj_careless <- read_csv("data/qpj-careless.csv")
survey_qpj <- read_csv("data/survey-qpj.csv")
qpj <- read_csv("data/qpj.csv")
dat <- select(survey_qpj, starts_with("UserID"), starts_with("Item"))
qpj_careless
qpj_careless <- read_csv("data/qpj-careless.csv")
survey_qpj <- read_csv("data/survey-qpj.csv")
qpj <- read_csv("data/qpj.csv")
dat <- select(survey_qpj, starts_with("UserID"), starts_with("Item"))
tmp <- rbind(qpj, select(qpj_careless, starts_with("UserID"), starts_with("cenario"), starts_with("Item")))
qpj
qpj_careless <- read_csv("data/qpj-careless.csv")
survey_qpj <- read_csv("data/survey-qpj.csv")
qpj <- read_csv("data/qpj.csv")
survey_qpj
qpj_careless <- read_csv("data/qpj-careless.csv")
survey_qpj <- read_csv("data/survey-qpj.csv")
qpj <- read_csv("data/qpj.csv")
dat <- select(survey_qpj, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao"), starts_with("Item"))
qpj_careless
qpj
tmp <- rbind(qpj, select(qpj_careless, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao")))
tmp
dat <- merge(tmp, dat, by="UserID", all.x = F, all.y = T)
qpj_careless <- read_csv("data/qpj-careless.csv")
survey_qpj <- read_csv("data/survey-qpj.csv")
qpj <- read_csv("data/qpj.csv")
dat <- select(survey_qpj, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao"), starts_with("Item"))
tmp <- rbind(qpj, select(qpj_careless, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao")))
tmp
dat <- merge(select(tmp, starts_with("UserID")), dat, by="UserID", all.x = F, all.y = T)
dat <- dat[which(!is.na(dat$cenario)),]
qpj_careless <- read_csv("data/qpj-careless.csv")
survey_qpj <- read_csv("data/survey-qpj.csv")
qpj <- read_csv("data/qpj.csv")
dat <- select(survey_qpj, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao"), starts_with("Item"))
tmp <- rbind(qpj, select(qpj_careless, starts_with("UserID"), starts_with("realizacao"), starts_with("social"), starts_with("imersao")))
dat <- merge(select(tmp, starts_with("UserID")), dat, by="UserID", all.x = F, all.y = T)
write_csv(dat, "data/survey-qpj.csv")
library(readr)
survey_dfs <- read_csv("data/survey-dfs.csv")
survey_fss <- read_csv("data/survey-fss.csv")
survey_qpj <- read_csv("data/survey-qpj.csv")
